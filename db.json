{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/elmtodo/Task.elm","path":"elmtodo/Task.elm","modified":0,"renderable":0},{"_id":"source/elmtodo/Todo.elm","path":"elmtodo/Todo.elm","modified":0,"renderable":0},{"_id":"source/images/iterm-autocomplete.png","path":"images/iterm-autocomplete.png","modified":0,"renderable":0},{"_id":"source/images/xiaolai.jpg","path":"images/xiaolai.jpg","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/images/iterm-pastehistory.png","path":"images/iterm-pastehistory.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/open-with-sublime-applescript.png","path":"images/open-with-sublime-applescript.png","modified":0,"renderable":0},{"_id":"source/images/ubuLOF1.gif","path":"images/ubuLOF1.gif","modified":0,"renderable":0},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/keybase.txt","path":"keybase.txt","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"ff272d147d37f1e20124739da30203fc3ede82af","modified":1464456292000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1464456722000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1464456722000},{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1464456722000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1464456722000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1464456722000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1464456722000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1464456722000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1464456722000},{"_id":"themes/next/_config.yml","hash":"7ec0e3e648737ec8a48f3da3c2b97037024f5670","modified":1464456722000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1464456722000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1464456722000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1464456722000},{"_id":"source/_posts/iterm.md","hash":"2617aefe9a75fd9ad5eaee6f3f419a9fd35e3147","modified":1464456292000},{"_id":"source/_posts/hello-world.md","hash":"c9571f0bba18055528d7ed8eceb816e97aa9e1cd","modified":1464456292000},{"_id":"source/_posts/publish-an-npm-package.md","hash":"b955eefd469dd1c33b81001b433e61d002341cdc","modified":1464456292000},{"_id":"source/_posts/elm-lang.md","hash":"d027d403ea8dd4586814ae831a56cd68762951f9","modified":1464460214000},{"_id":"source/_posts/sublimetext-tutorial.md","hash":"5d29b94e9ed66323070a2cc3c433afbe686798a6","modified":1464542002000},{"_id":"source/elmtodo/Task.elm","hash":"33656c32d5491128599065328b9aa4bbe4372235","modified":1464456387000},{"_id":"source/elmtodo/Todo.elm","hash":"9bb9cc016b825f874dc893742b88b4f05e3f3245","modified":1464456387000},{"_id":"source/elmtodo/index.html","hash":"bf7797286002f80184d361ca73018840c02cfa54","modified":1464459657000},{"_id":"source/images/iterm-autocomplete.png","hash":"df0729a90a048146ba664b62be0815b16d9b0e73","modified":1464456292000},{"_id":"source/images/xiaolai.jpg","hash":"d461f1ac9f7d8acae2557a0f9d78a786fd0da163","modified":1464456292000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1464456722000},{"_id":"source/tags/index.md","hash":"977e7978cac50058df6fc505566ed91c8006317e","modified":1464456292000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1464456722000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1464456687000},{"_id":"themes/next/.git/index","hash":"62a3e4656162e438af4341e568347d90417649bd","modified":1464456731000},{"_id":"themes/next/.git/packed-refs","hash":"be447428f5e503aeedaed06e24f93e3e913f87fc","modified":1464456722000},{"_id":"source/favicon.ico","hash":"785e9066e2b823124818b2b0c14c73790c908de0","modified":1464456292000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1464456722000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1464456722000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1464456722000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1464456722000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1464456722000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1464456722000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1464456722000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1464456722000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1464456722000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1464456722000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1464456722000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1464456722000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1464456722000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1464456722000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1464456722000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1464456722000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1464456722000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1464456722000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1464456722000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1464456722000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1464456722000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1464456722000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1464456722000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1464456722000},{"_id":"source/_posts/sublimetext.md","hash":"10e5e5dcd28bf19b1427b8f27decf3def5702a60","modified":1464456292000},{"_id":"source/about/index.md","hash":"6ae84b9c7b8a98b952700f89b9522fe6eadb9f77","modified":1464456292000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"source/images/iterm-pastehistory.png","hash":"0bc8b521a354ae26e4056fd2b8540def579eacba","modified":1464456292000},{"_id":"source/elmtodo/todomvc-common/base.css","hash":"2526213afba93a8416dbe1fe976654533d8e2e26","modified":1464456387000},{"_id":"source/elmtodo/todomvc-app-css/index.css","hash":"e3c2ecbb44c3594be846d983c5fc59f2b20c58b8","modified":1464456387000},{"_id":"source/elmtodo/todomvc-common/base.js","hash":"123d3c56e84c54c6ff745d8dc4c2418ba668a6af","modified":1464456387000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1464456687000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1464456687000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1464456687000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1464456687000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1464456687000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1464456687000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1464456687000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1464456687000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1464456687000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1464456687000},{"_id":"themes/next/.git/logs/HEAD","hash":"1180114ff9ad2e64c0d76aecb1c4a754a7ca0388","modified":1464456722000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1464456722000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1464456722000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1464456722000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1464456722000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1464456722000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1464456722000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1464456722000},{"_id":"themes/next/layout/_partials/head.swig","hash":"f83b1c55bedd2c1a3eb734c72c6997795a4e5f99","modified":1464456722000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1464456722000},{"_id":"themes/next/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1464456722000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1464456722000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1464456722000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1464456722000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1464456722000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1464456722000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1464456722000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1464456722000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1464456722000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1464456722000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1464456722000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1464456722000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1464456722000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1464456722000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1464456722000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1464456722000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1464456722000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1464456722000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1464456722000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464456722000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464456722000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1464456722000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1464456722000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1464456722000},{"_id":"source/images/open-with-sublime-applescript.png","hash":"d4968a2f8bcb179e8020224b7980d938c86d61a8","modified":1464456292000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464456722000},{"_id":"source/elmtodo/elm.js","hash":"26a71e0564d5f5df20fba363dc14e01537b9c9c7","modified":1464456387000},{"_id":"source/images/ubuLOF1.gif","hash":"18a7da052da36e94211840e45bfd4ff3ace42c5c","modified":1464456292000},{"_id":"themes/next/.git/refs/heads/master","hash":"fc518af540f4e61202cb7bffda64042b1fc9b0a0","modified":1464456722000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1464456722000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1464456722000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1464456722000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1464456722000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1464456722000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1464456722000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1464456722000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1464456722000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1464456722000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1464456722000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1464456722000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1464456722000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1464456722000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1464456722000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1464456722000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1464456722000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1464456722000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1464456722000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1464456722000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1464456722000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1464456722000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1464456722000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1464456722000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1464456722000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1180114ff9ad2e64c0d76aecb1c4a754a7ca0388","modified":1464456722000},{"_id":"themes/next/.git/objects/pack/pack-e4dfe9362d435776264d3b11a19d603e9b6b4344.idx","hash":"5ecd3197ae28c6d13ebd9e9da47378e7cbe9156d","modified":1464456722000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1464456722000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1464456722000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1464456722000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1464456722000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1464456722000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1464456722000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1464456722000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1464456722000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1464456722000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1464456722000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1464456722000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1464456722000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1464456722000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1180114ff9ad2e64c0d76aecb1c4a754a7ca0388","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1464456722000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1464456722000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1464456722000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1464456722000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1464456722000},{"_id":"themes/next/.git/objects/pack/pack-e4dfe9362d435776264d3b11a19d603e9b6b4344.pack","hash":"596e63435454fcccb7cb3b6ee8b6e5c9c2e1c1be","modified":1464456722000},{"_id":"public/elmtodo/todomvc-common/base.css","hash":"2526213afba93a8416dbe1fe976654533d8e2e26","modified":1465013906226},{"_id":"public/elmtodo/todomvc-app-css/index.css","hash":"60124402508afc71abf6f249940f546d6da2866b","modified":1465013906229},{"_id":"public/elmtodo/todomvc-common/base.js","hash":"e187348d6ed502fd401004da9f7753ce03bde357","modified":1465013906229},{"_id":"public/elmtodo/elm.js","hash":"77ad3757bcbe33c912501f61943df81bc3c4c0c7","modified":1465013906229},{"_id":"public/elmtodo/index.html","hash":"8c32da4fa4c20adbc8ac94dd8214480e65d2c4da","modified":1465016667519},{"_id":"public/tags/index.html","hash":"367c5cfc0f1fb5545dde88c9c3b4ee0074c0e84f","modified":1465016667519},{"_id":"public/about/index.html","hash":"ed1fe17971107fec9f91ec4688a75aca33783be4","modified":1465016667519},{"_id":"public/posts/2016/05/28/elm-lang/index.html","hash":"1c331b48ac811b89ea490f3b5ecabb30657fa09e","modified":1465016667519},{"_id":"public/posts/2016/05/23/publish-an-npm-package/index.html","hash":"4a98ebf7c22feb83ad4699750c5c7a8fc52abcc2","modified":1465016667520},{"_id":"public/posts/2016/05/21/iterm/index.html","hash":"939c04b5711221d512ca37f3a5de0377cb821f7e","modified":1465016667520},{"_id":"public/posts/2016/05/18/hello-world/index.html","hash":"59dc463aedb30cff674fdd6a75e6c5ca3e9d3e9a","modified":1465016667520},{"_id":"public/archives/index.html","hash":"9ac09baa476ac04ac2362096de74ca6ac892a136","modified":1465016667520},{"_id":"public/archives/2016/index.html","hash":"9ac09baa476ac04ac2362096de74ca6ac892a136","modified":1465016667520},{"_id":"public/archives/2016/05/index.html","hash":"9ac09baa476ac04ac2362096de74ca6ac892a136","modified":1465016667520},{"_id":"public/tags/工具/index.html","hash":"2ad2d82fef64cf683d2bfeb5ffef2495a2b1fc34","modified":1465016667520},{"_id":"public/tags/npm/index.html","hash":"5016582c7c8f2789a4a9e0112ecfb86d2bf365ed","modified":1465016667520},{"_id":"public/tags/未分类/index.html","hash":"4ba68210b6238d37fce4b03748a71934d0ffe828","modified":1465016667520},{"_id":"public/tags/language/index.html","hash":"ce33997949a01898661def6027e8d809b9ef190f","modified":1465016667520},{"_id":"public/tags/sublimetext-texteditor-puretext/index.html","hash":"064d5b59e096c21a7d9cb5ba86091d487ed584ad","modified":1465016667520},{"_id":"public/posts/2016/05/25/sublimetext-tutorial/index.html","hash":"14411cd8e26853a5c663c5873399ca5cd5f98196","modified":1465016667521},{"_id":"public/posts/2016/05/19/sublimetext/index.html","hash":"521df737daf615b6b1b1b70a280d01e884b22d4e","modified":1465016667521},{"_id":"public/index.html","hash":"90978d1738d6b42fc8ff79393b7d65b80d371d42","modified":1465016667520},{"_id":"public/CNAME","hash":"ff272d147d37f1e20124739da30203fc3ede82af","modified":1465013906252},{"_id":"public/elmtodo/Task.elm","hash":"33656c32d5491128599065328b9aa4bbe4372235","modified":1465013906252},{"_id":"public/elmtodo/Todo.elm","hash":"9bb9cc016b825f874dc893742b88b4f05e3f3245","modified":1465013906252},{"_id":"public/images/xiaolai.jpg","hash":"d461f1ac9f7d8acae2557a0f9d78a786fd0da163","modified":1465013906252},{"_id":"public/images/iterm-autocomplete.png","hash":"df0729a90a048146ba664b62be0815b16d9b0e73","modified":1465013906252},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1465013906252},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1465013906252},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1465013906252},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1465013906252},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1465013906252},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1465013906252},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1465013906252},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1465013906252},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1465013906252},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1465013906252},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1465013906252},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1465013906252},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1465013906252},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1465013906252},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1465013906252},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1465013906252},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1465013906252},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1465013906252},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1465013906252},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1465013906252},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1465013906252},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1465013906252},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1465013906252},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1465013906252},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1465013907120},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1465013907123},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1465013907123},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1465013907127},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1465013907127},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1465013907127},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1465013907127},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1465013907127},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1465013907127},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1465013907127},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1465013907127},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1465013907127},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1465013907127},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1465013907127},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1465013907127},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1465013907127},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1465013907127},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1465013907127},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1465013907127},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1465013907127},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1465013907127},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1465013907127},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1465013907127},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1465013907127},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1465013907127},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1465013907127},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1465013907128},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1465013907128},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1465013907128},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1465013907128},{"_id":"public/css/main.css","hash":"b42f467f59d48e6ef8422ddb510168097b92710f","modified":1465013907128},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1465013907128},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1465013907128},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1465013907128},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1465013907128},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1465013907128},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1465013907128},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1465013907128},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1465013907128},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1465013907128},{"_id":"public/favicon.ico","hash":"785e9066e2b823124818b2b0c14c73790c908de0","modified":1465013907128},{"_id":"public/images/iterm-pastehistory.png","hash":"0bc8b521a354ae26e4056fd2b8540def579eacba","modified":1465013907128},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1465013907128},{"_id":"public/images/open-with-sublime-applescript.png","hash":"d4968a2f8bcb179e8020224b7980d938c86d61a8","modified":1465013907129},{"_id":"public/images/ubuLOF1.gif","hash":"18a7da052da36e94211840e45bfd4ff3ace42c5c","modified":1465013907131},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1465013907133},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1465016525000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1465016525000},{"_id":"themes/maupassant/README.md","hash":"0e271dc27e3e6cfc467baccec8c86bd5dfa3cefc","modified":1465016525000},{"_id":"themes/maupassant/_config.yml","hash":"778701dfc6bde6d1e40c965053be2d68e9881197","modified":1465016525000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1465016525000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1465016525000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1465016525000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1465016520000},{"_id":"themes/maupassant/.git/index","hash":"d92cd7cbc332f852f6b1dc332aeb70b9ce77f895","modified":1465016525000},{"_id":"themes/maupassant/.git/packed-refs","hash":"e3cb7fdef9a716ec7720ef1fc4fe71e6e900895e","modified":1465016525000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1465016525000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1465016525000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1465016525000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1465016525000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1465016525000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1465016525000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1465016525000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1465016525000},{"_id":"themes/maupassant/layout/base.jade","hash":"6af2f0978ba3bd75b5d1ca4120fcaf0b9bdaf74d","modified":1465016525000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1465016525000},{"_id":"themes/maupassant/layout/index.jade","hash":"7466ce52023ed8a413a6b4461354a9e20e62fc14","modified":1465016525000},{"_id":"themes/maupassant/layout/post.jade","hash":"9cf29fb0daed95935154ce0fa2b154df5a9b11b1","modified":1465016525000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1465016525000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1465016520000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1465016520000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1465016520000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"e3530795f5e19988dac4b3f51b362b0efe242fc6","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"c53ac5e5d44fa99705ae0e212435095e493ea65e","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1465016525000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"aa020b794e697e8e9612530c97c6295efde469fe","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1465016525000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1465016525000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1465016525000},{"_id":"themes/maupassant/source/css/style.scss","hash":"79e83709c3b7126e105beaa6f3918370969bb1af","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1465016525000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1465016525000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1465016525000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1465016525000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1465016525000},{"_id":"themes/maupassant/source/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1465016525000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1465016525000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1465016525000},{"_id":"themes/maupassant/.git/objects/pack/pack-2ade05fd3ba7d4928558adcbb90a7597fdf1397d.idx","hash":"7a35d5df68966ca8d2801631e321d483751ca65b","modified":1465016525000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"8f5cebc785d2fe0fb16a1cb94260b56963d4c19b","modified":1465016525000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"e3530795f5e19988dac4b3f51b362b0efe242fc6","modified":1465016525000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1465016525000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"e3530795f5e19988dac4b3f51b362b0efe242fc6","modified":1465016525000},{"_id":"themes/maupassant/.git/objects/pack/pack-2ade05fd3ba7d4928558adcbb90a7597fdf1397d.pack","hash":"c9b372278548837edfb11e4e407dc79e543aa0f7","modified":1465016525000},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1465016667523},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1465016667523},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1465016667523},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1465016667523},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1465016667523},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1465016667523},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1465016667541},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1465016667541},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1465016667541},{"_id":"public/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1465016667541},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1465016667541},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1465016667541},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1465016667541},{"_id":"public/css/style.css","hash":"5e031463c49be0e099889655aaec8538d489b43d","modified":1465016667541},{"_id":"source/keybase.txt","hash":"9bdcd7a0cc4031064dacdb0d5ae091484a31f702","modified":1479403158000},{"_id":"public/keybase.txt","hash":"9bdcd7a0cc4031064dacdb0d5ae091484a31f702","modified":1479403186955}],"Category":[],"Data":[],"Page":[{"_content":"<!doctype html>\n<html lang=\"en\" data-framework=\"elm\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>Elm • TodoMVC</title>\n\t<link rel=\"stylesheet\" href=\"todomvc-common/base.css\">\n\t<link rel=\"stylesheet\" href=\"todomvc-app-css/index.css\">\n\t<style>\n\t\tbody {\n\t\t\twidth: auto;\n\t\t}\n\t\t.todomvc-wrapper {\n\t\t\tvisibility: visible !important;\n\t\t}\n\t</style>\n</head>\n\n<body>\n<script src=\"elm.js\"></script>\n<script>\n\t(function () {\n\t\tvar result = localStorage.getItem('elm-todo-model');\n\t\tvar savedModel = result ? JSON.parse(result) : null;\n\n\t\tvar todomvc = Elm.fullscreen(Elm.Todo, {\n\t\t\tsavedModel: savedModel,\n\t\t\troute: getRoute()\n\t\t});\n\n\t\ttodomvc.ports.save.subscribe(function (model) {\n\t\t\tlocalStorage.setItem('elm-todo-model', JSON.stringify(model));\n\t\t});\n\n\t\t// Routing\n\t\twindow.addEventListener('popstate', function () {\n\t\t\ttodomvc.ports.route.send(getRoute());\n\t\t}, false);\n\n\t\tfunction getRoute() {\n\t\t\tvar hash = location.href.split('#')[1] || '';\n\t\t\tvar route = hash.replace('/', '');\n\t\t\tif (['all', 'active', 'completed'].indexOf(route) >= 0) {\n\t\t\t\treturn route[0].toUpperCase() + route.substr(1);\n\t\t\t}\n\t\t\treturn 'All';\n\t\t}\n\n\t\t// Setting focus manually\n\t\ttodomvc.ports.focus.subscribe(function (id) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (id === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar node = document.getElementById('todo-' + id);\n\t\t\t\tif (document.activeElement !== node) {\n\t\t\t\t\tnode.focus();\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t});\n\t}());\n</script>\n<script async src=\"node_modules/todomvc-common/base.js\"></script>\n</body>\n</html>\n","source":"elmtodo/index.html","raw":"<!doctype html>\n<html lang=\"en\" data-framework=\"elm\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>Elm • TodoMVC</title>\n\t<link rel=\"stylesheet\" href=\"todomvc-common/base.css\">\n\t<link rel=\"stylesheet\" href=\"todomvc-app-css/index.css\">\n\t<style>\n\t\tbody {\n\t\t\twidth: auto;\n\t\t}\n\t\t.todomvc-wrapper {\n\t\t\tvisibility: visible !important;\n\t\t}\n\t</style>\n</head>\n\n<body>\n<script src=\"elm.js\"></script>\n<script>\n\t(function () {\n\t\tvar result = localStorage.getItem('elm-todo-model');\n\t\tvar savedModel = result ? JSON.parse(result) : null;\n\n\t\tvar todomvc = Elm.fullscreen(Elm.Todo, {\n\t\t\tsavedModel: savedModel,\n\t\t\troute: getRoute()\n\t\t});\n\n\t\ttodomvc.ports.save.subscribe(function (model) {\n\t\t\tlocalStorage.setItem('elm-todo-model', JSON.stringify(model));\n\t\t});\n\n\t\t// Routing\n\t\twindow.addEventListener('popstate', function () {\n\t\t\ttodomvc.ports.route.send(getRoute());\n\t\t}, false);\n\n\t\tfunction getRoute() {\n\t\t\tvar hash = location.href.split('#')[1] || '';\n\t\t\tvar route = hash.replace('/', '');\n\t\t\tif (['all', 'active', 'completed'].indexOf(route) >= 0) {\n\t\t\t\treturn route[0].toUpperCase() + route.substr(1);\n\t\t\t}\n\t\t\treturn 'All';\n\t\t}\n\n\t\t// Setting focus manually\n\t\ttodomvc.ports.focus.subscribe(function (id) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (id === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar node = document.getElementById('todo-' + id);\n\t\t\t\tif (document.activeElement !== node) {\n\t\t\t\t\tnode.focus();\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t});\n\t}());\n</script>\n<script async src=\"node_modules/todomvc-common/base.js\"></script>\n</body>\n</html>\n","date":"2016-05-28T18:20:57.000Z","updated":"2016-05-28T18:20:57.000Z","path":"elmtodo/index.html","title":"","comments":1,"layout":"page","_id":"cip0ngbp70001x9ltmr3tkgkd","content":"<!doctype html>\n<html lang=\"en\" data-framework=\"elm\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>Elm • TodoMVC</title>\n\t<link rel=\"stylesheet\" href=\"todomvc-common/base.css\">\n\t<link rel=\"stylesheet\" href=\"todomvc-app-css/index.css\">\n\t<style>\n\t\tbody {\n\t\t\twidth: auto;\n\t\t}\n\t\t.todomvc-wrapper {\n\t\t\tvisibility: visible !important;\n\t\t}\n\t</style>\n</head>\n\n<body>\n<script src=\"elm.js\"></script>\n<script>\n\t(function () {\n\t\tvar result = localStorage.getItem('elm-todo-model');\n\t\tvar savedModel = result ? JSON.parse(result) : null;\n\n\t\tvar todomvc = Elm.fullscreen(Elm.Todo, {\n\t\t\tsavedModel: savedModel,\n\t\t\troute: getRoute()\n\t\t});\n\n\t\ttodomvc.ports.save.subscribe(function (model) {\n\t\t\tlocalStorage.setItem('elm-todo-model', JSON.stringify(model));\n\t\t});\n\n\t\t// Routing\n\t\twindow.addEventListener('popstate', function () {\n\t\t\ttodomvc.ports.route.send(getRoute());\n\t\t}, false);\n\n\t\tfunction getRoute() {\n\t\t\tvar hash = location.href.split('#')[1] || '';\n\t\t\tvar route = hash.replace('/', '');\n\t\t\tif (['all', 'active', 'completed'].indexOf(route) >= 0) {\n\t\t\t\treturn route[0].toUpperCase() + route.substr(1);\n\t\t\t}\n\t\t\treturn 'All';\n\t\t}\n\n\t\t// Setting focus manually\n\t\ttodomvc.ports.focus.subscribe(function (id) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (id === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar node = document.getElementById('todo-' + id);\n\t\t\t\tif (document.activeElement !== node) {\n\t\t\t\t\tnode.focus();\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t});\n\t}());\n</script>\n<script async src=\"node_modules/todomvc-common/base.js\"></script>\n</body>\n</html>\n","excerpt":"","more":"<!doctype html>\n<html lang=\"en\" data-framework=\"elm\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>Elm • TodoMVC</title>\n\t<link rel=\"stylesheet\" href=\"todomvc-common/base.css\">\n\t<link rel=\"stylesheet\" href=\"todomvc-app-css/index.css\">\n\t<style>\n\t\tbody {\n\t\t\twidth: auto;\n\t\t}\n\t\t.todomvc-wrapper {\n\t\t\tvisibility: visible !important;\n\t\t}\n\t</style>\n</head>\n\n<body>\n<script src=\"elm.js\"></script>\n<script>\n\t(function () {\n\t\tvar result = localStorage.getItem('elm-todo-model');\n\t\tvar savedModel = result ? JSON.parse(result) : null;\n\n\t\tvar todomvc = Elm.fullscreen(Elm.Todo, {\n\t\t\tsavedModel: savedModel,\n\t\t\troute: getRoute()\n\t\t});\n\n\t\ttodomvc.ports.save.subscribe(function (model) {\n\t\t\tlocalStorage.setItem('elm-todo-model', JSON.stringify(model));\n\t\t});\n\n\t\t// Routing\n\t\twindow.addEventListener('popstate', function () {\n\t\t\ttodomvc.ports.route.send(getRoute());\n\t\t}, false);\n\n\t\tfunction getRoute() {\n\t\t\tvar hash = location.href.split('#')[1] || '';\n\t\t\tvar route = hash.replace('/', '');\n\t\t\tif (['all', 'active', 'completed'].indexOf(route) >= 0) {\n\t\t\t\treturn route[0].toUpperCase() + route.substr(1);\n\t\t\t}\n\t\t\treturn 'All';\n\t\t}\n\n\t\t// Setting focus manually\n\t\ttodomvc.ports.focus.subscribe(function (id) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (id === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar node = document.getElementById('todo-' + id);\n\t\t\t\tif (document.activeElement !== node) {\n\t\t\t\t\tnode.focus();\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t});\n\t}());\n</script>\n<script async src=\"node_modules/todomvc-common/base.js\"></script>\n</body>\n</html>\n"},{"title":"分类标签","date":"2016-05-23T06:23:54.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 分类标签\ndate: 2016-05-23 14:23:54\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-05-28T17:24:52.000Z","path":"tags/index.html","layout":"page","_id":"cip0ngbrz000gx9lthwlluocz","content":"","excerpt":"","more":""},{"title":"关于李笑来","date":"2016-05-23T06:25:04.000Z","_content":"\n李笑来\n===\n\n终生只有一个职业：学生\n\n著作\n===\n> - 把时间当做朋友\n> - 新生——七年就是一辈子\n> - 人人都能用英语","source":"about/index.md","raw":"---\ntitle: 关于李笑来\ndate: 2016-05-23 14:25:04\n---\n\n李笑来\n===\n\n终生只有一个职业：学生\n\n著作\n===\n> - 把时间当做朋友\n> - 新生——七年就是一辈子\n> - 人人都能用英语","updated":"2016-05-28T17:24:52.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cip0ngbsj000ix9ltlrt9f2x0","content":"<h1 id=\"李笑来\"><a href=\"#李笑来\" class=\"headerlink\" title=\"李笑来\"></a>李笑来</h1><p>终生只有一个职业：学生</p>\n<h1 id=\"著作\"><a href=\"#著作\" class=\"headerlink\" title=\"著作\"></a>著作</h1><blockquote>\n<ul>\n<li>把时间当做朋友</li>\n<li>新生——七年就是一辈子</li>\n<li>人人都能用英语</li>\n</ul>\n</blockquote>\n","excerpt":"","more":"<h1 id=\"李笑来\"><a href=\"#李笑来\" class=\"headerlink\" title=\"李笑来\"></a>李笑来</h1><p>终生只有一个职业：学生</p>\n<h1 id=\"著作\"><a href=\"#著作\" class=\"headerlink\" title=\"著作\"></a>著作</h1><blockquote>\n<ul>\n<li>把时间当做朋友</li>\n<li>新生——七年就是一辈子</li>\n<li>人人都能用英语</li>\n</ul>\n</blockquote>\n"},{"_content":"hr {\n\tmargin: 20px 0;\n\tborder: 0;\n\tborder-top: 1px dashed #c5c5c5;\n\tborder-bottom: 1px dashed #f7f7f7;\n}\n\n.learn a {\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tcolor: #b83f45;\n}\n\n.learn a:hover {\n\ttext-decoration: underline;\n\tcolor: #787e7e;\n}\n\n.learn h3,\n.learn h4,\n.learn h5 {\n\tmargin: 10px 0;\n\tfont-weight: 500;\n\tline-height: 1.2;\n\tcolor: #000;\n}\n\n.learn h3 {\n\tfont-size: 24px;\n}\n\n.learn h4 {\n\tfont-size: 18px;\n}\n\n.learn h5 {\n\tmargin-bottom: 0;\n\tfont-size: 14px;\n}\n\n.learn ul {\n\tpadding: 0;\n\tmargin: 0 0 30px 25px;\n}\n\n.learn li {\n\tline-height: 20px;\n}\n\n.learn p {\n\tfont-size: 15px;\n\tfont-weight: 300;\n\tline-height: 1.3;\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n}\n\n#issue-count {\n\tdisplay: none;\n}\n\n.quote {\n\tborder: none;\n\tmargin: 20px 0 60px 0;\n}\n\n.quote p {\n\tfont-style: italic;\n}\n\n.quote p:before {\n\tcontent: '“';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\ttop: -20px;\n\tleft: 3px;\n}\n\n.quote p:after {\n\tcontent: '”';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\tbottom: -42px;\n\tright: 3px;\n}\n\n.quote footer {\n\tposition: absolute;\n\tbottom: -40px;\n\tright: 0;\n}\n\n.quote footer img {\n\tborder-radius: 3px;\n}\n\n.quote footer a {\n\tmargin-left: 5px;\n\tvertical-align: middle;\n}\n\n.speech-bubble {\n\tposition: relative;\n\tpadding: 10px;\n\tbackground: rgba(0, 0, 0, .04);\n\tborder-radius: 5px;\n}\n\n.speech-bubble:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 100%;\n\tright: 30px;\n\tborder: 13px solid transparent;\n\tborder-top-color: rgba(0, 0, 0, .04);\n}\n\n.learn-bar > .learn {\n\tposition: absolute;\n\twidth: 272px;\n\ttop: 8px;\n\tleft: -300px;\n\tpadding: 10px;\n\tborder-radius: 5px;\n\tbackground-color: rgba(255, 255, 255, .6);\n\ttransition-property: left;\n\ttransition-duration: 500ms;\n}\n\n@media (min-width: 899px) {\n\t.learn-bar {\n\t\twidth: auto;\n\t\tpadding-left: 300px;\n\t}\n\n\t.learn-bar > .learn {\n\t\tleft: 8px;\n\t}\n}\n","source":"elmtodo/todomvc-common/base.css","raw":"hr {\n\tmargin: 20px 0;\n\tborder: 0;\n\tborder-top: 1px dashed #c5c5c5;\n\tborder-bottom: 1px dashed #f7f7f7;\n}\n\n.learn a {\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tcolor: #b83f45;\n}\n\n.learn a:hover {\n\ttext-decoration: underline;\n\tcolor: #787e7e;\n}\n\n.learn h3,\n.learn h4,\n.learn h5 {\n\tmargin: 10px 0;\n\tfont-weight: 500;\n\tline-height: 1.2;\n\tcolor: #000;\n}\n\n.learn h3 {\n\tfont-size: 24px;\n}\n\n.learn h4 {\n\tfont-size: 18px;\n}\n\n.learn h5 {\n\tmargin-bottom: 0;\n\tfont-size: 14px;\n}\n\n.learn ul {\n\tpadding: 0;\n\tmargin: 0 0 30px 25px;\n}\n\n.learn li {\n\tline-height: 20px;\n}\n\n.learn p {\n\tfont-size: 15px;\n\tfont-weight: 300;\n\tline-height: 1.3;\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n}\n\n#issue-count {\n\tdisplay: none;\n}\n\n.quote {\n\tborder: none;\n\tmargin: 20px 0 60px 0;\n}\n\n.quote p {\n\tfont-style: italic;\n}\n\n.quote p:before {\n\tcontent: '“';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\ttop: -20px;\n\tleft: 3px;\n}\n\n.quote p:after {\n\tcontent: '”';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\tbottom: -42px;\n\tright: 3px;\n}\n\n.quote footer {\n\tposition: absolute;\n\tbottom: -40px;\n\tright: 0;\n}\n\n.quote footer img {\n\tborder-radius: 3px;\n}\n\n.quote footer a {\n\tmargin-left: 5px;\n\tvertical-align: middle;\n}\n\n.speech-bubble {\n\tposition: relative;\n\tpadding: 10px;\n\tbackground: rgba(0, 0, 0, .04);\n\tborder-radius: 5px;\n}\n\n.speech-bubble:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 100%;\n\tright: 30px;\n\tborder: 13px solid transparent;\n\tborder-top-color: rgba(0, 0, 0, .04);\n}\n\n.learn-bar > .learn {\n\tposition: absolute;\n\twidth: 272px;\n\ttop: 8px;\n\tleft: -300px;\n\tpadding: 10px;\n\tborder-radius: 5px;\n\tbackground-color: rgba(255, 255, 255, .6);\n\ttransition-property: left;\n\ttransition-duration: 500ms;\n}\n\n@media (min-width: 899px) {\n\t.learn-bar {\n\t\twidth: auto;\n\t\tpadding-left: 300px;\n\t}\n\n\t.learn-bar > .learn {\n\t\tleft: 8px;\n\t}\n}\n","date":"2016-05-28T17:26:27.000Z","updated":"2016-05-28T17:26:27.000Z","path":"elmtodo/todomvc-common/base.css","layout":"false","title":"","comments":1,"_id":"cip0ngbtc000kx9lt9eac9753","content":"hr {\n\tmargin: 20px 0;\n\tborder: 0;\n\tborder-top: 1px dashed #c5c5c5;\n\tborder-bottom: 1px dashed #f7f7f7;\n}\n\n.learn a {\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tcolor: #b83f45;\n}\n\n.learn a:hover {\n\ttext-decoration: underline;\n\tcolor: #787e7e;\n}\n\n.learn h3,\n.learn h4,\n.learn h5 {\n\tmargin: 10px 0;\n\tfont-weight: 500;\n\tline-height: 1.2;\n\tcolor: #000;\n}\n\n.learn h3 {\n\tfont-size: 24px;\n}\n\n.learn h4 {\n\tfont-size: 18px;\n}\n\n.learn h5 {\n\tmargin-bottom: 0;\n\tfont-size: 14px;\n}\n\n.learn ul {\n\tpadding: 0;\n\tmargin: 0 0 30px 25px;\n}\n\n.learn li {\n\tline-height: 20px;\n}\n\n.learn p {\n\tfont-size: 15px;\n\tfont-weight: 300;\n\tline-height: 1.3;\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n}\n\n#issue-count {\n\tdisplay: none;\n}\n\n.quote {\n\tborder: none;\n\tmargin: 20px 0 60px 0;\n}\n\n.quote p {\n\tfont-style: italic;\n}\n\n.quote p:before {\n\tcontent: '“';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\ttop: -20px;\n\tleft: 3px;\n}\n\n.quote p:after {\n\tcontent: '”';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\tbottom: -42px;\n\tright: 3px;\n}\n\n.quote footer {\n\tposition: absolute;\n\tbottom: -40px;\n\tright: 0;\n}\n\n.quote footer img {\n\tborder-radius: 3px;\n}\n\n.quote footer a {\n\tmargin-left: 5px;\n\tvertical-align: middle;\n}\n\n.speech-bubble {\n\tposition: relative;\n\tpadding: 10px;\n\tbackground: rgba(0, 0, 0, .04);\n\tborder-radius: 5px;\n}\n\n.speech-bubble:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 100%;\n\tright: 30px;\n\tborder: 13px solid transparent;\n\tborder-top-color: rgba(0, 0, 0, .04);\n}\n\n.learn-bar > .learn {\n\tposition: absolute;\n\twidth: 272px;\n\ttop: 8px;\n\tleft: -300px;\n\tpadding: 10px;\n\tborder-radius: 5px;\n\tbackground-color: rgba(255, 255, 255, .6);\n\ttransition-property: left;\n\ttransition-duration: 500ms;\n}\n\n@media (min-width: 899px) {\n\t.learn-bar {\n\t\twidth: auto;\n\t\tpadding-left: 300px;\n\t}\n\n\t.learn-bar > .learn {\n\t\tleft: 8px;\n\t}\n}\n","excerpt":"","more":"hr {\n\tmargin: 20px 0;\n\tborder: 0;\n\tborder-top: 1px dashed #c5c5c5;\n\tborder-bottom: 1px dashed #f7f7f7;\n}\n\n.learn a {\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tcolor: #b83f45;\n}\n\n.learn a:hover {\n\ttext-decoration: underline;\n\tcolor: #787e7e;\n}\n\n.learn h3,\n.learn h4,\n.learn h5 {\n\tmargin: 10px 0;\n\tfont-weight: 500;\n\tline-height: 1.2;\n\tcolor: #000;\n}\n\n.learn h3 {\n\tfont-size: 24px;\n}\n\n.learn h4 {\n\tfont-size: 18px;\n}\n\n.learn h5 {\n\tmargin-bottom: 0;\n\tfont-size: 14px;\n}\n\n.learn ul {\n\tpadding: 0;\n\tmargin: 0 0 30px 25px;\n}\n\n.learn li {\n\tline-height: 20px;\n}\n\n.learn p {\n\tfont-size: 15px;\n\tfont-weight: 300;\n\tline-height: 1.3;\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n}\n\n#issue-count {\n\tdisplay: none;\n}\n\n.quote {\n\tborder: none;\n\tmargin: 20px 0 60px 0;\n}\n\n.quote p {\n\tfont-style: italic;\n}\n\n.quote p:before {\n\tcontent: '“';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\ttop: -20px;\n\tleft: 3px;\n}\n\n.quote p:after {\n\tcontent: '”';\n\tfont-size: 50px;\n\topacity: .15;\n\tposition: absolute;\n\tbottom: -42px;\n\tright: 3px;\n}\n\n.quote footer {\n\tposition: absolute;\n\tbottom: -40px;\n\tright: 0;\n}\n\n.quote footer img {\n\tborder-radius: 3px;\n}\n\n.quote footer a {\n\tmargin-left: 5px;\n\tvertical-align: middle;\n}\n\n.speech-bubble {\n\tposition: relative;\n\tpadding: 10px;\n\tbackground: rgba(0, 0, 0, .04);\n\tborder-radius: 5px;\n}\n\n.speech-bubble:after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 100%;\n\tright: 30px;\n\tborder: 13px solid transparent;\n\tborder-top-color: rgba(0, 0, 0, .04);\n}\n\n.learn-bar > .learn {\n\tposition: absolute;\n\twidth: 272px;\n\ttop: 8px;\n\tleft: -300px;\n\tpadding: 10px;\n\tborder-radius: 5px;\n\tbackground-color: rgba(255, 255, 255, .6);\n\ttransition-property: left;\n\ttransition-duration: 500ms;\n}\n\n@media (min-width: 899px) {\n\t.learn-bar {\n\t\twidth: auto;\n\t\tpadding-left: 300px;\n\t}\n\n\t.learn-bar > .learn {\n\t\tleft: 8px;\n\t}\n}\n"},{"_content":"html,\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nbutton {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbackground: none;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcolor: inherit;\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\nbody {\n\tfont: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\tline-height: 1.4em;\n\tbackground: #f5f5f5;\n\tcolor: #4d4d4d;\n\tmin-width: 230px;\n\tmax-width: 550px;\n\tmargin: 0 auto;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n\tfont-weight: 300;\n}\n\nbutton,\ninput[type=\"checkbox\"] {\n\toutline: none;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n#todoapp {\n\tbackground: #fff;\n\tmargin: 130px 0 40px 0;\n\tposition: relative;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),\n\t            0 25px 50px 0 rgba(0, 0, 0, 0.1);\n}\n\n#todoapp input::-webkit-input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::-moz-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp h1 {\n\tposition: absolute;\n\ttop: -155px;\n\twidth: 100%;\n\tfont-size: 100px;\n\tfont-weight: 100;\n\ttext-align: center;\n\tcolor: rgba(175, 47, 47, 0.15);\n\t-webkit-text-rendering: optimizeLegibility;\n\t-moz-text-rendering: optimizeLegibility;\n\t-ms-text-rendering: optimizeLegibility;\n\ttext-rendering: optimizeLegibility;\n}\n\n#new-todo,\n.edit {\n\tposition: relative;\n\tmargin: 0;\n\twidth: 100%;\n\tfont-size: 24px;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tline-height: 1.4em;\n\tborder: 0;\n\toutline: none;\n\tcolor: inherit;\n\tpadding: 6px;\n\tborder: 1px solid #999;\n\tbox-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n\t-ms-box-sizing: border-box;\n\tbox-sizing: border-box;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\n#new-todo {\n\tpadding: 16px 16px 16px 60px;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.003);\n\tbox-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n}\n\n#main {\n\tposition: relative;\n\tz-index: 2;\n\tborder-top: 1px solid #e6e6e6;\n}\n\nlabel[for='toggle-all'] {\n\tdisplay: none;\n}\n\n#toggle-all {\n\tposition: absolute;\n\ttop: -55px;\n\tleft: -12px;\n\twidth: 60px;\n\theight: 34px;\n\ttext-align: center;\n\tborder: none; /* Mobile Safari */\n}\n\n#toggle-all:before {\n\tcontent: '❯';\n\tfont-size: 22px;\n\tcolor: #e6e6e6;\n\tpadding: 10px 27px 10px 27px;\n}\n\n#toggle-all:checked:before {\n\tcolor: #737373;\n}\n\n#todo-list {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n\n#todo-list li {\n\tposition: relative;\n\tfont-size: 24px;\n\tborder-bottom: 1px solid #ededed;\n}\n\n#todo-list li:last-child {\n\tborder-bottom: none;\n}\n\n#todo-list li.editing {\n\tborder-bottom: none;\n\tpadding: 0;\n}\n\n#todo-list li.editing .edit {\n\tdisplay: block;\n\twidth: 506px;\n\tpadding: 13px 17px 12px 17px;\n\tmargin: 0 0 0 43px;\n}\n\n#todo-list li.editing .view {\n\tdisplay: none;\n}\n\n#todo-list li .toggle {\n\ttext-align: center;\n\twidth: 40px;\n\t/* auto, since non-WebKit browsers doesn't support input styling */\n\theight: auto;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto 0;\n\tborder: none; /* Mobile Safari */\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n}\n\n#todo-list li .toggle:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#ededed\" stroke-width=\"3\"/></svg>');\n}\n\n#todo-list li .toggle:checked:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#bddad5\" stroke-width=\"3\"/><path fill=\"#5dc2af\" d=\"M72 25L42 71 27 56l-4 4 20 20 34-52z\"/></svg>');\n}\n\n#todo-list li label {\n\twhite-space: pre-line;\n\tword-break: break-all;\n\tpadding: 15px 60px 15px 15px;\n\tmargin-left: 45px;\n\tdisplay: block;\n\tline-height: 1.2;\n\ttransition: color 0.4s;\n}\n\n#todo-list li.completed label {\n\tcolor: #d9d9d9;\n\ttext-decoration: line-through;\n}\n\n#todo-list li .destroy {\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 10px;\n\tbottom: 0;\n\twidth: 40px;\n\theight: 40px;\n\tmargin: auto 0;\n\tfont-size: 30px;\n\tcolor: #cc9a9a;\n\tmargin-bottom: 11px;\n\ttransition: color 0.2s ease-out;\n}\n\n#todo-list li .destroy:hover {\n\tcolor: #af5b5e;\n}\n\n#todo-list li .destroy:after {\n\tcontent: '×';\n}\n\n#todo-list li:hover .destroy {\n\tdisplay: block;\n}\n\n#todo-list li .edit {\n\tdisplay: none;\n}\n\n#todo-list li.editing:last-child {\n\tmargin-bottom: -1px;\n}\n\n#footer {\n\tcolor: #777;\n\tpadding: 10px 15px;\n\theight: 20px;\n\ttext-align: center;\n\tborder-top: 1px solid #e6e6e6;\n}\n\n#footer:before {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\theight: 50px;\n\toverflow: hidden;\n\tbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),\n\t            0 8px 0 -3px #f6f6f6,\n\t            0 9px 1px -3px rgba(0, 0, 0, 0.2),\n\t            0 16px 0 -6px #f6f6f6,\n\t            0 17px 2px -6px rgba(0, 0, 0, 0.2);\n}\n\n#todo-count {\n\tfloat: left;\n\ttext-align: left;\n}\n\n#todo-count strong {\n\tfont-weight: 300;\n}\n\n#filters {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n}\n\n#filters li {\n\tdisplay: inline;\n}\n\n#filters li a {\n\tcolor: inherit;\n\tmargin: 3px;\n\tpadding: 3px 7px;\n\ttext-decoration: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 3px;\n}\n\n#filters li a.selected,\n#filters li a:hover {\n\tborder-color: rgba(175, 47, 47, 0.1);\n}\n\n#filters li a.selected {\n\tborder-color: rgba(175, 47, 47, 0.2);\n}\n\n#clear-completed,\nhtml #clear-completed:active {\n\tfloat: right;\n\tposition: relative;\n\tline-height: 20px;\n\ttext-decoration: none;\n\tcursor: pointer;\n\tvisibility: hidden;\n\tposition: relative;\n}\n\n#clear-completed::after {\n\tvisibility: visible;\n\tcontent: 'Clear completed';\n\tposition: absolute;\n\tright: 0;\n\twhite-space: nowrap;\n}\n\n#clear-completed:hover::after {\n\ttext-decoration: underline;\n}\n\n#info {\n\tmargin: 65px auto 0;\n\tcolor: #bfbfbf;\n\tfont-size: 10px;\n\ttext-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n\ttext-align: center;\n}\n\n#info p {\n\tline-height: 1;\n}\n\n#info a {\n\tcolor: inherit;\n\ttext-decoration: none;\n\tfont-weight: 400;\n}\n\n#info a:hover {\n\ttext-decoration: underline;\n}\n\n/*\n\tHack to remove background from Mobile Safari.\n\tCan't use it globally since it destroys checkboxes in Firefox\n*/\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n\t#toggle-all,\n\t#todo-list li .toggle {\n\t\tbackground: none;\n\t}\n\n\t#todo-list li .toggle {\n\t\theight: 40px;\n\t}\n\n\t#toggle-all {\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t}\n}\n\n@media (max-width: 430px) {\n\t#footer {\n\t\theight: 50px;\n\t}\n\n\t#filters {\n\t\tbottom: 10px;\n\t}\n}\n","source":"elmtodo/todomvc-app-css/index.css","raw":"html,\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nbutton {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbackground: none;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcolor: inherit;\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\nbody {\n\tfont: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\tline-height: 1.4em;\n\tbackground: #f5f5f5;\n\tcolor: #4d4d4d;\n\tmin-width: 230px;\n\tmax-width: 550px;\n\tmargin: 0 auto;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n\tfont-weight: 300;\n}\n\nbutton,\ninput[type=\"checkbox\"] {\n\toutline: none;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n#todoapp {\n\tbackground: #fff;\n\tmargin: 130px 0 40px 0;\n\tposition: relative;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),\n\t            0 25px 50px 0 rgba(0, 0, 0, 0.1);\n}\n\n#todoapp input::-webkit-input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::-moz-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp h1 {\n\tposition: absolute;\n\ttop: -155px;\n\twidth: 100%;\n\tfont-size: 100px;\n\tfont-weight: 100;\n\ttext-align: center;\n\tcolor: rgba(175, 47, 47, 0.15);\n\t-webkit-text-rendering: optimizeLegibility;\n\t-moz-text-rendering: optimizeLegibility;\n\t-ms-text-rendering: optimizeLegibility;\n\ttext-rendering: optimizeLegibility;\n}\n\n#new-todo,\n.edit {\n\tposition: relative;\n\tmargin: 0;\n\twidth: 100%;\n\tfont-size: 24px;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tline-height: 1.4em;\n\tborder: 0;\n\toutline: none;\n\tcolor: inherit;\n\tpadding: 6px;\n\tborder: 1px solid #999;\n\tbox-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n\t-ms-box-sizing: border-box;\n\tbox-sizing: border-box;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\n#new-todo {\n\tpadding: 16px 16px 16px 60px;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.003);\n\tbox-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n}\n\n#main {\n\tposition: relative;\n\tz-index: 2;\n\tborder-top: 1px solid #e6e6e6;\n}\n\nlabel[for='toggle-all'] {\n\tdisplay: none;\n}\n\n#toggle-all {\n\tposition: absolute;\n\ttop: -55px;\n\tleft: -12px;\n\twidth: 60px;\n\theight: 34px;\n\ttext-align: center;\n\tborder: none; /* Mobile Safari */\n}\n\n#toggle-all:before {\n\tcontent: '❯';\n\tfont-size: 22px;\n\tcolor: #e6e6e6;\n\tpadding: 10px 27px 10px 27px;\n}\n\n#toggle-all:checked:before {\n\tcolor: #737373;\n}\n\n#todo-list {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n\n#todo-list li {\n\tposition: relative;\n\tfont-size: 24px;\n\tborder-bottom: 1px solid #ededed;\n}\n\n#todo-list li:last-child {\n\tborder-bottom: none;\n}\n\n#todo-list li.editing {\n\tborder-bottom: none;\n\tpadding: 0;\n}\n\n#todo-list li.editing .edit {\n\tdisplay: block;\n\twidth: 506px;\n\tpadding: 13px 17px 12px 17px;\n\tmargin: 0 0 0 43px;\n}\n\n#todo-list li.editing .view {\n\tdisplay: none;\n}\n\n#todo-list li .toggle {\n\ttext-align: center;\n\twidth: 40px;\n\t/* auto, since non-WebKit browsers doesn't support input styling */\n\theight: auto;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto 0;\n\tborder: none; /* Mobile Safari */\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n}\n\n#todo-list li .toggle:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#ededed\" stroke-width=\"3\"/></svg>');\n}\n\n#todo-list li .toggle:checked:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#bddad5\" stroke-width=\"3\"/><path fill=\"#5dc2af\" d=\"M72 25L42 71 27 56l-4 4 20 20 34-52z\"/></svg>');\n}\n\n#todo-list li label {\n\twhite-space: pre-line;\n\tword-break: break-all;\n\tpadding: 15px 60px 15px 15px;\n\tmargin-left: 45px;\n\tdisplay: block;\n\tline-height: 1.2;\n\ttransition: color 0.4s;\n}\n\n#todo-list li.completed label {\n\tcolor: #d9d9d9;\n\ttext-decoration: line-through;\n}\n\n#todo-list li .destroy {\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 10px;\n\tbottom: 0;\n\twidth: 40px;\n\theight: 40px;\n\tmargin: auto 0;\n\tfont-size: 30px;\n\tcolor: #cc9a9a;\n\tmargin-bottom: 11px;\n\ttransition: color 0.2s ease-out;\n}\n\n#todo-list li .destroy:hover {\n\tcolor: #af5b5e;\n}\n\n#todo-list li .destroy:after {\n\tcontent: '×';\n}\n\n#todo-list li:hover .destroy {\n\tdisplay: block;\n}\n\n#todo-list li .edit {\n\tdisplay: none;\n}\n\n#todo-list li.editing:last-child {\n\tmargin-bottom: -1px;\n}\n\n#footer {\n\tcolor: #777;\n\tpadding: 10px 15px;\n\theight: 20px;\n\ttext-align: center;\n\tborder-top: 1px solid #e6e6e6;\n}\n\n#footer:before {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\theight: 50px;\n\toverflow: hidden;\n\tbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),\n\t            0 8px 0 -3px #f6f6f6,\n\t            0 9px 1px -3px rgba(0, 0, 0, 0.2),\n\t            0 16px 0 -6px #f6f6f6,\n\t            0 17px 2px -6px rgba(0, 0, 0, 0.2);\n}\n\n#todo-count {\n\tfloat: left;\n\ttext-align: left;\n}\n\n#todo-count strong {\n\tfont-weight: 300;\n}\n\n#filters {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n}\n\n#filters li {\n\tdisplay: inline;\n}\n\n#filters li a {\n\tcolor: inherit;\n\tmargin: 3px;\n\tpadding: 3px 7px;\n\ttext-decoration: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 3px;\n}\n\n#filters li a.selected,\n#filters li a:hover {\n\tborder-color: rgba(175, 47, 47, 0.1);\n}\n\n#filters li a.selected {\n\tborder-color: rgba(175, 47, 47, 0.2);\n}\n\n#clear-completed,\nhtml #clear-completed:active {\n\tfloat: right;\n\tposition: relative;\n\tline-height: 20px;\n\ttext-decoration: none;\n\tcursor: pointer;\n\tvisibility: hidden;\n\tposition: relative;\n}\n\n#clear-completed::after {\n\tvisibility: visible;\n\tcontent: 'Clear completed';\n\tposition: absolute;\n\tright: 0;\n\twhite-space: nowrap;\n}\n\n#clear-completed:hover::after {\n\ttext-decoration: underline;\n}\n\n#info {\n\tmargin: 65px auto 0;\n\tcolor: #bfbfbf;\n\tfont-size: 10px;\n\ttext-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n\ttext-align: center;\n}\n\n#info p {\n\tline-height: 1;\n}\n\n#info a {\n\tcolor: inherit;\n\ttext-decoration: none;\n\tfont-weight: 400;\n}\n\n#info a:hover {\n\ttext-decoration: underline;\n}\n\n/*\n\tHack to remove background from Mobile Safari.\n\tCan't use it globally since it destroys checkboxes in Firefox\n*/\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n\t#toggle-all,\n\t#todo-list li .toggle {\n\t\tbackground: none;\n\t}\n\n\t#todo-list li .toggle {\n\t\theight: 40px;\n\t}\n\n\t#toggle-all {\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t}\n}\n\n@media (max-width: 430px) {\n\t#footer {\n\t\theight: 50px;\n\t}\n\n\t#filters {\n\t\tbottom: 10px;\n\t}\n}\n","date":"2016-05-28T17:26:27.000Z","updated":"2016-05-28T17:26:27.000Z","path":"elmtodo/todomvc-app-css/index.css","layout":"false","title":"","comments":1,"_id":"cip0ngbtd000lx9ltvzpyto5y","content":"html,\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nbutton {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbackground: none;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcolor: inherit;\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\nbody {\n\tfont: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\tline-height: 1.4em;\n\tbackground: #f5f5f5;\n\tcolor: #4d4d4d;\n\tmin-width: 230px;\n\tmax-width: 550px;\n\tmargin: 0 auto;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n\tfont-weight: 300;\n}\n\nbutton,\ninput[type=\"checkbox\"] {\n\toutline: none;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n#todoapp {\n\tbackground: #fff;\n\tmargin: 130px 0 40px 0;\n\tposition: relative;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),\n\t            0 25px 50px 0 rgba(0, 0, 0, 0.1);\n}\n\n#todoapp input::-webkit-input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::-moz-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp h1 {\n\tposition: absolute;\n\ttop: -155px;\n\twidth: 100%;\n\tfont-size: 100px;\n\tfont-weight: 100;\n\ttext-align: center;\n\tcolor: rgba(175, 47, 47, 0.15);\n\t-webkit-text-rendering: optimizeLegibility;\n\t-moz-text-rendering: optimizeLegibility;\n\t-ms-text-rendering: optimizeLegibility;\n\ttext-rendering: optimizeLegibility;\n}\n\n#new-todo,\n.edit {\n\tposition: relative;\n\tmargin: 0;\n\twidth: 100%;\n\tfont-size: 24px;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tline-height: 1.4em;\n\tborder: 0;\n\toutline: none;\n\tcolor: inherit;\n\tpadding: 6px;\n\tborder: 1px solid #999;\n\tbox-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n\t-ms-box-sizing: border-box;\n\tbox-sizing: border-box;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\n#new-todo {\n\tpadding: 16px 16px 16px 60px;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.003);\n\tbox-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n}\n\n#main {\n\tposition: relative;\n\tz-index: 2;\n\tborder-top: 1px solid #e6e6e6;\n}\n\nlabel[for='toggle-all'] {\n\tdisplay: none;\n}\n\n#toggle-all {\n\tposition: absolute;\n\ttop: -55px;\n\tleft: -12px;\n\twidth: 60px;\n\theight: 34px;\n\ttext-align: center;\n\tborder: none; /* Mobile Safari */\n}\n\n#toggle-all:before {\n\tcontent: '❯';\n\tfont-size: 22px;\n\tcolor: #e6e6e6;\n\tpadding: 10px 27px 10px 27px;\n}\n\n#toggle-all:checked:before {\n\tcolor: #737373;\n}\n\n#todo-list {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n\n#todo-list li {\n\tposition: relative;\n\tfont-size: 24px;\n\tborder-bottom: 1px solid #ededed;\n}\n\n#todo-list li:last-child {\n\tborder-bottom: none;\n}\n\n#todo-list li.editing {\n\tborder-bottom: none;\n\tpadding: 0;\n}\n\n#todo-list li.editing .edit {\n\tdisplay: block;\n\twidth: 506px;\n\tpadding: 13px 17px 12px 17px;\n\tmargin: 0 0 0 43px;\n}\n\n#todo-list li.editing .view {\n\tdisplay: none;\n}\n\n#todo-list li .toggle {\n\ttext-align: center;\n\twidth: 40px;\n\t/* auto, since non-WebKit browsers doesn't support input styling */\n\theight: auto;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto 0;\n\tborder: none; /* Mobile Safari */\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n}\n\n#todo-list li .toggle:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewbox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#ededed\" stroke-width=\"3\"/></svg>');\n}\n\n#todo-list li .toggle:checked:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewbox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#bddad5\" stroke-width=\"3\"/><path fill=\"#5dc2af\" d=\"M72 25L42 71 27 56l-4 4 20 20 34-52z\"/></svg>');\n}\n\n#todo-list li label {\n\twhite-space: pre-line;\n\tword-break: break-all;\n\tpadding: 15px 60px 15px 15px;\n\tmargin-left: 45px;\n\tdisplay: block;\n\tline-height: 1.2;\n\ttransition: color 0.4s;\n}\n\n#todo-list li.completed label {\n\tcolor: #d9d9d9;\n\ttext-decoration: line-through;\n}\n\n#todo-list li .destroy {\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 10px;\n\tbottom: 0;\n\twidth: 40px;\n\theight: 40px;\n\tmargin: auto 0;\n\tfont-size: 30px;\n\tcolor: #cc9a9a;\n\tmargin-bottom: 11px;\n\ttransition: color 0.2s ease-out;\n}\n\n#todo-list li .destroy:hover {\n\tcolor: #af5b5e;\n}\n\n#todo-list li .destroy:after {\n\tcontent: '×';\n}\n\n#todo-list li:hover .destroy {\n\tdisplay: block;\n}\n\n#todo-list li .edit {\n\tdisplay: none;\n}\n\n#todo-list li.editing:last-child {\n\tmargin-bottom: -1px;\n}\n\n#footer {\n\tcolor: #777;\n\tpadding: 10px 15px;\n\theight: 20px;\n\ttext-align: center;\n\tborder-top: 1px solid #e6e6e6;\n}\n\n#footer:before {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\theight: 50px;\n\toverflow: hidden;\n\tbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),\n\t            0 8px 0 -3px #f6f6f6,\n\t            0 9px 1px -3px rgba(0, 0, 0, 0.2),\n\t            0 16px 0 -6px #f6f6f6,\n\t            0 17px 2px -6px rgba(0, 0, 0, 0.2);\n}\n\n#todo-count {\n\tfloat: left;\n\ttext-align: left;\n}\n\n#todo-count strong {\n\tfont-weight: 300;\n}\n\n#filters {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n}\n\n#filters li {\n\tdisplay: inline;\n}\n\n#filters li a {\n\tcolor: inherit;\n\tmargin: 3px;\n\tpadding: 3px 7px;\n\ttext-decoration: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 3px;\n}\n\n#filters li a.selected,\n#filters li a:hover {\n\tborder-color: rgba(175, 47, 47, 0.1);\n}\n\n#filters li a.selected {\n\tborder-color: rgba(175, 47, 47, 0.2);\n}\n\n#clear-completed,\nhtml #clear-completed:active {\n\tfloat: right;\n\tposition: relative;\n\tline-height: 20px;\n\ttext-decoration: none;\n\tcursor: pointer;\n\tvisibility: hidden;\n\tposition: relative;\n}\n\n#clear-completed::after {\n\tvisibility: visible;\n\tcontent: 'Clear completed';\n\tposition: absolute;\n\tright: 0;\n\twhite-space: nowrap;\n}\n\n#clear-completed:hover::after {\n\ttext-decoration: underline;\n}\n\n#info {\n\tmargin: 65px auto 0;\n\tcolor: #bfbfbf;\n\tfont-size: 10px;\n\ttext-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n\ttext-align: center;\n}\n\n#info p {\n\tline-height: 1;\n}\n\n#info a {\n\tcolor: inherit;\n\ttext-decoration: none;\n\tfont-weight: 400;\n}\n\n#info a:hover {\n\ttext-decoration: underline;\n}\n\n/*\n\tHack to remove background from Mobile Safari.\n\tCan't use it globally since it destroys checkboxes in Firefox\n*/\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n\t#toggle-all,\n\t#todo-list li .toggle {\n\t\tbackground: none;\n\t}\n\n\t#todo-list li .toggle {\n\t\theight: 40px;\n\t}\n\n\t#toggle-all {\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t}\n}\n\n@media (max-width: 430px) {\n\t#footer {\n\t\theight: 50px;\n\t}\n\n\t#filters {\n\t\tbottom: 10px;\n\t}\n}\n","excerpt":"","more":"html,\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\nbutton {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbackground: none;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcolor: inherit;\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\nbody {\n\tfont: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\tline-height: 1.4em;\n\tbackground: #f5f5f5;\n\tcolor: #4d4d4d;\n\tmin-width: 230px;\n\tmax-width: 550px;\n\tmargin: 0 auto;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n\tfont-weight: 300;\n}\n\nbutton,\ninput[type=\"checkbox\"] {\n\toutline: none;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n#todoapp {\n\tbackground: #fff;\n\tmargin: 130px 0 40px 0;\n\tposition: relative;\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),\n\t            0 25px 50px 0 rgba(0, 0, 0, 0.1);\n}\n\n#todoapp input::-webkit-input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::-moz-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp input::input-placeholder {\n\tfont-style: italic;\n\tfont-weight: 300;\n\tcolor: #e6e6e6;\n}\n\n#todoapp h1 {\n\tposition: absolute;\n\ttop: -155px;\n\twidth: 100%;\n\tfont-size: 100px;\n\tfont-weight: 100;\n\ttext-align: center;\n\tcolor: rgba(175, 47, 47, 0.15);\n\t-webkit-text-rendering: optimizeLegibility;\n\t-moz-text-rendering: optimizeLegibility;\n\t-ms-text-rendering: optimizeLegibility;\n\ttext-rendering: optimizeLegibility;\n}\n\n#new-todo,\n.edit {\n\tposition: relative;\n\tmargin: 0;\n\twidth: 100%;\n\tfont-size: 24px;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tline-height: 1.4em;\n\tborder: 0;\n\toutline: none;\n\tcolor: inherit;\n\tpadding: 6px;\n\tborder: 1px solid #999;\n\tbox-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n\t-ms-box-sizing: border-box;\n\tbox-sizing: border-box;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-font-smoothing: antialiased;\n\t-ms-font-smoothing: antialiased;\n\tfont-smoothing: antialiased;\n}\n\n#new-todo {\n\tpadding: 16px 16px 16px 60px;\n\tborder: none;\n\tbackground: rgba(0, 0, 0, 0.003);\n\tbox-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n}\n\n#main {\n\tposition: relative;\n\tz-index: 2;\n\tborder-top: 1px solid #e6e6e6;\n}\n\nlabel[for='toggle-all'] {\n\tdisplay: none;\n}\n\n#toggle-all {\n\tposition: absolute;\n\ttop: -55px;\n\tleft: -12px;\n\twidth: 60px;\n\theight: 34px;\n\ttext-align: center;\n\tborder: none; /* Mobile Safari */\n}\n\n#toggle-all:before {\n\tcontent: '❯';\n\tfont-size: 22px;\n\tcolor: #e6e6e6;\n\tpadding: 10px 27px 10px 27px;\n}\n\n#toggle-all:checked:before {\n\tcolor: #737373;\n}\n\n#todo-list {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n\n#todo-list li {\n\tposition: relative;\n\tfont-size: 24px;\n\tborder-bottom: 1px solid #ededed;\n}\n\n#todo-list li:last-child {\n\tborder-bottom: none;\n}\n\n#todo-list li.editing {\n\tborder-bottom: none;\n\tpadding: 0;\n}\n\n#todo-list li.editing .edit {\n\tdisplay: block;\n\twidth: 506px;\n\tpadding: 13px 17px 12px 17px;\n\tmargin: 0 0 0 43px;\n}\n\n#todo-list li.editing .view {\n\tdisplay: none;\n}\n\n#todo-list li .toggle {\n\ttext-align: center;\n\twidth: 40px;\n\t/* auto, since non-WebKit browsers doesn't support input styling */\n\theight: auto;\n\tposition: absolute;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto 0;\n\tborder: none; /* Mobile Safari */\n\t-webkit-appearance: none;\n\t-ms-appearance: none;\n\tappearance: none;\n}\n\n#todo-list li .toggle:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#ededed\" stroke-width=\"3\"/></svg>');\n}\n\n#todo-list li .toggle:checked:after {\n\tcontent: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"-10 -18 100 135\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#bddad5\" stroke-width=\"3\"/><path fill=\"#5dc2af\" d=\"M72 25L42 71 27 56l-4 4 20 20 34-52z\"/></svg>');\n}\n\n#todo-list li label {\n\twhite-space: pre-line;\n\tword-break: break-all;\n\tpadding: 15px 60px 15px 15px;\n\tmargin-left: 45px;\n\tdisplay: block;\n\tline-height: 1.2;\n\ttransition: color 0.4s;\n}\n\n#todo-list li.completed label {\n\tcolor: #d9d9d9;\n\ttext-decoration: line-through;\n}\n\n#todo-list li .destroy {\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 0;\n\tright: 10px;\n\tbottom: 0;\n\twidth: 40px;\n\theight: 40px;\n\tmargin: auto 0;\n\tfont-size: 30px;\n\tcolor: #cc9a9a;\n\tmargin-bottom: 11px;\n\ttransition: color 0.2s ease-out;\n}\n\n#todo-list li .destroy:hover {\n\tcolor: #af5b5e;\n}\n\n#todo-list li .destroy:after {\n\tcontent: '×';\n}\n\n#todo-list li:hover .destroy {\n\tdisplay: block;\n}\n\n#todo-list li .edit {\n\tdisplay: none;\n}\n\n#todo-list li.editing:last-child {\n\tmargin-bottom: -1px;\n}\n\n#footer {\n\tcolor: #777;\n\tpadding: 10px 15px;\n\theight: 20px;\n\ttext-align: center;\n\tborder-top: 1px solid #e6e6e6;\n}\n\n#footer:before {\n\tcontent: '';\n\tposition: absolute;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\theight: 50px;\n\toverflow: hidden;\n\tbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),\n\t            0 8px 0 -3px #f6f6f6,\n\t            0 9px 1px -3px rgba(0, 0, 0, 0.2),\n\t            0 16px 0 -6px #f6f6f6,\n\t            0 17px 2px -6px rgba(0, 0, 0, 0.2);\n}\n\n#todo-count {\n\tfloat: left;\n\ttext-align: left;\n}\n\n#todo-count strong {\n\tfont-weight: 300;\n}\n\n#filters {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n\tposition: absolute;\n\tright: 0;\n\tleft: 0;\n}\n\n#filters li {\n\tdisplay: inline;\n}\n\n#filters li a {\n\tcolor: inherit;\n\tmargin: 3px;\n\tpadding: 3px 7px;\n\ttext-decoration: none;\n\tborder: 1px solid transparent;\n\tborder-radius: 3px;\n}\n\n#filters li a.selected,\n#filters li a:hover {\n\tborder-color: rgba(175, 47, 47, 0.1);\n}\n\n#filters li a.selected {\n\tborder-color: rgba(175, 47, 47, 0.2);\n}\n\n#clear-completed,\nhtml #clear-completed:active {\n\tfloat: right;\n\tposition: relative;\n\tline-height: 20px;\n\ttext-decoration: none;\n\tcursor: pointer;\n\tvisibility: hidden;\n\tposition: relative;\n}\n\n#clear-completed::after {\n\tvisibility: visible;\n\tcontent: 'Clear completed';\n\tposition: absolute;\n\tright: 0;\n\twhite-space: nowrap;\n}\n\n#clear-completed:hover::after {\n\ttext-decoration: underline;\n}\n\n#info {\n\tmargin: 65px auto 0;\n\tcolor: #bfbfbf;\n\tfont-size: 10px;\n\ttext-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n\ttext-align: center;\n}\n\n#info p {\n\tline-height: 1;\n}\n\n#info a {\n\tcolor: inherit;\n\ttext-decoration: none;\n\tfont-weight: 400;\n}\n\n#info a:hover {\n\ttext-decoration: underline;\n}\n\n/*\n\tHack to remove background from Mobile Safari.\n\tCan't use it globally since it destroys checkboxes in Firefox\n*/\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n\t#toggle-all,\n\t#todo-list li .toggle {\n\t\tbackground: none;\n\t}\n\n\t#todo-list li .toggle {\n\t\theight: 40px;\n\t}\n\n\t#toggle-all {\n\t\t-webkit-transform: rotate(90deg);\n\t\ttransform: rotate(90deg);\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t}\n}\n\n@media (max-width: 430px) {\n\t#footer {\n\t\theight: 50px;\n\t}\n\n\t#filters {\n\t\tbottom: 10px;\n\t}\n}\n"},{"_content":"/* global _ */\n(function () {\n\t'use strict';\n\n\t/* jshint ignore:start */\n\t// Underscore's Template Module\n\t// Courtesy of underscorejs.org\n\tvar _ = (function (_) {\n\t\t_.defaults = function (object) {\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\n\t\t// By default, Underscore uses ERB-style template delimiters, change the\n\t\t// following template settings to use alternative delimiters.\n\t\t_.templateSettings = {\n\t\t\tevaluate    : /<%([\\s\\S]+?)%>/g,\n\t\t\tinterpolate : /<%=([\\s\\S]+?)%>/g,\n\t\t\tescape      : /<%-([\\s\\S]+?)%>/g\n\t\t};\n\n\t\t// When customizing `templateSettings`, if you don't want to define an\n\t\t// interpolation, evaluation or escaping regex, we need one that is\n\t\t// guaranteed not to match.\n\t\tvar noMatch = /(.)^/;\n\n\t\t// Certain characters need to be escaped so that they can be put into a\n\t\t// string literal.\n\t\tvar escapes = {\n\t\t\t\"'\":      \"'\",\n\t\t\t'\\\\':     '\\\\',\n\t\t\t'\\r':     'r',\n\t\t\t'\\n':     'n',\n\t\t\t'\\t':     't',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\tvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n\t\t// JavaScript micro-templating, similar to John Resig's implementation.\n\t\t// Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t\t// and correctly escapes quotes within interpolated code.\n\t\t_.template = function(text, data, settings) {\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t};\n\n\t\treturn _;\n\t})({});\n\n\tif (location.hostname === 'todomvc.com') {\n\t\twindow._gaq = [['_setAccount','UA-31081062-1'],['_trackPageview']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));\n\t}\n\t/* jshint ignore:end */\n\n\tfunction redirect() {\n\t\tif (location.hostname === 'tastejs.github.io') {\n\t\t\tlocation.href = location.href.replace('tastejs.github.io/todomvc', 'todomvc.com');\n\t\t}\n\t}\n\n\tfunction findRoot() {\n\t\tvar base = location.href.indexOf('examples/');\n\t\treturn location.href.substr(0, base);\n\t}\n\n\tfunction getFile(file, callback) {\n\t\tif (!location.host) {\n\t\t\treturn console.info('Miss the info bar? Run TodoMVC from a server to avoid a cross-origin error.');\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', findRoot() + file, true);\n\t\txhr.send();\n\n\t\txhr.onload = function () {\n\t\t\tif (xhr.status === 200 && callback) {\n\t\t\t\tcallback(xhr.responseText);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction Learn(learnJSON, config) {\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t}\n\n\tLearn.prototype.append = function (opts) {\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t};\n\n\tLearn.prototype.fetchIssueCount = function () {\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t};\n\n\tredirect();\n\tgetFile('learn.json', Learn);\n})();\n","source":"elmtodo/todomvc-common/base.js","raw":"/* global _ */\n(function () {\n\t'use strict';\n\n\t/* jshint ignore:start */\n\t// Underscore's Template Module\n\t// Courtesy of underscorejs.org\n\tvar _ = (function (_) {\n\t\t_.defaults = function (object) {\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\n\t\t// By default, Underscore uses ERB-style template delimiters, change the\n\t\t// following template settings to use alternative delimiters.\n\t\t_.templateSettings = {\n\t\t\tevaluate    : /<%([\\s\\S]+?)%>/g,\n\t\t\tinterpolate : /<%=([\\s\\S]+?)%>/g,\n\t\t\tescape      : /<%-([\\s\\S]+?)%>/g\n\t\t};\n\n\t\t// When customizing `templateSettings`, if you don't want to define an\n\t\t// interpolation, evaluation or escaping regex, we need one that is\n\t\t// guaranteed not to match.\n\t\tvar noMatch = /(.)^/;\n\n\t\t// Certain characters need to be escaped so that they can be put into a\n\t\t// string literal.\n\t\tvar escapes = {\n\t\t\t\"'\":      \"'\",\n\t\t\t'\\\\':     '\\\\',\n\t\t\t'\\r':     'r',\n\t\t\t'\\n':     'n',\n\t\t\t'\\t':     't',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\tvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n\t\t// JavaScript micro-templating, similar to John Resig's implementation.\n\t\t// Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t\t// and correctly escapes quotes within interpolated code.\n\t\t_.template = function(text, data, settings) {\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t};\n\n\t\treturn _;\n\t})({});\n\n\tif (location.hostname === 'todomvc.com') {\n\t\twindow._gaq = [['_setAccount','UA-31081062-1'],['_trackPageview']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));\n\t}\n\t/* jshint ignore:end */\n\n\tfunction redirect() {\n\t\tif (location.hostname === 'tastejs.github.io') {\n\t\t\tlocation.href = location.href.replace('tastejs.github.io/todomvc', 'todomvc.com');\n\t\t}\n\t}\n\n\tfunction findRoot() {\n\t\tvar base = location.href.indexOf('examples/');\n\t\treturn location.href.substr(0, base);\n\t}\n\n\tfunction getFile(file, callback) {\n\t\tif (!location.host) {\n\t\t\treturn console.info('Miss the info bar? Run TodoMVC from a server to avoid a cross-origin error.');\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', findRoot() + file, true);\n\t\txhr.send();\n\n\t\txhr.onload = function () {\n\t\t\tif (xhr.status === 200 && callback) {\n\t\t\t\tcallback(xhr.responseText);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction Learn(learnJSON, config) {\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t}\n\n\tLearn.prototype.append = function (opts) {\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t};\n\n\tLearn.prototype.fetchIssueCount = function () {\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t};\n\n\tredirect();\n\tgetFile('learn.json', Learn);\n})();\n","date":"2016-05-28T17:26:27.000Z","updated":"2016-05-28T17:26:27.000Z","path":"elmtodo/todomvc-common/base.js","layout":"false","title":"","comments":1,"_id":"cip0ngbte000mx9ltcwd9hzup","content":"/* global _ */\n(function () {\n\t'use strict';\n\n\t/* jshint ignore:start */\n\t// Underscore's Template Module\n\t// Courtesy of underscorejs.org\n\tvar _ = (function (_) {\n\t\t_.defaults = function (object) {\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\n\t\t// By default, Underscore uses ERB-style template delimiters, change the\n\t\t// following template settings to use alternative delimiters.\n\t\t_.templateSettings = {\n\t\t\tevaluate    : /<%([\\s\\s]+?)%>/g,\n\t\t\tinterpolate : /<%=([\\s\\s]+?)%>/g,\n\t\t\tescape      : /<%-([\\s\\s]+?)%>/g\n\t\t};\n\n\t\t// When customizing `templateSettings`, if you don't want to define an\n\t\t// interpolation, evaluation or escaping regex, we need one that is\n\t\t// guaranteed not to match.\n\t\tvar noMatch = /(.)^/;\n\n\t\t// Certain characters need to be escaped so that they can be put into a\n\t\t// string literal.\n\t\tvar escapes = {\n\t\t\t\"'\":      \"'\",\n\t\t\t'\\\\':     '\\\\',\n\t\t\t'\\r':     'r',\n\t\t\t'\\n':     'n',\n\t\t\t'\\t':     't',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\tvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n\t\t// JavaScript micro-templating, similar to John Resig's implementation.\n\t\t// Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t\t// and correctly escapes quotes within interpolated code.\n\t\t_.template = function(text, data, settings) {\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t};\n\n\t\treturn _;\n\t})({});\n\n\tif (location.hostname === 'todomvc.com') {\n\t\twindow._gaq = [['_setAccount','UA-31081062-1'],['_trackPageview']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));\n\t}\n\t/* jshint ignore:end */\n\n\tfunction redirect() {\n\t\tif (location.hostname === 'tastejs.github.io') {\n\t\t\tlocation.href = location.href.replace('tastejs.github.io/todomvc', 'todomvc.com');\n\t\t}\n\t}\n\n\tfunction findRoot() {\n\t\tvar base = location.href.indexOf('examples/');\n\t\treturn location.href.substr(0, base);\n\t}\n\n\tfunction getFile(file, callback) {\n\t\tif (!location.host) {\n\t\t\treturn console.info('Miss the info bar? Run TodoMVC from a server to avoid a cross-origin error.');\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', findRoot() + file, true);\n\t\txhr.send();\n\n\t\txhr.onload = function () {\n\t\t\tif (xhr.status === 200 && callback) {\n\t\t\t\tcallback(xhr.responseText);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction Learn(learnJSON, config) {\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t}\n\n\tLearn.prototype.append = function (opts) {\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t};\n\n\tLearn.prototype.fetchIssueCount = function () {\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t};\n\n\tredirect();\n\tgetFile('learn.json', Learn);\n})();\n</%-([\\s\\s]+?)%></%=([\\s\\s]+?)%></%([\\s\\s]+?)%>","excerpt":"","more":"/* global _ */\n(function () {\n\t'use strict';\n\n\t/* jshint ignore:start */\n\t// Underscore's Template Module\n\t// Courtesy of underscorejs.org\n\tvar _ = (function (_) {\n\t\t_.defaults = function (object) {\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\n\t\t// By default, Underscore uses ERB-style template delimiters, change the\n\t\t// following template settings to use alternative delimiters.\n\t\t_.templateSettings = {\n\t\t\tevaluate    : /<%([\\s\\S]+?)%>/g,\n\t\t\tinterpolate : /<%=([\\s\\S]+?)%>/g,\n\t\t\tescape      : /<%-([\\s\\S]+?)%>/g\n\t\t};\n\n\t\t// When customizing `templateSettings`, if you don't want to define an\n\t\t// interpolation, evaluation or escaping regex, we need one that is\n\t\t// guaranteed not to match.\n\t\tvar noMatch = /(.)^/;\n\n\t\t// Certain characters need to be escaped so that they can be put into a\n\t\t// string literal.\n\t\tvar escapes = {\n\t\t\t\"'\":      \"'\",\n\t\t\t'\\\\':     '\\\\',\n\t\t\t'\\r':     'r',\n\t\t\t'\\n':     'n',\n\t\t\t'\\t':     't',\n\t\t\t'\\u2028': 'u2028',\n\t\t\t'\\u2029': 'u2029'\n\t\t};\n\n\t\tvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n\t\t// JavaScript micro-templating, similar to John Resig's implementation.\n\t\t// Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t\t// and correctly escapes quotes within interpolated code.\n\t\t_.template = function(text, data, settings) {\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t};\n\n\t\treturn _;\n\t})({});\n\n\tif (location.hostname === 'todomvc.com') {\n\t\twindow._gaq = [['_setAccount','UA-31081062-1'],['_trackPageview']];(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.src='//www.google-analytics.com/ga.js';s.parentNode.insertBefore(g,s)}(document,'script'));\n\t}\n\t/* jshint ignore:end */\n\n\tfunction redirect() {\n\t\tif (location.hostname === 'tastejs.github.io') {\n\t\t\tlocation.href = location.href.replace('tastejs.github.io/todomvc', 'todomvc.com');\n\t\t}\n\t}\n\n\tfunction findRoot() {\n\t\tvar base = location.href.indexOf('examples/');\n\t\treturn location.href.substr(0, base);\n\t}\n\n\tfunction getFile(file, callback) {\n\t\tif (!location.host) {\n\t\t\treturn console.info('Miss the info bar? Run TodoMVC from a server to avoid a cross-origin error.');\n\t\t}\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', findRoot() + file, true);\n\t\txhr.send();\n\n\t\txhr.onload = function () {\n\t\t\tif (xhr.status === 200 && callback) {\n\t\t\t\tcallback(xhr.responseText);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction Learn(learnJSON, config) {\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t}\n\n\tLearn.prototype.append = function (opts) {\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t};\n\n\tLearn.prototype.fetchIssueCount = function () {\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t};\n\n\tredirect();\n\tgetFile('learn.json', Learn);\n})();\n"},{"_content":"var Elm = Elm || { Native: {} };\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   \"use strict\";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values)\n   return _elm.Array.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Array\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,\n   array) {\n      return _U.cmp(0,\n      i) < 1 && _U.cmp(i,\n      $Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,\n      i,\n      array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,\n   arr) {\n      return function () {\n         var update = F2(function (x,\n         xs) {\n            return isOkay(x) ? A2($Native$Array.push,\n            x,\n            xs) : xs;\n         });\n         return A3($Native$Array.foldl,\n         update,\n         $Native$Array.empty,\n         arr);\n      }();\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      _L.range(0,\n      $Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {\n      return A2(initialize,\n      n,\n      $Basics.always(e));\n   });\n   var Array = {ctor: \"Array\"};\n   _elm.Array.values = {_op: _op\n                       ,Array: Array\n                       ,initialize: initialize\n                       ,repeat: repeat\n                       ,fromList: fromList\n                       ,toList: toList\n                       ,toIndexedList: toIndexedList\n                       ,map: map\n                       ,indexedMap: indexedMap\n                       ,foldl: foldl\n                       ,foldr: foldr\n                       ,filter: filter\n                       ,empty: empty\n                       ,push: push\n                       ,get: get\n                       ,set: set\n                       ,slice: slice\n                       ,length: length\n                       ,append: append};\n   return _elm.Array.values;\n};\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   \"use strict\";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values)\n   return _elm.Basics.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Basics\",\n   $Native$Basics = Elm.Native.Basics.make(_elm),\n   $Native$Show = Elm.Native.Show.make(_elm),\n   $Native$Utils = Elm.Native.Utils.make(_elm);\n   var uncurry = F2(function (f,\n   _v0) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"_Tuple2\": return A2(f,\n              _v0._0,\n              _v0._1);}\n         _U.badCase($moduleName,\n         \"on line 458, column 19 to 24\");\n      }();\n   });\n   var curry = F3(function (f,\n   a,\n   b) {\n      return f({ctor: \"_Tuple2\"\n               ,_0: a\n               ,_1: b});\n   });\n   var flip = F3(function (f,b,a) {\n      return A2(f,a,b);\n   });\n   var snd = function (_v4) {\n      return function () {\n         switch (_v4.ctor)\n         {case \"_Tuple2\": return _v4._1;}\n         _U.badCase($moduleName,\n         \"on line 442, column 13 to 14\");\n      }();\n   };\n   var fst = function (_v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\": return _v8._0;}\n         _U.badCase($moduleName,\n         \"on line 438, column 13 to 14\");\n      }();\n   };\n   var always = F2(function (a,\n   _v12) {\n      return function () {\n         return a;\n      }();\n   });\n   var identity = function (x) {\n      return x;\n   };\n   _op[\"<|\"] = F2(function (f,x) {\n      return f(x);\n   });\n   _op[\"|>\"] = F2(function (x,f) {\n      return f(x);\n   });\n   _op[\">>\"] = F3(function (f,\n   g,\n   x) {\n      return g(f(x));\n   });\n   _op[\"<<\"] = F3(function (g,\n   f,\n   x) {\n      return g(f(x));\n   });\n   _op[\"++\"] = $Native$Utils.append;\n   var toString = $Native$Show.toString;\n   var isInfinite = $Native$Basics.isInfinite;\n   var isNaN = $Native$Basics.isNaN;\n   var toFloat = $Native$Basics.toFloat;\n   var ceiling = $Native$Basics.ceiling;\n   var floor = $Native$Basics.floor;\n   var truncate = $Native$Basics.truncate;\n   var round = $Native$Basics.round;\n   var otherwise = true;\n   var not = $Native$Basics.not;\n   var xor = $Native$Basics.xor;\n   _op[\"||\"] = $Native$Basics.or;\n   _op[\"&&\"] = $Native$Basics.and;\n   var max = $Native$Basics.max;\n   var min = $Native$Basics.min;\n   var GT = {ctor: \"GT\"};\n   var EQ = {ctor: \"EQ\"};\n   var LT = {ctor: \"LT\"};\n   var compare = $Native$Basics.compare;\n   _op[\">=\"] = $Native$Basics.ge;\n   _op[\"<=\"] = $Native$Basics.le;\n   _op[\">\"] = $Native$Basics.gt;\n   _op[\"<\"] = $Native$Basics.lt;\n   _op[\"/=\"] = $Native$Basics.neq;\n   _op[\"==\"] = $Native$Basics.eq;\n   var e = $Native$Basics.e;\n   var pi = $Native$Basics.pi;\n   var clamp = $Native$Basics.clamp;\n   var logBase = $Native$Basics.logBase;\n   var abs = $Native$Basics.abs;\n   var negate = $Native$Basics.negate;\n   var sqrt = $Native$Basics.sqrt;\n   var atan2 = $Native$Basics.atan2;\n   var atan = $Native$Basics.atan;\n   var asin = $Native$Basics.asin;\n   var acos = $Native$Basics.acos;\n   var tan = $Native$Basics.tan;\n   var sin = $Native$Basics.sin;\n   var cos = $Native$Basics.cos;\n   _op[\"^\"] = $Native$Basics.exp;\n   _op[\"%\"] = $Native$Basics.mod;\n   var rem = $Native$Basics.rem;\n   _op[\"//\"] = $Native$Basics.div;\n   _op[\"/\"] = $Native$Basics.floatDiv;\n   _op[\"*\"] = $Native$Basics.mul;\n   _op[\"-\"] = $Native$Basics.sub;\n   _op[\"+\"] = $Native$Basics.add;\n   var toPolar = $Native$Basics.toPolar;\n   var fromPolar = $Native$Basics.fromPolar;\n   var turns = $Native$Basics.turns;\n   var degrees = $Native$Basics.degrees;\n   var radians = function (t) {\n      return t;\n   };\n   _elm.Basics.values = {_op: _op\n                        ,radians: radians\n                        ,degrees: degrees\n                        ,turns: turns\n                        ,fromPolar: fromPolar\n                        ,toPolar: toPolar\n                        ,rem: rem\n                        ,cos: cos\n                        ,sin: sin\n                        ,tan: tan\n                        ,acos: acos\n                        ,asin: asin\n                        ,atan: atan\n                        ,atan2: atan2\n                        ,sqrt: sqrt\n                        ,negate: negate\n                        ,abs: abs\n                        ,logBase: logBase\n                        ,clamp: clamp\n                        ,pi: pi\n                        ,e: e\n                        ,compare: compare\n                        ,LT: LT\n                        ,EQ: EQ\n                        ,GT: GT\n                        ,min: min\n                        ,max: max\n                        ,xor: xor\n                        ,not: not\n                        ,otherwise: otherwise\n                        ,round: round\n                        ,truncate: truncate\n                        ,floor: floor\n                        ,ceiling: ceiling\n                        ,toFloat: toFloat\n                        ,isNaN: isNaN\n                        ,isInfinite: isInfinite\n                        ,toString: toString\n                        ,identity: identity\n                        ,always: always\n                        ,fst: fst\n                        ,snd: snd\n                        ,flip: flip\n                        ,curry: curry\n                        ,uncurry: uncurry};\n   return _elm.Basics.values;\n};\nElm.Char = Elm.Char || {};\nElm.Char.make = function (_elm) {\n   \"use strict\";\n   _elm.Char = _elm.Char || {};\n   if (_elm.Char.values)\n   return _elm.Char.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Char\",\n   $Native$Char = Elm.Native.Char.make(_elm);\n   var fromCode = $Native$Char.fromCode;\n   var toCode = $Native$Char.toCode;\n   var toLocaleLower = $Native$Char.toLocaleLower;\n   var toLocaleUpper = $Native$Char.toLocaleUpper;\n   var toLower = $Native$Char.toLower;\n   var toUpper = $Native$Char.toUpper;\n   var isHexDigit = $Native$Char.isHexDigit;\n   var isOctDigit = $Native$Char.isOctDigit;\n   var isDigit = $Native$Char.isDigit;\n   var isLower = $Native$Char.isLower;\n   var isUpper = $Native$Char.isUpper;\n   _elm.Char.values = {_op: _op\n                      ,isUpper: isUpper\n                      ,isLower: isLower\n                      ,isDigit: isDigit\n                      ,isOctDigit: isOctDigit\n                      ,isHexDigit: isHexDigit\n                      ,toUpper: toUpper\n                      ,toLower: toLower\n                      ,toLocaleUpper: toLocaleUpper\n                      ,toLocaleLower: toLocaleLower\n                      ,toCode: toCode\n                      ,fromCode: fromCode};\n   return _elm.Char.values;\n};\nElm.Color = Elm.Color || {};\nElm.Color.make = function (_elm) {\n   \"use strict\";\n   _elm.Color = _elm.Color || {};\n   if (_elm.Color.values)\n   return _elm.Color.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Color\",\n   $Basics = Elm.Basics.make(_elm);\n   var Radial = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"Radial\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var radial = Radial;\n   var Linear = F3(function (a,\n   b,\n   c) {\n      return {ctor: \"Linear\"\n             ,_0: a\n             ,_1: b\n             ,_2: c};\n   });\n   var linear = Linear;\n   var fmod = F2(function (f,n) {\n      return function () {\n         var integer = $Basics.floor(f);\n         return $Basics.toFloat(A2($Basics._op[\"%\"],\n         integer,\n         n)) + f - $Basics.toFloat(integer);\n      }();\n   });\n   var rgbToHsl = F3(function (red,\n   green,\n   blue) {\n      return function () {\n         var b = $Basics.toFloat(blue) / 255;\n         var g = $Basics.toFloat(green) / 255;\n         var r = $Basics.toFloat(red) / 255;\n         var cMax = A2($Basics.max,\n         A2($Basics.max,r,g),\n         b);\n         var cMin = A2($Basics.min,\n         A2($Basics.min,r,g),\n         b);\n         var c = cMax - cMin;\n         var lightness = (cMax + cMin) / 2;\n         var saturation = _U.eq(lightness,\n         0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n         var hue = $Basics.degrees(60) * (_U.eq(cMax,\n         r) ? A2(fmod,\n         (g - b) / c,\n         6) : _U.eq(cMax,\n         g) ? (b - r) / c + 2 : _U.eq(cMax,\n         b) ? (r - g) / c + 4 : _U.badIf($moduleName,\n         \"between lines 141 and 143\"));\n         return {ctor: \"_Tuple3\"\n                ,_0: hue\n                ,_1: saturation\n                ,_2: lightness};\n      }();\n   });\n   var hslToRgb = F3(function (hue,\n   saturation,\n   lightness) {\n      return function () {\n         var hue$ = hue / $Basics.degrees(60);\n         var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n         var x = chroma * (1 - $Basics.abs(A2(fmod,\n         hue$,\n         2) - 1));\n         var $ = _U.cmp(hue$,\n         0) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: 0\n                  ,_2: 0} : _U.cmp(hue$,\n         1) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: x\n                  ,_2: 0} : _U.cmp(hue$,\n         2) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: chroma\n                  ,_2: 0} : _U.cmp(hue$,\n         3) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: chroma\n                  ,_2: x} : _U.cmp(hue$,\n         4) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: x\n                  ,_2: chroma} : _U.cmp(hue$,\n         5) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: 0\n                  ,_2: chroma} : _U.cmp(hue$,\n         6) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: 0\n                  ,_2: x} : {ctor: \"_Tuple3\"\n                            ,_0: 0\n                            ,_1: 0\n                            ,_2: 0},\n         r = $._0,\n         g = $._1,\n         b = $._2;\n         var m = lightness - chroma / 2;\n         return {ctor: \"_Tuple3\"\n                ,_0: r + m\n                ,_1: g + m\n                ,_2: b + m};\n      }();\n   });\n   var toRgb = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\":\n            return function () {\n                 var $ = A3(hslToRgb,\n                 color._0,\n                 color._1,\n                 color._2),\n                 r = $._0,\n                 g = $._1,\n                 b = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,blue: $Basics.round(255 * b)\n                        ,green: $Basics.round(255 * g)\n                        ,red: $Basics.round(255 * r)};\n              }();\n            case \"RGBA\": return {_: {}\n                                ,alpha: color._3\n                                ,blue: color._2\n                                ,green: color._1\n                                ,red: color._0};}\n         _U.badCase($moduleName,\n         \"between lines 115 and 123\");\n      }();\n   };\n   var toHsl = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return {_: {}\n                              ,alpha: color._3\n                              ,hue: color._0\n                              ,lightness: color._2\n                              ,saturation: color._1};\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,hue: h\n                        ,lightness: l\n                        ,saturation: s};\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 105 and 112\");\n      }();\n   };\n   var HSLA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"HSLA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var hsla = F4(function (hue,\n   saturation,\n   lightness,\n   alpha) {\n      return A4(HSLA,\n      hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),\n      saturation,\n      lightness,\n      alpha);\n   });\n   var hsl = F3(function (hue,\n   saturation,\n   lightness) {\n      return A4(hsla,\n      hue,\n      saturation,\n      lightness,\n      1);\n   });\n   var complement = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return A4(hsla,\n              color._0 + $Basics.degrees(180),\n              color._1,\n              color._2,\n              color._3);\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return A4(hsla,\n                 h + $Basics.degrees(180),\n                 s,\n                 l,\n                 color._3);\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 96 and 102\");\n      }();\n   };\n   var grayscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var greyscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var RGBA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"RGBA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var rgba = RGBA;\n   var rgb = F3(function (r,g,b) {\n      return A4(RGBA,r,g,b,1);\n   });\n   var lightRed = A4(RGBA,\n   239,\n   41,\n   41,\n   1);\n   var red = A4(RGBA,204,0,0,1);\n   var darkRed = A4(RGBA,\n   164,\n   0,\n   0,\n   1);\n   var lightOrange = A4(RGBA,\n   252,\n   175,\n   62,\n   1);\n   var orange = A4(RGBA,\n   245,\n   121,\n   0,\n   1);\n   var darkOrange = A4(RGBA,\n   206,\n   92,\n   0,\n   1);\n   var lightYellow = A4(RGBA,\n   255,\n   233,\n   79,\n   1);\n   var yellow = A4(RGBA,\n   237,\n   212,\n   0,\n   1);\n   var darkYellow = A4(RGBA,\n   196,\n   160,\n   0,\n   1);\n   var lightGreen = A4(RGBA,\n   138,\n   226,\n   52,\n   1);\n   var green = A4(RGBA,\n   115,\n   210,\n   22,\n   1);\n   var darkGreen = A4(RGBA,\n   78,\n   154,\n   6,\n   1);\n   var lightBlue = A4(RGBA,\n   114,\n   159,\n   207,\n   1);\n   var blue = A4(RGBA,\n   52,\n   101,\n   164,\n   1);\n   var darkBlue = A4(RGBA,\n   32,\n   74,\n   135,\n   1);\n   var lightPurple = A4(RGBA,\n   173,\n   127,\n   168,\n   1);\n   var purple = A4(RGBA,\n   117,\n   80,\n   123,\n   1);\n   var darkPurple = A4(RGBA,\n   92,\n   53,\n   102,\n   1);\n   var lightBrown = A4(RGBA,\n   233,\n   185,\n   110,\n   1);\n   var brown = A4(RGBA,\n   193,\n   125,\n   17,\n   1);\n   var darkBrown = A4(RGBA,\n   143,\n   89,\n   2,\n   1);\n   var black = A4(RGBA,0,0,0,1);\n   var white = A4(RGBA,\n   255,\n   255,\n   255,\n   1);\n   var lightGrey = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var grey = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGrey = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightGray = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var gray = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGray = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightCharcoal = A4(RGBA,\n   136,\n   138,\n   133,\n   1);\n   var charcoal = A4(RGBA,\n   85,\n   87,\n   83,\n   1);\n   var darkCharcoal = A4(RGBA,\n   46,\n   52,\n   54,\n   1);\n   _elm.Color.values = {_op: _op\n                       ,RGBA: RGBA\n                       ,HSLA: HSLA\n                       ,rgba: rgba\n                       ,rgb: rgb\n                       ,hsla: hsla\n                       ,hsl: hsl\n                       ,grayscale: grayscale\n                       ,greyscale: greyscale\n                       ,complement: complement\n                       ,toHsl: toHsl\n                       ,toRgb: toRgb\n                       ,fmod: fmod\n                       ,rgbToHsl: rgbToHsl\n                       ,hslToRgb: hslToRgb\n                       ,Linear: Linear\n                       ,Radial: Radial\n                       ,linear: linear\n                       ,radial: radial\n                       ,lightRed: lightRed\n                       ,red: red\n                       ,darkRed: darkRed\n                       ,lightOrange: lightOrange\n                       ,orange: orange\n                       ,darkOrange: darkOrange\n                       ,lightYellow: lightYellow\n                       ,yellow: yellow\n                       ,darkYellow: darkYellow\n                       ,lightGreen: lightGreen\n                       ,green: green\n                       ,darkGreen: darkGreen\n                       ,lightBlue: lightBlue\n                       ,blue: blue\n                       ,darkBlue: darkBlue\n                       ,lightPurple: lightPurple\n                       ,purple: purple\n                       ,darkPurple: darkPurple\n                       ,lightBrown: lightBrown\n                       ,brown: brown\n                       ,darkBrown: darkBrown\n                       ,black: black\n                       ,white: white\n                       ,lightGrey: lightGrey\n                       ,grey: grey\n                       ,darkGrey: darkGrey\n                       ,lightGray: lightGray\n                       ,gray: gray\n                       ,darkGray: darkGray\n                       ,lightCharcoal: lightCharcoal\n                       ,charcoal: charcoal\n                       ,darkCharcoal: darkCharcoal};\n   return _elm.Color.values;\n};\nElm.Dict = Elm.Dict || {};\nElm.Dict.make = function (_elm) {\n   \"use strict\";\n   _elm.Dict = _elm.Dict || {};\n   if (_elm.Dict.values)\n   return _elm.Dict.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Dict\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm),\n   $String = Elm.String.make(_elm);\n   var foldr = F3(function (f,\n   acc,\n   t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            switch (t._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldr,\n              f,\n              A3(f,\n              t._1,\n              t._2,\n              A3(foldr,f,acc,t._4)),\n              t._3);}\n         _U.badCase($moduleName,\n         \"between lines 410 and 418\");\n      }();\n   });\n   var keys = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      keyList) {\n         return A2($List._op[\"::\"],\n         key,\n         keyList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var values = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      valueList) {\n         return A2($List._op[\"::\"],\n         value,\n         valueList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var toList = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,list) {\n         return A2($List._op[\"::\"],\n         {ctor: \"_Tuple2\"\n         ,_0: key\n         ,_1: value},\n         list);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var foldl = F3(function (f,\n   acc,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldl,\n              f,\n              A3(f,\n              dict._1,\n              dict._2,\n              A3(foldl,f,acc,dict._3)),\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 399 and 407\");\n      }();\n   });\n   var isBBlack = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\": return true;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"BBlack\": return true;}\n              break;}\n         return false;\n      }();\n   };\n   var showFlag = function (f) {\n      return function () {\n         switch (f.ctor)\n         {case \"Insert\": return \"Insert\";\n            case \"Remove\": return \"Remove\";\n            case \"Same\": return \"Same\";}\n         _U.badCase($moduleName,\n         \"between lines 175 and 181\");\n      }();\n   };\n   var Same = {ctor: \"Same\"};\n   var Remove = {ctor: \"Remove\"};\n   var Insert = {ctor: \"Insert\"};\n   var get = F2(function (targetKey,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Maybe.Nothing;}\n              break;\n            case \"RBNode\":\n            return function () {\n                 var _v29 = A2($Basics.compare,\n                 targetKey,\n                 dict._1);\n                 switch (_v29.ctor)\n                 {case \"EQ\":\n                    return $Maybe.Just(dict._2);\n                    case \"GT\": return A2(get,\n                      targetKey,\n                      dict._4);\n                    case \"LT\": return A2(get,\n                      targetKey,\n                      dict._3);}\n                 _U.badCase($moduleName,\n                 \"between lines 131 and 137\");\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 126 and 137\");\n      }();\n   });\n   var member = F2(function (key,\n   dict) {\n      return function () {\n         var _v30 = A2(get,key,dict);\n         switch (_v30.ctor)\n         {case \"Just\": return true;\n            case \"Nothing\": return false;}\n         _U.badCase($moduleName,\n         \"between lines 140 and 142\");\n      }();\n   });\n   var max = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"(max Empty) is not defined\");\n            case \"RBNode\":\n            switch (dict._4.ctor)\n              {case \"RBEmpty\":\n                 return {ctor: \"_Tuple2\"\n                        ,_0: dict._1\n                        ,_1: dict._2};}\n              return max(dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 100 and 123\");\n      }();\n   };\n   var min = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Native$Debug.crash(\"(min Empty) is not defined\");}\n              break;\n            case \"RBNode\":\n            switch (dict._3.ctor)\n              {case \"RBEmpty\":\n                 switch (dict._3._0.ctor)\n                   {case \"LBlack\":\n                      return {ctor: \"_Tuple2\"\n                             ,_0: dict._1\n                             ,_1: dict._2};}\n                   break;}\n              return min(dict._3);}\n         _U.badCase($moduleName,\n         \"between lines 87 and 95\");\n      }();\n   };\n   var RBEmpty = function (a) {\n      return {ctor: \"RBEmpty\"\n             ,_0: a};\n   };\n   var RBNode = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"RBNode\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var showLColor = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"LBBlack\":\n            return \"LBBlack\";\n            case \"LBlack\": return \"LBlack\";}\n         _U.badCase($moduleName,\n         \"between lines 70 and 72\");\n      }();\n   };\n   var LBBlack = {ctor: \"LBBlack\"};\n   var LBlack = {ctor: \"LBlack\"};\n   var empty = RBEmpty(LBlack);\n   var map = F2(function (f,dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              dict._0,\n              dict._1,\n              A2(f,dict._1,dict._2),\n              A2(map,f,dict._3),\n              A2(map,f,dict._4));}\n         _U.badCase($moduleName,\n         \"between lines 387 and 396\");\n      }();\n   });\n   var showNColor = function (c) {\n      return function () {\n         switch (c.ctor)\n         {case \"BBlack\": return \"BBlack\";\n            case \"Black\": return \"Black\";\n            case \"NBlack\": return \"NBlack\";\n            case \"Red\": return \"Red\";}\n         _U.badCase($moduleName,\n         \"between lines 56 and 60\");\n      }();\n   };\n   var reportRemBug = F4(function (msg,\n   c,\n   lgot,\n   rgot) {\n      return $Native$Debug.crash($String.concat(_L.fromArray([\"Internal red-black tree invariant violated, expected \"\n                                                             ,msg\n                                                             ,\" and got \"\n                                                             ,showNColor(c)\n                                                             ,\"/\"\n                                                             ,lgot\n                                                             ,\"/\"\n                                                             ,rgot\n                                                             ,\"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"])));\n   });\n   var NBlack = {ctor: \"NBlack\"};\n   var BBlack = {ctor: \"BBlack\"};\n   var Black = {ctor: \"Black\"};\n   var ensureBlackRoot = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return dict;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"Black\": return dict;\n                 case \"Red\": return A5(RBNode,\n                   Black,\n                   dict._1,\n                   dict._2,\n                   dict._3,\n                   dict._4);}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 147 and 159\");\n      }();\n   };\n   var blackish = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\": return true;\n            case \"RBNode\":\n            return _U.eq(t._0,\n              Black) || _U.eq(t._0,BBlack);}\n         _U.badCase($moduleName,\n         \"between lines 332 and 334\");\n      }();\n   };\n   var blacken = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return RBEmpty(LBlack);\n            case \"RBNode\": return A5(RBNode,\n              Black,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 371 and 373\");\n      }();\n   };\n   var Red = {ctor: \"Red\"};\n   var moreBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");\n            case \"Black\": return BBlack;\n            case \"NBlack\": return Red;\n            case \"Red\": return Black;}\n         _U.badCase($moduleName,\n         \"between lines 237 and 241\");\n      }();\n   };\n   var lessBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\": return Black;\n            case \"Black\": return Red;\n            case \"NBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");\n            case \"Red\": return NBlack;}\n         _U.badCase($moduleName,\n         \"between lines 246 and 250\");\n      }();\n   };\n   var lessBlackTree = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              lessBlack(dict._0),\n              dict._1,\n              dict._2,\n              dict._3,\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 255 and 257\");\n      }();\n   };\n   var redden = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n            case \"RBNode\": return A5(RBNode,\n              Red,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 379 and 384\");\n      }();\n   };\n   var balance_node = function (t) {\n      return function () {\n         var assemble = function (col) {\n            return function (xk) {\n               return function (xv) {\n                  return function (yk) {\n                     return function (yv) {\n                        return function (zk) {\n                           return function (zv) {\n                              return function (a) {\n                                 return function (b) {\n                                    return function (c) {\n                                       return function (d) {\n                                          return A5(RBNode,\n                                          lessBlack(col),\n                                          yk,\n                                          yv,\n                                          A5(RBNode,Black,xk,xv,a,b),\n                                          A5(RBNode,Black,zk,zv,c,d));\n                                       };\n                                    };\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n         return blackish(t) ? function () {\n            switch (t.ctor)\n            {case \"RBNode\":\n               switch (t._3.ctor)\n                 {case \"RBNode\":\n                    switch (t._3._0.ctor)\n                      {case \"Red\":\n                         switch (t._3._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._3._1)(t._3._3._2)(t._3._1)(t._3._2)(t._1)(t._2)(t._3._3._3)(t._3._3._4)(t._3._4)(t._4);}\n                                break;}\n                           switch (t._3._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._1)(t._3._2)(t._3._4._1)(t._3._4._2)(t._1)(t._2)(t._3._3)(t._3._4._3)(t._3._4._4)(t._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._4.ctor)\n                 {case \"RBNode\":\n                    switch (t._4._0.ctor)\n                      {case \"Red\":\n                         switch (t._4._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._3._1)(t._4._3._2)(t._4._1)(t._4._2)(t._3)(t._4._3._3)(t._4._3._4)(t._4._4);}\n                                break;}\n                           switch (t._4._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._1)(t._4._2)(t._4._4._1)(t._4._4._2)(t._3)(t._4._3)(t._4._4._3)(t._4._4._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._0.ctor)\n                 {case \"BBlack\":\n                    switch (t._4.ctor)\n                      {case \"RBNode\":\n                         switch (t._4._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._4._3.ctor)\n                                {case \"RBNode\":\n                                   switch (t._4._3._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._4._4.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._4._4._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._4._3._1,\n                                                       t._4._3._2,\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3,\n                                                       t._4._3._3),\n                                                       A5(balance,\n                                                       Black,\n                                                       t._4._1,\n                                                       t._4._2,\n                                                       t._4._3._4,\n                                                       redden(t._4._4)));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      switch (t._3.ctor)\n                      {case \"RBNode\":\n                         switch (t._3._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._3._4.ctor)\n                                {case \"RBNode\":\n                                   switch (t._3._4._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._3._3.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._3._3._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._3._4._1,\n                                                       t._3._4._2,\n                                                       A5(balance,\n                                                       Black,\n                                                       t._3._1,\n                                                       t._3._2,\n                                                       redden(t._3._3),\n                                                       t._3._4._3),\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3._4._4,\n                                                       t._4));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      break;}\n                 break;}\n            return t;\n         }() : t;\n      }();\n   };\n   var balance = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return balance_node(A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r));\n   });\n   var bubble = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,\n      moreBlack(c),\n      k,\n      v,\n      lessBlackTree(l),\n      lessBlackTree(r)) : A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r);\n   });\n   var remove_max = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return function () {\n         switch (r.ctor)\n         {case \"RBEmpty\": return A3(rem,\n              c,\n              l,\n              r);\n            case \"RBNode\": return A5(bubble,\n              c,\n              k,\n              v,\n              l,\n              A5(remove_max,\n              r._0,\n              r._1,\n              r._2,\n              r._3,\n              r._4));}\n         _U.badCase($moduleName,\n         \"between lines 316 and 321\");\n      }();\n   });\n   var rem = F3(function (c,l,r) {\n      return function () {\n         var _v169 = {ctor: \"_Tuple2\"\n                     ,_0: l\n                     ,_1: r};\n         switch (_v169.ctor)\n         {case \"_Tuple2\":\n            switch (_v169._0.ctor)\n              {case \"RBEmpty\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           switch (c.ctor)\n                           {case \"Black\":\n                              return RBEmpty(LBBlack);\n                              case \"Red\":\n                              return RBEmpty(LBlack);}\n                           _U.badCase($moduleName,\n                           \"between lines 275 and 279\");\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var _v191 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v191.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v191._0.ctor)\n                                {case \"Black\":\n                                   switch (_v191._1.ctor)\n                                     {case \"LBlack\":\n                                        switch (_v191._2.ctor)\n                                          {case \"Red\": return A5(RBNode,\n                                               Black,\n                                               _v169._1._1,\n                                               _v169._1._2,\n                                               _v169._1._3,\n                                               _v169._1._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/LBlack/Red\",\n                           c,\n                           showLColor(_v169._0._0),\n                           showNColor(_v169._1._0));\n                        }();}\n                   break;\n                 case \"RBNode\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           var _v195 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v195.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v195._0.ctor)\n                                {case \"Black\":\n                                   switch (_v195._1.ctor)\n                                     {case \"Red\":\n                                        switch (_v195._2.ctor)\n                                          {case \"LBlack\":\n                                             return A5(RBNode,\n                                               Black,\n                                               _v169._0._1,\n                                               _v169._0._2,\n                                               _v169._0._3,\n                                               _v169._0._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/Red/LBlack\",\n                           c,\n                           showNColor(_v169._0._0),\n                           showLColor(_v169._1._0));\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var l$ = A5(remove_max,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var r = A5(RBNode,\n                           _v169._1._0,\n                           _v169._1._1,\n                           _v169._1._2,\n                           _v169._1._3,\n                           _v169._1._4);\n                           var l = A5(RBNode,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var $ = max(l),\n                           k = $._0,\n                           v = $._1;\n                           return A5(bubble,c,k,v,l$,r);\n                        }();}\n                   break;}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 273 and 302\");\n      }();\n   });\n   var update = F3(function (k,\n   alter,\n   dict) {\n      return function () {\n         var up = function (dict) {\n            return function () {\n               switch (dict.ctor)\n               {case \"RBEmpty\":\n                  switch (dict._0.ctor)\n                    {case \"LBlack\":\n                       return function () {\n                            var _v206 = alter($Maybe.Nothing);\n                            switch (_v206.ctor)\n                            {case \"Just\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Insert\n                                      ,_1: A5(RBNode,\n                                      Red,\n                                      k,\n                                      _v206._0,\n                                      empty,\n                                      empty)};\n                               case \"Nothing\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Same\n                                      ,_1: empty};}\n                            _U.badCase($moduleName,\n                            \"between lines 187 and 191\");\n                         }();}\n                    break;\n                  case \"RBNode\":\n                  return function () {\n                       var _v208 = A2($Basics.compare,\n                       k,\n                       dict._1);\n                       switch (_v208.ctor)\n                       {case \"EQ\": return function () {\n                               var _v209 = alter($Maybe.Just(dict._2));\n                               switch (_v209.ctor)\n                               {case \"Just\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode,\n                                         dict._0,\n                                         dict._1,\n                                         _v209._0,\n                                         dict._3,\n                                         dict._4)};\n                                  case \"Nothing\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Remove\n                                         ,_1: A3(rem,\n                                         dict._0,\n                                         dict._3,\n                                         dict._4)};}\n                               _U.badCase($moduleName,\n                               \"between lines 194 and 199\");\n                            }();\n                          case \"GT\": return function () {\n                               var $ = up(dict._4),\n                               flag = $._0,\n                               newRight = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 208 and 213\");\n                               }();\n                            }();\n                          case \"LT\": return function () {\n                               var $ = up(dict._3),\n                               flag = $._0,\n                               newLeft = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 201 and 206\");\n                               }();\n                            }();}\n                       _U.badCase($moduleName,\n                       \"between lines 192 and 213\");\n                    }();}\n               _U.badCase($moduleName,\n               \"between lines 185 and 213\");\n            }();\n         };\n         var $ = up(dict),\n         flag = $._0,\n         updatedDict = $._1;\n         return function () {\n            switch (flag.ctor)\n            {case \"Insert\":\n               return ensureBlackRoot(updatedDict);\n               case \"Remove\":\n               return blacken(updatedDict);\n               case \"Same\":\n               return updatedDict;}\n            _U.badCase($moduleName,\n            \"between lines 215 and 221\");\n         }();\n      }();\n   });\n   var insert = F3(function (key,\n   value,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Just(value)),\n      dict);\n   });\n   var singleton = F2(function (key,\n   value) {\n      return A3(insert,\n      key,\n      value,\n      RBEmpty(LBlack));\n   });\n   var union = F2(function (t1,\n   t2) {\n      return A3(foldl,\n      insert,\n      t2,\n      t1);\n   });\n   var fromList = function (assocs) {\n      return A3($List.foldl,\n      F2(function (_v214,dict) {\n         return function () {\n            switch (_v214.ctor)\n            {case \"_Tuple2\":\n               return A3(insert,\n                 _v214._0,\n                 _v214._1,\n                 dict);}\n            _U.badCase($moduleName,\n            \"on line 459, column 38 to 59\");\n         }();\n      }),\n      empty,\n      assocs);\n   };\n   var filter = F2(function (predicate,\n   dictionary) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         dict) {\n            return A2(predicate,\n            key,\n            value) ? A3(insert,\n            key,\n            value,\n            dict) : dict;\n         });\n         return A3(foldl,\n         add,\n         empty,\n         dictionary);\n      }();\n   });\n   var intersect = F2(function (t1,\n   t2) {\n      return A2(filter,\n      F2(function (k,_v218) {\n         return function () {\n            return A2(member,k,t2);\n         }();\n      }),\n      t1);\n   });\n   var partition = F2(function (predicate,\n   dict) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         _v220) {\n            return function () {\n               switch (_v220.ctor)\n               {case \"_Tuple2\":\n                  return A2(predicate,\n                    key,\n                    value) ? {ctor: \"_Tuple2\"\n                             ,_0: A3(insert,\n                             key,\n                             value,\n                             _v220._0)\n                             ,_1: _v220._1} : {ctor: \"_Tuple2\"\n                                              ,_0: _v220._0\n                                              ,_1: A3(insert,\n                                              key,\n                                              value,\n                                              _v220._1)};}\n               _U.badCase($moduleName,\n               \"between lines 480 and 482\");\n            }();\n         });\n         return A3(foldl,\n         add,\n         {ctor: \"_Tuple2\"\n         ,_0: empty\n         ,_1: empty},\n         dict);\n      }();\n   });\n   var remove = F2(function (key,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Nothing),\n      dict);\n   });\n   var diff = F2(function (t1,t2) {\n      return A3(foldl,\n      F3(function (k,v,t) {\n         return A2(remove,k,t);\n      }),\n      t1,\n      t2);\n   });\n   _elm.Dict.values = {_op: _op\n                      ,empty: empty\n                      ,singleton: singleton\n                      ,insert: insert\n                      ,update: update\n                      ,get: get\n                      ,remove: remove\n                      ,member: member\n                      ,filter: filter\n                      ,partition: partition\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,map: map\n                      ,union: union\n                      ,intersect: intersect\n                      ,diff: diff\n                      ,keys: keys\n                      ,values: values\n                      ,toList: toList\n                      ,fromList: fromList};\n   return _elm.Dict.values;\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values)\n   return _elm.Graphics.Element.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Graphics.Element\",\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm);\n   var DOut = {ctor: \"DOut\"};\n   var outward = DOut;\n   var DIn = {ctor: \"DIn\"};\n   var inward = DIn;\n   var DRight = {ctor: \"DRight\"};\n   var right = DRight;\n   var DLeft = {ctor: \"DLeft\"};\n   var left = DLeft;\n   var DDown = {ctor: \"DDown\"};\n   var down = DDown;\n   var DUp = {ctor: \"DUp\"};\n   var up = DUp;\n   var Position = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,horizontal: a\n             ,vertical: b\n             ,x: c\n             ,y: d};\n   });\n   var Relative = function (a) {\n      return {ctor: \"Relative\"\n             ,_0: a};\n   };\n   var relative = Relative;\n   var Absolute = function (a) {\n      return {ctor: \"Absolute\"\n             ,_0: a};\n   };\n   var absolute = Absolute;\n   var N = {ctor: \"N\"};\n   var bottomLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var Z = {ctor: \"Z\"};\n   var middle = {_: {}\n                ,horizontal: Z\n                ,vertical: Z\n                ,x: Relative(0.5)\n                ,y: Relative(0.5)};\n   var midLeft = _U.replace([[\"horizontal\"\n                             ,N]\n                            ,[\"x\",Absolute(0)]],\n   middle);\n   var middleAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midBottomAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var P = {ctor: \"P\"};\n   var topLeft = {_: {}\n                 ,horizontal: N\n                 ,vertical: P\n                 ,x: Absolute(0)\n                 ,y: Absolute(0)};\n   var bottomLeft = _U.replace([[\"vertical\"\n                                ,N]],\n   topLeft);\n   var topRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   topLeft);\n   var bottomRight = _U.replace([[\"horizontal\"\n                                 ,P]],\n   bottomLeft);\n   var midRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   midLeft);\n   var midTop = _U.replace([[\"vertical\"\n                            ,P]\n                           ,[\"y\",Absolute(0)]],\n   middle);\n   var midBottom = _U.replace([[\"vertical\"\n                               ,N]],\n   midTop);\n   var topLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var topRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var bottomRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var midRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midTopAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var Tiled = {ctor: \"Tiled\"};\n   var Cropped = function (a) {\n      return {ctor: \"Cropped\"\n             ,_0: a};\n   };\n   var Fitted = {ctor: \"Fitted\"};\n   var Plain = {ctor: \"Plain\"};\n   var Custom = {ctor: \"Custom\"};\n   var RawHtml = {ctor: \"RawHtml\"};\n   var Spacer = {ctor: \"Spacer\"};\n   var Flow = F2(function (a,b) {\n      return {ctor: \"Flow\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Container = F2(function (a,\n   b) {\n      return {ctor: \"Container\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Image = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"Image\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var link = F2(function (href,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"href\"\n                                    ,href]],\n                p)};\n      }();\n   });\n   var tag = F2(function (name,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"tag\"\n                                    ,name]],\n                p)};\n      }();\n   });\n   var color = F2(function (c,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"color\"\n                                    ,$Maybe.Just(c)]],\n                p)};\n      }();\n   });\n   var opacity = F2(function (o,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"opacity\"\n                                    ,o]],\n                p)};\n      }();\n   });\n   var height = F2(function (nh,\n   e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v0 = e.element;\n            switch (_v0.ctor)\n            {case \"Image\":\n               return _U.replace([[\"width\"\n                                  ,$Basics.round($Basics.toFloat(_v0._1) / $Basics.toFloat(_v0._2) * $Basics.toFloat(nh))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"height\"\n                                    ,nh]],\n                p)};\n      }();\n   });\n   var width = F2(function (nw,e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v5 = e.element;\n            switch (_v5.ctor)\n            {case \"Image\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.round($Basics.toFloat(_v5._2) / $Basics.toFloat(_v5._1) * $Basics.toFloat(nw))]],\n                 p);\n               case \"RawHtml\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.snd(A2($Native$Graphics$Element.htmlHeight,\n                                  nw,\n                                  e.element))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"width\"\n                                    ,nw]],\n                props)};\n      }();\n   });\n   var size = F3(function (w,h,e) {\n      return A2(height,\n      h,\n      A2(width,w,e));\n   });\n   var sizeOf = function (e) {\n      return {ctor: \"_Tuple2\"\n             ,_0: e.props.width\n             ,_1: e.props.height};\n   };\n   var heightOf = function (e) {\n      return e.props.height;\n   };\n   var widthOf = function (e) {\n      return e.props.width;\n   };\n   var Element = F2(function (a,\n   b) {\n      return {_: {}\n             ,element: b\n             ,props: a};\n   });\n   var Properties = F9(function (a,\n   b,\n   c,\n   d,\n   e,\n   f,\n   g,\n   h,\n   i) {\n      return {_: {}\n             ,click: i\n             ,color: e\n             ,height: c\n             ,hover: h\n             ,href: f\n             ,id: a\n             ,opacity: d\n             ,tag: g\n             ,width: b};\n   });\n   var newElement = F3(function (w,\n   h,\n   e) {\n      return {_: {}\n             ,element: e\n             ,props: A9(Properties,\n             $Native$Graphics$Element.guid({ctor: \"_Tuple0\"}),\n             w,\n             h,\n             1,\n             $Maybe.Nothing,\n             \"\",\n             \"\",\n             {ctor: \"_Tuple0\"},\n             {ctor: \"_Tuple0\"})};\n   });\n   var image = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Plain,w,h,src));\n   });\n   var fittedImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Fitted,w,h,src));\n   });\n   var croppedImage = F4(function (pos,\n   w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Cropped(pos),w,h,src));\n   });\n   var tiledImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Tiled,w,h,src));\n   });\n   var container = F4(function (w,\n   h,\n   pos,\n   e) {\n      return A3(newElement,\n      w,\n      h,\n      A2(Container,pos,e));\n   });\n   var spacer = F2(function (w,h) {\n      return A3(newElement,\n      w,\n      h,\n      Spacer);\n   });\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,\n   es) {\n      return function () {\n         var newFlow = F2(function (w,\n         h) {\n            return A3(newElement,\n            w,\n            h,\n            A2(Flow,dir,es));\n         });\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return _U.eq(es,\n         _L.fromArray([])) ? empty : function () {\n            switch (dir.ctor)\n            {case \"DDown\":\n               return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));\n               case \"DIn\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DLeft\": return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DOut\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DRight\":\n               return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DUp\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));}\n            _U.badCase($moduleName,\n            \"between lines 280 and 291\");\n         }();\n      }();\n   });\n   var above = F2(function (hi,\n   lo) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var below = F2(function (lo,\n   hi) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var beside = F2(function (lft,\n   rht) {\n      return A3(newElement,\n      widthOf(lft) + widthOf(rht),\n      A2($Basics.max,\n      heightOf(lft),\n      heightOf(rht)),\n      A2(Flow,\n      right,\n      _L.fromArray([lft,rht])));\n   });\n   var layers = function (es) {\n      return function () {\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return A3(newElement,\n         $List.maximum(ws),\n         $List.maximum(hs),\n         A2(Flow,DOut,es));\n      }();\n   };\n   _elm.Graphics.Element.values = {_op: _op\n                                  ,Properties: Properties\n                                  ,Element: Element\n                                  ,empty: empty\n                                  ,widthOf: widthOf\n                                  ,heightOf: heightOf\n                                  ,sizeOf: sizeOf\n                                  ,width: width\n                                  ,height: height\n                                  ,size: size\n                                  ,opacity: opacity\n                                  ,color: color\n                                  ,tag: tag\n                                  ,link: link\n                                  ,newElement: newElement\n                                  ,Image: Image\n                                  ,Container: Container\n                                  ,Flow: Flow\n                                  ,Spacer: Spacer\n                                  ,RawHtml: RawHtml\n                                  ,Custom: Custom\n                                  ,Plain: Plain\n                                  ,Fitted: Fitted\n                                  ,Cropped: Cropped\n                                  ,Tiled: Tiled\n                                  ,image: image\n                                  ,fittedImage: fittedImage\n                                  ,croppedImage: croppedImage\n                                  ,tiledImage: tiledImage\n                                  ,P: P\n                                  ,Z: Z\n                                  ,N: N\n                                  ,Absolute: Absolute\n                                  ,Relative: Relative\n                                  ,Position: Position\n                                  ,container: container\n                                  ,spacer: spacer\n                                  ,DUp: DUp\n                                  ,DDown: DDown\n                                  ,DLeft: DLeft\n                                  ,DRight: DRight\n                                  ,DIn: DIn\n                                  ,DOut: DOut\n                                  ,flow: flow\n                                  ,above: above\n                                  ,below: below\n                                  ,beside: beside\n                                  ,layers: layers\n                                  ,absolute: absolute\n                                  ,relative: relative\n                                  ,middle: middle\n                                  ,topLeft: topLeft\n                                  ,topRight: topRight\n                                  ,bottomLeft: bottomLeft\n                                  ,bottomRight: bottomRight\n                                  ,midLeft: midLeft\n                                  ,midRight: midRight\n                                  ,midTop: midTop\n                                  ,midBottom: midBottom\n                                  ,middleAt: middleAt\n                                  ,topLeftAt: topLeftAt\n                                  ,topRightAt: topRightAt\n                                  ,bottomLeftAt: bottomLeftAt\n                                  ,bottomRightAt: bottomRightAt\n                                  ,midLeftAt: midLeftAt\n                                  ,midRightAt: midRightAt\n                                  ,midTopAt: midTopAt\n                                  ,midBottomAt: midBottomAt\n                                  ,up: up\n                                  ,down: down\n                                  ,left: left\n                                  ,right: right\n                                  ,inward: inward\n                                  ,outward: outward};\n   return _elm.Graphics.Element.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values)\n   return _elm.Html.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node(\"body\");\n   var section = node(\"section\");\n   var nav = node(\"nav\");\n   var article = node(\"article\");\n   var aside = node(\"aside\");\n   var h1 = node(\"h1\");\n   var h2 = node(\"h2\");\n   var h3 = node(\"h3\");\n   var h4 = node(\"h4\");\n   var h5 = node(\"h5\");\n   var h6 = node(\"h6\");\n   var header = node(\"header\");\n   var footer = node(\"footer\");\n   var address = node(\"address\");\n   var main$ = node(\"main\");\n   var p = node(\"p\");\n   var hr = node(\"hr\");\n   var pre = node(\"pre\");\n   var blockquote = node(\"blockquote\");\n   var ol = node(\"ol\");\n   var ul = node(\"ul\");\n   var li = node(\"li\");\n   var dl = node(\"dl\");\n   var dt = node(\"dt\");\n   var dd = node(\"dd\");\n   var figure = node(\"figure\");\n   var figcaption = node(\"figcaption\");\n   var div = node(\"div\");\n   var a = node(\"a\");\n   var em = node(\"em\");\n   var strong = node(\"strong\");\n   var small = node(\"small\");\n   var s = node(\"s\");\n   var cite = node(\"cite\");\n   var q = node(\"q\");\n   var dfn = node(\"dfn\");\n   var abbr = node(\"abbr\");\n   var time = node(\"time\");\n   var code = node(\"code\");\n   var $var = node(\"var\");\n   var samp = node(\"samp\");\n   var kbd = node(\"kbd\");\n   var sub = node(\"sub\");\n   var sup = node(\"sup\");\n   var i = node(\"i\");\n   var b = node(\"b\");\n   var u = node(\"u\");\n   var mark = node(\"mark\");\n   var ruby = node(\"ruby\");\n   var rt = node(\"rt\");\n   var rp = node(\"rp\");\n   var bdi = node(\"bdi\");\n   var bdo = node(\"bdo\");\n   var span = node(\"span\");\n   var br = node(\"br\");\n   var wbr = node(\"wbr\");\n   var ins = node(\"ins\");\n   var del = node(\"del\");\n   var img = node(\"img\");\n   var iframe = node(\"iframe\");\n   var embed = node(\"embed\");\n   var object = node(\"object\");\n   var param = node(\"param\");\n   var video = node(\"video\");\n   var audio = node(\"audio\");\n   var source = node(\"source\");\n   var track = node(\"track\");\n   var canvas = node(\"canvas\");\n   var svg = node(\"svg\");\n   var math = node(\"math\");\n   var table = node(\"table\");\n   var caption = node(\"caption\");\n   var colgroup = node(\"colgroup\");\n   var col = node(\"col\");\n   var tbody = node(\"tbody\");\n   var thead = node(\"thead\");\n   var tfoot = node(\"tfoot\");\n   var tr = node(\"tr\");\n   var td = node(\"td\");\n   var th = node(\"th\");\n   var form = node(\"form\");\n   var fieldset = node(\"fieldset\");\n   var legend = node(\"legend\");\n   var label = node(\"label\");\n   var input = node(\"input\");\n   var button = node(\"button\");\n   var select = node(\"select\");\n   var datalist = node(\"datalist\");\n   var optgroup = node(\"optgroup\");\n   var option = node(\"option\");\n   var textarea = node(\"textarea\");\n   var keygen = node(\"keygen\");\n   var output = node(\"output\");\n   var progress = node(\"progress\");\n   var meter = node(\"meter\");\n   var details = node(\"details\");\n   var summary = node(\"summary\");\n   var menuitem = node(\"menuitem\");\n   var menu = node(\"menu\");\n   _elm.Html.values = {_op: _op\n                      ,node: node\n                      ,text: text\n                      ,toElement: toElement\n                      ,fromElement: fromElement\n                      ,body: body\n                      ,section: section\n                      ,nav: nav\n                      ,article: article\n                      ,aside: aside\n                      ,h1: h1\n                      ,h2: h2\n                      ,h3: h3\n                      ,h4: h4\n                      ,h5: h5\n                      ,h6: h6\n                      ,header: header\n                      ,footer: footer\n                      ,address: address\n                      ,main$: main$\n                      ,p: p\n                      ,hr: hr\n                      ,pre: pre\n                      ,blockquote: blockquote\n                      ,ol: ol\n                      ,ul: ul\n                      ,li: li\n                      ,dl: dl\n                      ,dt: dt\n                      ,dd: dd\n                      ,figure: figure\n                      ,figcaption: figcaption\n                      ,div: div\n                      ,a: a\n                      ,em: em\n                      ,strong: strong\n                      ,small: small\n                      ,s: s\n                      ,cite: cite\n                      ,q: q\n                      ,dfn: dfn\n                      ,abbr: abbr\n                      ,time: time\n                      ,code: code\n                      ,$var: $var\n                      ,samp: samp\n                      ,kbd: kbd\n                      ,sub: sub\n                      ,sup: sup\n                      ,i: i\n                      ,b: b\n                      ,u: u\n                      ,mark: mark\n                      ,ruby: ruby\n                      ,rt: rt\n                      ,rp: rp\n                      ,bdi: bdi\n                      ,bdo: bdo\n                      ,span: span\n                      ,br: br\n                      ,wbr: wbr\n                      ,ins: ins\n                      ,del: del\n                      ,img: img\n                      ,iframe: iframe\n                      ,embed: embed\n                      ,object: object\n                      ,param: param\n                      ,video: video\n                      ,audio: audio\n                      ,source: source\n                      ,track: track\n                      ,canvas: canvas\n                      ,svg: svg\n                      ,math: math\n                      ,table: table\n                      ,caption: caption\n                      ,colgroup: colgroup\n                      ,col: col\n                      ,tbody: tbody\n                      ,thead: thead\n                      ,tfoot: tfoot\n                      ,tr: tr\n                      ,td: td\n                      ,th: th\n                      ,form: form\n                      ,fieldset: fieldset\n                      ,legend: legend\n                      ,label: label\n                      ,input: input\n                      ,button: button\n                      ,select: select\n                      ,datalist: datalist\n                      ,optgroup: optgroup\n                      ,option: option\n                      ,textarea: textarea\n                      ,keygen: keygen\n                      ,output: output\n                      ,progress: progress\n                      ,meter: meter\n                      ,details: details\n                      ,summary: summary\n                      ,menuitem: menuitem\n                      ,menu: menu};\n   return _elm.Html.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values)\n   return _elm.Html.Attributes.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Attributes\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,\n   string) {\n      return A2(property,\n      name,\n      $Json$Encode.string(string));\n   });\n   var $class = function (name) {\n      return A2(stringProperty,\n      \"className\",\n      name);\n   };\n   var id = function (name) {\n      return A2(stringProperty,\n      \"id\",\n      name);\n   };\n   var title = function (name) {\n      return A2(stringProperty,\n      \"title\",\n      name);\n   };\n   var accesskey = function ($char) {\n      return A2(stringProperty,\n      \"accesskey\",\n      $String.fromList(_L.fromArray([$char])));\n   };\n   var contextmenu = function (value) {\n      return A2(stringProperty,\n      \"contextmenu\",\n      value);\n   };\n   var dir = function (value) {\n      return A2(stringProperty,\n      \"dir\",\n      value);\n   };\n   var draggable = function (value) {\n      return A2(stringProperty,\n      \"draggable\",\n      value);\n   };\n   var dropzone = function (value) {\n      return A2(stringProperty,\n      \"dropzone\",\n      value);\n   };\n   var itemprop = function (value) {\n      return A2(stringProperty,\n      \"itemprop\",\n      value);\n   };\n   var lang = function (value) {\n      return A2(stringProperty,\n      \"lang\",\n      value);\n   };\n   var tabindex = function (n) {\n      return A2(stringProperty,\n      \"tabIndex\",\n      $Basics.toString(n));\n   };\n   var charset = function (value) {\n      return A2(stringProperty,\n      \"charset\",\n      value);\n   };\n   var content = function (value) {\n      return A2(stringProperty,\n      \"content\",\n      value);\n   };\n   var httpEquiv = function (value) {\n      return A2(stringProperty,\n      \"httpEquiv\",\n      value);\n   };\n   var language = function (value) {\n      return A2(stringProperty,\n      \"language\",\n      value);\n   };\n   var src = function (value) {\n      return A2(stringProperty,\n      \"src\",\n      value);\n   };\n   var height = function (value) {\n      return A2(stringProperty,\n      \"height\",\n      $Basics.toString(value));\n   };\n   var width = function (value) {\n      return A2(stringProperty,\n      \"width\",\n      $Basics.toString(value));\n   };\n   var alt = function (value) {\n      return A2(stringProperty,\n      \"alt\",\n      value);\n   };\n   var poster = function (value) {\n      return A2(stringProperty,\n      \"poster\",\n      value);\n   };\n   var kind = function (value) {\n      return A2(stringProperty,\n      \"kind\",\n      value);\n   };\n   var srclang = function (value) {\n      return A2(stringProperty,\n      \"srclang\",\n      value);\n   };\n   var sandbox = function (value) {\n      return A2(stringProperty,\n      \"sandbox\",\n      value);\n   };\n   var srcdoc = function (value) {\n      return A2(stringProperty,\n      \"srcdoc\",\n      value);\n   };\n   var type$ = function (value) {\n      return A2(stringProperty,\n      \"type\",\n      value);\n   };\n   var value = function (value) {\n      return A2(stringProperty,\n      \"value\",\n      value);\n   };\n   var placeholder = function (value) {\n      return A2(stringProperty,\n      \"placeholder\",\n      value);\n   };\n   var accept = function (value) {\n      return A2(stringProperty,\n      \"accept\",\n      value);\n   };\n   var acceptCharset = function (value) {\n      return A2(stringProperty,\n      \"acceptCharset\",\n      value);\n   };\n   var action = function (value) {\n      return A2(stringProperty,\n      \"action\",\n      value);\n   };\n   var autocomplete = function (bool) {\n      return A2(stringProperty,\n      \"autocomplete\",\n      bool ? \"on\" : \"off\");\n   };\n   var autosave = function (value) {\n      return A2(stringProperty,\n      \"autosave\",\n      value);\n   };\n   var enctype = function (value) {\n      return A2(stringProperty,\n      \"enctype\",\n      value);\n   };\n   var formaction = function (value) {\n      return A2(stringProperty,\n      \"formaction\",\n      value);\n   };\n   var list = function (value) {\n      return A2(stringProperty,\n      \"list\",\n      value);\n   };\n   var maxlength = function (n) {\n      return A2(stringProperty,\n      \"maxLength\",\n      $Basics.toString(n));\n   };\n   var method = function (value) {\n      return A2(stringProperty,\n      \"method\",\n      value);\n   };\n   var name = function (value) {\n      return A2(stringProperty,\n      \"name\",\n      value);\n   };\n   var pattern = function (value) {\n      return A2(stringProperty,\n      \"pattern\",\n      value);\n   };\n   var size = function (n) {\n      return A2(stringProperty,\n      \"size\",\n      $Basics.toString(n));\n   };\n   var $for = function (value) {\n      return A2(stringProperty,\n      \"htmlFor\",\n      value);\n   };\n   var form = function (value) {\n      return A2(stringProperty,\n      \"form\",\n      value);\n   };\n   var max = function (value) {\n      return A2(stringProperty,\n      \"max\",\n      value);\n   };\n   var min = function (value) {\n      return A2(stringProperty,\n      \"min\",\n      value);\n   };\n   var step = function (n) {\n      return A2(stringProperty,\n      \"step\",\n      $Basics.toString(n));\n   };\n   var cols = function (n) {\n      return A2(stringProperty,\n      \"cols\",\n      $Basics.toString(n));\n   };\n   var rows = function (n) {\n      return A2(stringProperty,\n      \"rows\",\n      $Basics.toString(n));\n   };\n   var wrap = function (value) {\n      return A2(stringProperty,\n      \"wrap\",\n      value);\n   };\n   var ismap = function (value) {\n      return A2(stringProperty,\n      \"ismap\",\n      value);\n   };\n   var usemap = function (value) {\n      return A2(stringProperty,\n      \"usemap\",\n      value);\n   };\n   var shape = function (value) {\n      return A2(stringProperty,\n      \"shape\",\n      value);\n   };\n   var coords = function (value) {\n      return A2(stringProperty,\n      \"coords\",\n      value);\n   };\n   var challenge = function (value) {\n      return A2(stringProperty,\n      \"challenge\",\n      value);\n   };\n   var keytype = function (value) {\n      return A2(stringProperty,\n      \"keytype\",\n      value);\n   };\n   var align = function (value) {\n      return A2(stringProperty,\n      \"align\",\n      value);\n   };\n   var cite = function (value) {\n      return A2(stringProperty,\n      \"cite\",\n      value);\n   };\n   var href = function (value) {\n      return A2(stringProperty,\n      \"href\",\n      value);\n   };\n   var target = function (value) {\n      return A2(stringProperty,\n      \"target\",\n      value);\n   };\n   var downloadAs = function (value) {\n      return A2(stringProperty,\n      \"download\",\n      value);\n   };\n   var hreflang = function (value) {\n      return A2(stringProperty,\n      \"hreflang\",\n      value);\n   };\n   var media = function (value) {\n      return A2(stringProperty,\n      \"media\",\n      value);\n   };\n   var ping = function (value) {\n      return A2(stringProperty,\n      \"ping\",\n      value);\n   };\n   var rel = function (value) {\n      return A2(stringProperty,\n      \"rel\",\n      value);\n   };\n   var datetime = function (value) {\n      return A2(stringProperty,\n      \"datetime\",\n      value);\n   };\n   var pubdate = function (value) {\n      return A2(stringProperty,\n      \"pubdate\",\n      value);\n   };\n   var start = function (n) {\n      return A2(stringProperty,\n      \"start\",\n      $Basics.toString(n));\n   };\n   var colspan = function (value) {\n      return A2(stringProperty,\n      \"colSpan\",\n      value);\n   };\n   var headers = function (value) {\n      return A2(stringProperty,\n      \"headers\",\n      value);\n   };\n   var rowspan = function (value) {\n      return A2(stringProperty,\n      \"rowSpan\",\n      value);\n   };\n   var scope = function (value) {\n      return A2(stringProperty,\n      \"scope\",\n      value);\n   };\n   var manifest = function (value) {\n      return A2(stringProperty,\n      \"manifest\",\n      value);\n   };\n   var boolProperty = F2(function (name,\n   bool) {\n      return A2(property,\n      name,\n      $Json$Encode.bool(bool));\n   });\n   var hidden = function (bool) {\n      return A2(boolProperty,\n      \"hidden\",\n      bool);\n   };\n   var contenteditable = function (bool) {\n      return A2(boolProperty,\n      \"contentEditable\",\n      bool);\n   };\n   var spellcheck = function (bool) {\n      return A2(boolProperty,\n      \"spellcheck\",\n      bool);\n   };\n   var async = function (bool) {\n      return A2(boolProperty,\n      \"async\",\n      bool);\n   };\n   var defer = function (bool) {\n      return A2(boolProperty,\n      \"defer\",\n      bool);\n   };\n   var scoped = function (bool) {\n      return A2(boolProperty,\n      \"scoped\",\n      bool);\n   };\n   var autoplay = function (bool) {\n      return A2(boolProperty,\n      \"autoplay\",\n      bool);\n   };\n   var controls = function (bool) {\n      return A2(boolProperty,\n      \"controls\",\n      bool);\n   };\n   var loop = function (bool) {\n      return A2(boolProperty,\n      \"loop\",\n      bool);\n   };\n   var preload = function (bool) {\n      return A2(boolProperty,\n      \"preload\",\n      bool);\n   };\n   var $default = function (bool) {\n      return A2(boolProperty,\n      \"default\",\n      bool);\n   };\n   var seamless = function (bool) {\n      return A2(boolProperty,\n      \"seamless\",\n      bool);\n   };\n   var checked = function (bool) {\n      return A2(boolProperty,\n      \"checked\",\n      bool);\n   };\n   var selected = function (bool) {\n      return A2(boolProperty,\n      \"selected\",\n      bool);\n   };\n   var autofocus = function (bool) {\n      return A2(boolProperty,\n      \"autofocus\",\n      bool);\n   };\n   var disabled = function (bool) {\n      return A2(boolProperty,\n      \"disabled\",\n      bool);\n   };\n   var multiple = function (bool) {\n      return A2(boolProperty,\n      \"multiple\",\n      bool);\n   };\n   var novalidate = function (bool) {\n      return A2(boolProperty,\n      \"novalidate\",\n      bool);\n   };\n   var readonly = function (bool) {\n      return A2(boolProperty,\n      \"readonly\",\n      bool);\n   };\n   var required = function (bool) {\n      return A2(boolProperty,\n      \"required\",\n      bool);\n   };\n   var download = function (bool) {\n      return A2(boolProperty,\n      \"download\",\n      bool);\n   };\n   var reversed = function (bool) {\n      return A2(boolProperty,\n      \"reversed\",\n      bool);\n   };\n   var style = function (props) {\n      return property(\"style\")($Json$Encode.object($List.map(function (_v0) {\n         return function () {\n            switch (_v0.ctor)\n            {case \"_Tuple2\":\n               return {ctor: \"_Tuple2\"\n                      ,_0: _v0._0\n                      ,_1: $Json$Encode.string(_v0._1)};}\n            _U.badCase($moduleName,\n            \"on line 136, column 35 to 57\");\n         }();\n      })(props)));\n   };\n   var key = function (k) {\n      return A2(stringProperty,\n      \"key\",\n      k);\n   };\n   _elm.Html.Attributes.values = {_op: _op\n                                 ,key: key\n                                 ,style: style\n                                 ,property: property\n                                 ,stringProperty: stringProperty\n                                 ,boolProperty: boolProperty\n                                 ,$class: $class\n                                 ,hidden: hidden\n                                 ,id: id\n                                 ,title: title\n                                 ,accesskey: accesskey\n                                 ,contenteditable: contenteditable\n                                 ,contextmenu: contextmenu\n                                 ,dir: dir\n                                 ,draggable: draggable\n                                 ,dropzone: dropzone\n                                 ,itemprop: itemprop\n                                 ,lang: lang\n                                 ,spellcheck: spellcheck\n                                 ,tabindex: tabindex\n                                 ,async: async\n                                 ,charset: charset\n                                 ,content: content\n                                 ,defer: defer\n                                 ,httpEquiv: httpEquiv\n                                 ,language: language\n                                 ,scoped: scoped\n                                 ,src: src\n                                 ,height: height\n                                 ,width: width\n                                 ,alt: alt\n                                 ,autoplay: autoplay\n                                 ,controls: controls\n                                 ,loop: loop\n                                 ,preload: preload\n                                 ,poster: poster\n                                 ,$default: $default\n                                 ,kind: kind\n                                 ,srclang: srclang\n                                 ,sandbox: sandbox\n                                 ,seamless: seamless\n                                 ,srcdoc: srcdoc\n                                 ,type$: type$\n                                 ,value: value\n                                 ,checked: checked\n                                 ,placeholder: placeholder\n                                 ,selected: selected\n                                 ,accept: accept\n                                 ,acceptCharset: acceptCharset\n                                 ,action: action\n                                 ,autocomplete: autocomplete\n                                 ,autofocus: autofocus\n                                 ,autosave: autosave\n                                 ,disabled: disabled\n                                 ,enctype: enctype\n                                 ,formaction: formaction\n                                 ,list: list\n                                 ,maxlength: maxlength\n                                 ,method: method\n                                 ,multiple: multiple\n                                 ,name: name\n                                 ,novalidate: novalidate\n                                 ,pattern: pattern\n                                 ,readonly: readonly\n                                 ,required: required\n                                 ,size: size\n                                 ,$for: $for\n                                 ,form: form\n                                 ,max: max\n                                 ,min: min\n                                 ,step: step\n                                 ,cols: cols\n                                 ,rows: rows\n                                 ,wrap: wrap\n                                 ,ismap: ismap\n                                 ,usemap: usemap\n                                 ,shape: shape\n                                 ,coords: coords\n                                 ,challenge: challenge\n                                 ,keytype: keytype\n                                 ,align: align\n                                 ,cite: cite\n                                 ,href: href\n                                 ,target: target\n                                 ,download: download\n                                 ,downloadAs: downloadAs\n                                 ,hreflang: hreflang\n                                 ,media: media\n                                 ,ping: ping\n                                 ,rel: rel\n                                 ,datetime: datetime\n                                 ,pubdate: pubdate\n                                 ,reversed: reversed\n                                 ,start: start\n                                 ,colspan: colspan\n                                 ,headers: headers\n                                 ,rowspan: rowspan\n                                 ,scope: scope\n                                 ,manifest: manifest};\n   return _elm.Html.Attributes.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Events = Elm.Html.Events || {};\nElm.Html.Events.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Events = _elm.Html.Events || {};\n   if (_elm.Html.Events.values)\n   return _elm.Html.Events.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Events\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var keyCode = A2($Json$Decode._op[\":=\"],\n   \"keyCode\",\n   $Json$Decode.$int);\n   var targetChecked = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"checked\"]),\n   $Json$Decode.bool);\n   var targetValue = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"value\"]),\n   $Json$Decode.string);\n   var on = $VirtualDom.on;\n   var messageOn = F2(function (name,\n   msg) {\n      return A3(on,\n      name,\n      $Json$Decode.value,\n      $Basics.always(msg));\n   });\n   var onClick = messageOn(\"click\");\n   var onDoubleClick = messageOn(\"dblclick\");\n   var onMouseMove = messageOn(\"mousemove\");\n   var onMouseDown = messageOn(\"mousedown\");\n   var onMouseUp = messageOn(\"mouseup\");\n   var onMouseEnter = messageOn(\"mouseenter\");\n   var onMouseLeave = messageOn(\"mouseleave\");\n   var onMouseOver = messageOn(\"mouseover\");\n   var onMouseOut = messageOn(\"mouseout\");\n   var onBlur = messageOn(\"blur\");\n   var onFocus = messageOn(\"focus\");\n   var onSubmit = messageOn(\"submit\");\n   var onKey = function (name) {\n      return A2(on,name,keyCode);\n   };\n   var onKeyUp = onKey(\"keyup\");\n   var onKeyDown = onKey(\"keydown\");\n   var onKeyPress = onKey(\"keypress\");\n   _elm.Html.Events.values = {_op: _op\n                             ,on: on\n                             ,targetValue: targetValue\n                             ,targetChecked: targetChecked\n                             ,keyCode: keyCode\n                             ,messageOn: messageOn\n                             ,onClick: onClick\n                             ,onDoubleClick: onDoubleClick\n                             ,onMouseMove: onMouseMove\n                             ,onMouseDown: onMouseDown\n                             ,onMouseUp: onMouseUp\n                             ,onMouseEnter: onMouseEnter\n                             ,onMouseLeave: onMouseLeave\n                             ,onMouseOver: onMouseOver\n                             ,onMouseOut: onMouseOut\n                             ,onKey: onKey\n                             ,onKeyUp: onKeyUp\n                             ,onKeyDown: onKeyDown\n                             ,onKeyPress: onKeyPress\n                             ,onBlur: onBlur\n                             ,onFocus: onFocus\n                             ,onSubmit: onSubmit};\n   return _elm.Html.Events.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Lazy = Elm.Html.Lazy || {};\nElm.Html.Lazy.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Lazy = _elm.Html.Lazy || {};\n   if (_elm.Html.Lazy.values)\n   return _elm.Html.Lazy.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Lazy\",\n   $Html = Elm.Html.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var lazy3 = $VirtualDom.lazy3;\n   var lazy2 = $VirtualDom.lazy2;\n   var lazy = $VirtualDom.lazy;\n   _elm.Html.Lazy.values = {_op: _op\n                           ,lazy: lazy\n                           ,lazy2: lazy2\n                           ,lazy3: lazy3};\n   return _elm.Html.Lazy.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values)\n   return _elm.Json.Decode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Decode\",\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[\":=\"] = $Native$Json.decodeField;\n   var at = F2(function (fields,\n   decoder) {\n      return A3($List.foldr,\n      F2(function (x,y) {\n         return A2(_op[\":=\"],x,y);\n      }),\n      decoder,\n      fields);\n   });\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {\n      return A2(map,\n      $Dict.fromList,\n      keyValuePairs(decoder));\n   };\n   var Decoder = {ctor: \"Decoder\"};\n   _elm.Json.Decode.values = {_op: _op\n                             ,Decoder: Decoder\n                             ,map: map\n                             ,decodeString: decodeString\n                             ,at: at\n                             ,object1: object1\n                             ,object2: object2\n                             ,object3: object3\n                             ,object4: object4\n                             ,object5: object5\n                             ,object6: object6\n                             ,object7: object7\n                             ,object8: object8\n                             ,keyValuePairs: keyValuePairs\n                             ,dict: dict\n                             ,oneOf: oneOf\n                             ,string: string\n                             ,$float: $float\n                             ,$int: $int\n                             ,bool: bool\n                             ,list: list\n                             ,array: array\n                             ,$null: $null\n                             ,maybe: maybe\n                             ,value: value\n                             ,decodeValue: decodeValue\n                             ,customDecoder: customDecoder\n                             ,andThen: andThen\n                             ,fail: fail\n                             ,succeed: succeed\n                             ,tuple1: tuple1\n                             ,tuple2: tuple2\n                             ,tuple3: tuple3\n                             ,tuple4: tuple4\n                             ,tuple5: tuple5\n                             ,tuple6: tuple6\n                             ,tuple7: tuple7\n                             ,tuple8: tuple8};\n   return _elm.Json.Decode.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values)\n   return _elm.Json.Encode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Encode\",\n   $Array = Elm.Array.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm);\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: \"Value\"};\n   _elm.Json.Encode.values = {_op: _op\n                             ,Value: Value\n                             ,encode: encode\n                             ,string: string\n                             ,$int: $int\n                             ,$float: $float\n                             ,bool: bool\n                             ,$null: $null\n                             ,object: object\n                             ,array: array\n                             ,list: list};\n   return _elm.Json.Encode.values;\n};\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   \"use strict\";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values)\n   return _elm.List.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"List\",\n   $Basics = Elm.Basics.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$List = Elm.Native.List.make(_elm);\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = $Native$List.sort;\n   var repeat = $Native$List.repeat;\n   var drop = $Native$List.drop;\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var append = $Native$List.append;\n   var any = $Native$List.any;\n   var all = $Native$List.all;\n   var reverse = $Native$List.reverse;\n   var length = $Native$List.length;\n   var filter = $Native$List.filter;\n   var scanl1 = $Native$List.scanl1;\n   var scanl = $Native$List.scanl;\n   var foldr1 = $Native$List.foldr1;\n   var foldl1 = $Native$List.foldl1;\n   var maximum = foldl1($Basics.max);\n   var minimum = foldl1($Basics.min);\n   var foldr = $Native$List.foldr;\n   var concat = function (lists) {\n      return A3(foldr,\n      append,\n      _L.fromArray([]),\n      lists);\n   };\n   var foldl = $Native$List.foldl;\n   var sum = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x + y;\n      }),\n      0,\n      numbers);\n   };\n   var product = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x * y;\n      }),\n      1,\n      numbers);\n   };\n   var indexedMap = F2(function (f,\n   xs) {\n      return A3(map2,\n      f,\n      _L.range(0,length(xs) - 1),\n      xs);\n   });\n   var map = $Native$List.map;\n   var concatMap = F2(function (f,\n   list) {\n      return concat(A2(map,\n      f,\n      list));\n   });\n   var member = $Native$List.member;\n   var isEmpty = function (xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"[]\": return true;}\n         return false;\n      }();\n   };\n   var tail = $Native$List.tail;\n   var head = $Native$List.head;\n   _op[\"::\"] = $Native$List.cons;\n   var maybeCons = F3(function (f,\n   mx,\n   xs) {\n      return function () {\n         var _v1 = f(mx);\n         switch (_v1.ctor)\n         {case \"Just\":\n            return A2(_op[\"::\"],_v1._0,xs);\n            case \"Nothing\": return xs;}\n         _U.badCase($moduleName,\n         \"between lines 162 and 169\");\n      }();\n   });\n   var filterMap = F2(function (f,\n   xs) {\n      return A3(foldr,\n      maybeCons(f),\n      _L.fromArray([]),\n      xs);\n   });\n   var partition = F2(function (pred,\n   list) {\n      return function () {\n         var step = F2(function (x,\n         _v3) {\n            return function () {\n               switch (_v3.ctor)\n               {case \"_Tuple2\":\n                  return pred(x) ? {ctor: \"_Tuple2\"\n                                   ,_0: A2(_op[\"::\"],x,_v3._0)\n                                   ,_1: _v3._1} : {ctor: \"_Tuple2\"\n                                                  ,_0: _v3._0\n                                                  ,_1: A2(_op[\"::\"],x,_v3._1)};}\n               _U.badCase($moduleName,\n               \"between lines 270 and 272\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         list);\n      }();\n   });\n   var unzip = function (pairs) {\n      return function () {\n         var step = F2(function (_v7,\n         _v8) {\n            return function () {\n               switch (_v8.ctor)\n               {case \"_Tuple2\":\n                  return function () {\n                       switch (_v7.ctor)\n                       {case \"_Tuple2\":\n                          return {ctor: \"_Tuple2\"\n                                 ,_0: A2(_op[\"::\"],_v7._0,_v8._0)\n                                 ,_1: A2(_op[\"::\"],\n                                 _v7._1,\n                                 _v8._1)};}\n                       _U.badCase($moduleName,\n                       \"on line 308, column 12 to 28\");\n                    }();}\n               _U.badCase($moduleName,\n               \"on line 308, column 12 to 28\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         pairs);\n      }();\n   };\n   var intersperse = F2(function (sep,\n   xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"::\": return function () {\n                 var step = F2(function (x,\n                 rest) {\n                    return A2(_op[\"::\"],\n                    sep,\n                    A2(_op[\"::\"],x,rest));\n                 });\n                 var spersed = A3(foldr,\n                 step,\n                 _L.fromArray([]),\n                 xs._1);\n                 return A2(_op[\"::\"],\n                 xs._0,\n                 spersed);\n              }();\n            case \"[]\":\n            return _L.fromArray([]);}\n         _U.badCase($moduleName,\n         \"between lines 319 and 330\");\n      }();\n   });\n   _elm.List.values = {_op: _op\n                      ,head: head\n                      ,tail: tail\n                      ,isEmpty: isEmpty\n                      ,member: member\n                      ,map: map\n                      ,indexedMap: indexedMap\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,foldl1: foldl1\n                      ,foldr1: foldr1\n                      ,scanl: scanl\n                      ,scanl1: scanl1\n                      ,filter: filter\n                      ,filterMap: filterMap\n                      ,maybeCons: maybeCons\n                      ,length: length\n                      ,reverse: reverse\n                      ,all: all\n                      ,any: any\n                      ,append: append\n                      ,concat: concat\n                      ,concatMap: concatMap\n                      ,sum: sum\n                      ,product: product\n                      ,maximum: maximum\n                      ,minimum: minimum\n                      ,partition: partition\n                      ,map2: map2\n                      ,map3: map3\n                      ,map4: map4\n                      ,map5: map5\n                      ,unzip: unzip\n                      ,intersperse: intersperse\n                      ,take: take\n                      ,drop: drop\n                      ,repeat: repeat\n                      ,sort: sort\n                      ,sortBy: sortBy\n                      ,sortWith: sortWith};\n   return _elm.List.values;\n};\nElm.LocalChannel = Elm.LocalChannel || {};\nElm.LocalChannel.make = function (_elm) {\n   \"use strict\";\n   _elm.LocalChannel = _elm.LocalChannel || {};\n   if (_elm.LocalChannel.values)\n   return _elm.LocalChannel.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"LocalChannel\",\n   $Signal = Elm.Signal.make(_elm);\n   var send = F2(function (_v0,\n   value) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"LocalChannel\":\n            return _v0._0(value);}\n         _U.badCase($moduleName,\n         \"on line 91, column 3 to 22\");\n      }();\n   });\n   var LocalChannel = function (a) {\n      return {ctor: \"LocalChannel\"\n             ,_0: a};\n   };\n   var create = F2(function (generalize,\n   channel) {\n      return LocalChannel(function (v) {\n         return A2($Signal.send,\n         channel,\n         generalize(v));\n      });\n   });\n   var localize = F2(function (generalize,\n   _v3) {\n      return function () {\n         switch (_v3.ctor)\n         {case \"LocalChannel\":\n            return LocalChannel(function (v) {\n                 return _v3._0(generalize(v));\n              });}\n         _U.badCase($moduleName,\n         \"on line 83, column 3 to 41\");\n      }();\n   });\n   _elm.LocalChannel.values = {_op: _op\n                              ,create: create\n                              ,localize: localize\n                              ,send: send};\n   return _elm.LocalChannel.values;\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   \"use strict\";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values)\n   return _elm.Maybe.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Maybe\";\n   var withDefault = F2(function ($default,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\": return maybe._0;\n            case \"Nothing\":\n            return $default;}\n         _U.badCase($moduleName,\n         \"between lines 45 and 56\");\n      }();\n   });\n   var Nothing = {ctor: \"Nothing\"};\n   var oneOf = function (maybes) {\n      return function () {\n         switch (maybes.ctor)\n         {case \"::\": return function () {\n                 switch (maybes._0.ctor)\n                 {case \"Just\": return maybes._0;\n                    case \"Nothing\":\n                    return oneOf(maybes._1);}\n                 _U.badCase($moduleName,\n                 \"between lines 64 and 73\");\n              }();\n            case \"[]\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 59 and 73\");\n      }();\n   };\n   var andThen = F2(function (maybeValue,\n   callback) {\n      return function () {\n         switch (maybeValue.ctor)\n         {case \"Just\":\n            return callback(maybeValue._0);\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 110 and 112\");\n      }();\n   });\n   var Just = function (a) {\n      return {ctor: \"Just\",_0: a};\n   };\n   var map = F2(function (f,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Just(f(maybe._0));\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 76 and 107\");\n      }();\n   });\n   _elm.Maybe.values = {_op: _op\n                       ,andThen: andThen\n                       ,map: map\n                       ,withDefault: withDefault\n                       ,oneOf: oneOf\n                       ,Just: Just\n                       ,Nothing: Nothing};\n   return _elm.Maybe.values;\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Array = elm.Native.Array || {};\n    if (elm.Native.Array.values) return elm.Native.Array.values;\n    if ('values' in Elm.Native.Array)\n      return elm.Native.Array.values = Elm.Native.Array.values;\n\n    var List = Elm.Native.List.make(elm);\n\n    // A RRB-Tree has two distinct data types.\n    // Leaf -> \"height\"  is always 0\n    //         \"table\"   is an array of elements\n    // Node -> \"height\"  is always greater than 0\n    //         \"table\"   is an array of child nodes\n    //         \"lengths\" is an array of accumulated lengths of the child nodes\n\n    // M is the maximal table size. 32 seems fast. E is the allowed increase\n    // of search steps when concatting to find an index. Lower values will\n    // decrease balancing, but will increase search steps.\n    var M = 32;\n    var E = 2;\n\n    // An empty array.\n    var empty = { ctor:\"_Array\", height:0, table:new Array() };\n\n    function get(i, array) {\n        if (i < 0 || i >= length(array)) {\n            throw new Error(\"Index \" + i + \" is out of range. Check the length of \" +\n                            \"your array first or use getMaybe or getWithDefault.\");\n        }\n        return unsafeGet(i, array);\n    }\n\n    function unsafeGet(i, array) {\n      for (var x = array.height; x > 0; x--) {\n        var slot = i >> (x * 5);\n        while (array.lengths[slot] <= i) {\n          slot++;\n        }\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array = array.table[slot];\n      }\n      return array.table[i];\n    }\n\n    // Sets the value at the index i. Only the nodes leading to i will get\n    // copied and updated.\n    function set(i, item, array) {\n      if (i < 0 || length(array) <= i) {\n        return array;\n      }\n      return unsafeSet(i, item, array);\n    }\n\n    function unsafeSet(i, item, array) {\n      array = nodeCopy(array);\n\n      if (array.height == 0) {\n        array.table[i] = item;\n      } else {\n        var slot = getSlot(i, array);\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array.table[slot] = unsafeSet(i, item, array.table[slot]);\n      }\n      return array;\n    }\n\n    function initialize(len, f) {\n      if (len == 0) { return empty; }\n      var h = Math.floor(Math.log(len)/Math.log(M));\n      return initialize_(f, h, 0, len);\n    }\n\n    function initialize_(f, h, from, to) {\n      if (h == 0) {\n        var table = new Array((to - from) % (M + 1));\n        for (var i = 0; i < table.length; i++) {\n          table[i] = f(from + i);\n        }\n        return { ctor:\"_Array\", height:0, table:table };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = initialize_( f, h - 1, from + (i * step)\n                              , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    function fromList(list) {\n      if (list == List.Nil) { return empty; }\n\n      // Allocate M sized blocks (table) and write list elements to it.\n      var table = new Array(M);\n      var nodes = new Array();\n      var i = 0;\n\n      while (list.ctor !== '[]') {\n        table[i] = list._0;\n        list = list._1;\n        i++;\n\n        // table is full, so we can push a leaf containing it into the\n        // next node.\n        if (i == M) {\n          fromListPush({ ctor:\"_Array\", height:0, table:table }\n                      , nodes);\n          table = new Array(M);\n          i = 0;\n        }\n      }\n\n      // Maybe there is something left on the table.\n      if (i > 0) {\n        fromListPush({ ctor:\"_Array\", height:0, table:table.splice(0,i) }\n                    , nodes);\n      }\n\n      // Go through all of the nodes and eventually push them into higher nodes.\n      for (var h = 0; h < nodes.length - 1; h++) {\n        if (nodes[h].table.length > 0) {\n          fromListPush(nodes[h], nodes);\n        }\n      }\n\n      var head = nodes[nodes.length - 1];\n      if (head.height > 0 && head.table.length == 1) {\n        return head.table[0];\n      } else {\n        return head;\n      }\n    }\n\n    // Push a node into a higher node as a child.\n    function fromListPush(toPush, nodes) {\n      var h = toPush.height;\n\n      // Maybe the node on this height does not exist.\n      if (nodes.length == h) {\n        nodes.push({ ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() });\n      }\n\n      nodes[h].table.push(toPush);\n      var len = length(toPush);\n      if (nodes[h].lengths.length > 0) {\n        len += nodes[h].lengths[nodes[h].lengths.length - 1];\n      }\n      nodes[h].lengths.push(len);\n\n      if (nodes[h].table.length == M) {\n        fromListPush(nodes[h], nodes);\n        nodes[h] = { ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() };\n      }\n    }\n\n    // Pushes an item via push_ to the bottom right of a tree.\n    function push(item, a) {\n      var pushed = push_(item, a);\n      if (pushed !== null) {\n        return pushed;\n      }\n\n      var newTree = create(item, a.height);\n      return siblise(a, newTree);\n    }\n\n    // Recursively tries to push an item to the bottom-right most\n    // tree possible. If there is no space left for the item,\n    // null will be returned.\n    function push_(item, a) {\n      // Handle resursion stop at leaf level.\n      if (a.height == 0) {\n        if (a.table.length < M) {\n          var newA = { ctor:\"_Array\", height:0, table:a.table.slice() };\n          newA.table.push(item);\n          return newA;\n        } else {\n          return null;\n        }\n      }\n\n      // Recursively push\n      var pushed = push_(item, botRight(a));\n\n      // There was space in the bottom right tree, so the slot will\n      // be updated.\n      if (pushed != null) {\n        var newA = nodeCopy(a);\n        newA.table[newA.table.length - 1] = pushed;\n        newA.lengths[newA.lengths.length - 1]++;\n        return newA\n      }\n\n      // When there was no space left, check if there is space left\n      // for a new slot with a tree which contains only the item\n      // at the bottom.\n      if (a.table.length < M) {\n        var newSlot = create(item, a.height - 1);\n        var newA = nodeCopy(a);\n        newA.table.push(newSlot);\n        newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n        return newA\n      } else {\n        return null;\n      }\n    }\n\n    // Converts an array into a list of elements.\n    function toList(a) {\n      return toList_(List.Nil, a);\n    }\n\n    function toList_(list, a) {\n      for (var i = a.table.length - 1; i >= 0; i--) {\n        list = a.height == 0 ? List.Cons(a.table[i], list) : toList_(list, a.table[i]);\n      }\n      return list;\n    }\n\n    // Maps a function over the elements of an array.\n    function map(f, a) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? f(a.table[i]) : map(f, a.table[i]);\n      }\n      return newA;\n    }\n\n    // Maps a function over the elements with their index as first argument.\n    function indexedMap(f, a) {\n      return indexedMap_(f, a, 0);\n    }\n\n    function indexedMap_(f, a, from) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? A2(f, from + i, a.table[i])\n                                      : indexedMap_( f, a.table[i]\n                                                   , i == 0 ? 0 : a.lengths[i - 1]);\n      }\n      return newA;\n    }\n\n    function foldl(f, b, a) {\n      if (a.height == 0) {\n        for (var i = 0; i < a.table.length; i++) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = 0; i < a.table.length; i++) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    function foldr(f, b, a) {\n      if (a.height == 0) {\n        for (var i = a.table.length; i--; ) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = a.table.length; i--; ) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    // TODO: currently, it slices the right, then the left. This can be\n    // optimized.\n    function slice(from, to, a) {\n      if (from < 0) { from += length(a); }\n      if (to < 0)   { to += length(a); }\n      return sliceLeft(from, sliceRight(to, a));\n    }\n\n    function sliceRight(to, a) {\n      if (to == length(a)) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(0, to);\n        return newA;\n      }\n\n      // Slice the right recursively.\n      var right = getSlot(to, a);\n      var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (right == 0) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(0, right)\n                                , lengths:a.lengths.slice(0, right) };\n      if (sliced.table.length > 0) {\n        newA.table[right] = sliced;\n        newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n      }\n      return newA;\n    }\n\n    function sliceLeft(from, a) {\n      if (from == 0) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(from, a.table.length + 1);\n        return newA;\n      }\n\n      // Slice the left recursively.\n      var left = getSlot(from, a);\n      var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (left == a.table.length - 1) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(left, a.table.length + 1)\n                                , lengths:new Array(a.table.length - left) };\n      newA.table[0] = sliced;\n      var len = 0;\n      for (var i = 0; i < newA.table.length; i++) {\n        len += length(newA.table[i]);\n        newA.lengths[i] = len;\n      }\n\n      return newA;\n    }\n\n    // Appends two trees.\n    function append(a,b) {\n      if (a.table.length === 0) {\n        return b;\n      }\n      if (b.table.length === 0) {\n        return a;\n      }\n\n      var c = append_(a, b);\n\n      // Check if both nodes can be crunshed together.\n      if (c[0].table.length + c[1].table.length <= M) {\n        if (c[0].table.length === 0) {\n          return c[1];\n        }\n        if (c[1].table.length === 0) {\n          return c[0];\n        }\n\n        // Adjust .table and .lengths\n        c[0].table = c[0].table.concat(c[1].table);\n        if (c[0].height > 0) {\n          var len = length(c[0]);\n          for (var i = 0; i < c[1].lengths.length; i++) {\n            c[1].lengths[i] += len;\n          }\n          c[0].lengths = c[0].lengths.concat(c[1].lengths);\n        }\n\n        return c[0];\n      }\n\n      if (c[0].height > 0) {\n        var toRemove = calcToRemove(a, b);\n        if (toRemove > E) {\n          c = shuffle(c[0], c[1], toRemove);\n        }\n      }\n\n      return siblise(c[0], c[1]);\n    }\n\n    // Returns an array of two nodes; right and left. One node _may_ be empty.\n    function append_(a, b) {\n      if (a.height === 0 && b.height === 0) {\n        return [a, b];\n      }\n\n      if (a.height !== 1 || b.height !== 1) {\n        if (a.height === b.height) {\n          a = nodeCopy(a);\n          b = nodeCopy(b);\n          var appended = append_(botRight(a), botLeft(b));\n\n          insertRight(a, appended[1]);\n          insertLeft(b, appended[0]);\n        } else if (a.height > b.height) {\n          a = nodeCopy(a);\n          var appended = append_(botRight(a), b);\n\n          insertRight(a, appended[0]);\n          b = parentise(appended[1], appended[1].height + 1);\n        } else {\n          b = nodeCopy(b);\n          var appended = append_(a, botLeft(b));\n\n          var left = appended[0].table.length === 0 ? 0 : 1;\n          var right = left === 0 ? 1 : 0;\n          insertLeft(b, appended[left]);\n          a = parentise(appended[right], appended[right].height + 1);\n        }\n      }\n\n      // Check if balancing is needed and return based on that.\n      if (a.table.length === 0 || b.table.length === 0) {\n        return [a,b];\n      }\n\n      var toRemove = calcToRemove(a, b);\n      if (toRemove <= E) {\n        return [a,b];\n      }\n      return shuffle(a, b, toRemove);\n    }\n\n    // Helperfunctions for append_. Replaces a child node at the side of the parent.\n    function insertRight(parent, node) {\n      var index = parent.table.length - 1;\n      parent.table[index] = node;\n      parent.lengths[index] = length(node)\n      parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n    }\n\n    function insertLeft(parent, node) {\n      if (node.table.length > 0) {\n        parent.table[0] = node;\n        parent.lengths[0] = length(node);\n\n        var len = length(parent.table[0]);\n        for (var i = 1; i < parent.lengths.length; i++) {\n          len += length(parent.table[i]);\n          parent.lengths[i] = len;\n        }\n      } else {\n        parent.table.shift();\n        for (var i = 1; i < parent.lengths.length; i++) {\n          parent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n        }\n        parent.lengths.shift();\n      }\n    }\n\n    // Returns the extra search steps for E. Refer to the paper.\n    function calcToRemove(a, b) {\n      var subLengths = 0;\n      for (var i = 0; i < a.table.length; i++) {\n        subLengths += a.table[i].table.length;\n      }\n      for (var i = 0; i < b.table.length; i++) {\n        subLengths += b.table[i].table.length;\n      }\n\n      var toRemove = a.table.length + b.table.length\n      return toRemove - (Math.floor((subLengths - 1) / M) + 1);\n    }\n\n    // get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n    function get2(a, b, index) {\n      return index < a.length ? a[index] : b[index - a.length];\n    }\n\n    function set2(a, b, index, value) {\n      if (index < a.length) {\n        a[index] = value;\n      } else {\n        b[index - a.length] = value;\n      }\n    }\n\n    function saveSlot(a, b, index, slot) {\n      set2(a.table, b.table, index, slot);\n\n      var l = (index == 0 || index == a.lengths.length) ?\n                0 : get2(a.lengths, a.lengths, index - 1);\n      set2(a.lengths, b.lengths, index, l + length(slot));\n    }\n\n    // Creates a node or leaf with a given length at their arrays for perfomance.\n    // Is only used by shuffle.\n    function createNode(h, length) {\n      if (length < 0) { length = 0; }\n      var a = { ctor:\"_Array\", height:h, table:new Array(length) };\n      if (h > 0) {\n        a.lengths = new Array(length);\n      }\n      return a;\n    }\n\n    // Returns an array of two balanced nodes.\n    function shuffle(a, b, toRemove) {\n      var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n      var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n      // Skip the slots with size M. More precise: copy the slot references\n      // to the new node\n      var read = 0;\n      while (get2(a.table, b.table, read).table.length % M == 0) {\n        set2(newA.table, newB.table, read, get2(a.table, b.table, read));\n        set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n        read++;\n      }\n\n      // Pulling items from left to right, caching in a slot before writing\n      // it into the new nodes.\n      var write = read;\n      var slot = new createNode(a.height - 1, 0);\n      var from = 0;\n\n      // If the current slot is still containing data, then there will be at\n      // least one more write, so we do not break this loop yet.\n      while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove) {\n        // Find out the max possible items for copying.\n        var source = get2(a.table, b.table, read);\n        var to = Math.min(M - slot.table.length, source.table.length)\n\n        // Copy and adjust size table.\n        slot.table = slot.table.concat(source.table.slice(from, to));\n        if (slot.height > 0) {\n          var len = slot.lengths.length;\n          for (var i = len; i < len + to - from; i++) {\n            slot.lengths[i] = length(slot.table[i]);\n            slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n          }\n        }\n\n        from += to;\n\n        // Only proceed to next slots[i] if the current one was\n        // fully copied.\n        if (source.table.length <= to) {\n          read++; from = 0;\n        }\n\n        // Only create a new slot if the current one is filled up.\n        if (slot.table.length == M) {\n          saveSlot(newA, newB, write, slot);\n          slot = createNode(a.height - 1,0);\n          write++;\n        }\n      }\n\n      // Cleanup after the loop. Copy the last slot into the new nodes.\n      if (slot.table.length > 0) {\n        saveSlot(newA, newB, write, slot);\n        write++;\n      }\n\n      // Shift the untouched slots to the left\n      while (read < a.table.length + b.table.length ) {\n        saveSlot(newA, newB, write, get2(a.table, b.table, read));\n        read++; write++;\n      }\n\n      return [newA, newB];\n    }\n\n    // Navigation functions\n    function botRight(a) { return a.table[a.table.length - 1]; }\n    function botLeft(a)  { return a.table[0]; }\n\n    // Copies a node for updating. Note that you should not use this if\n    // only updating only one of \"table\" or \"lengths\" for performance reasons.\n    function nodeCopy(a) {\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice() };\n      if (a.height > 0) { newA.lengths = a.lengths.slice(); }\n      return newA;\n    }\n\n    // Returns how many items are in the tree.\n    function length(array) {\n      if (array.height == 0) {\n        return array.table.length;\n      } else {\n        return array.lengths[array.lengths.length - 1];\n      }\n    }\n\n    // Calculates in which slot of \"table\" the item probably is, then\n    // find the exact slot via forward searching in  \"lengths\". Returns the index.\n    function getSlot(i, a) {\n      var slot = i >> (5 * a.height);\n      while (a.lengths[slot] <= i) {\n        slot++;\n      }\n      return slot;\n    }\n\n    // Recursively creates a tree with a given height containing\n    // only the given item.\n    function create(item, h) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:[item] };\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[create(item, h - 1)]\n                              , lengths:[1] };\n      }\n    }\n\n    // Recursively creates a tree that contains the given tree.\n    function parentise(tree, h) {\n      if (h == tree.height) {\n        return tree;\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[parentise(tree, h - 1)]\n                              , lengths:[length(tree)] };\n      }\n    }\n\n    // Emphasizes blood brotherhood beneath two trees.\n    function siblise(a, b) {\n      return { ctor:\"_Array\", height:a.height + 1\n                            , table:[a, b]\n                            , lengths:[length(a), length(a) + length(b)] };\n    }\n\n    function toJSArray(a) {\n      var jsArray = new Array(length(a));\n      toJSArray_(jsArray, 0, a);\n      return jsArray;\n    }\n\n    function toJSArray_(jsArray, i, a) {\n      for (var t = 0; t < a.table.length; t++) {\n        if (a.height == 0) {\n          jsArray[i + t] = a.table[t];\n        } else {\n          var inc = t == 0 ? 0 : a.lengths[t - 1];\n          toJSArray_(jsArray, i + inc, a.table[t]);\n        }\n      }\n    }\n\n    function fromJSArray(jsArray) {\n      if (jsArray.length == 0) { return empty; }\n      var h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n      return fromJSArray_(jsArray, h, 0, jsArray.length);\n    }\n\n    function fromJSArray_(jsArray, h, from, to) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:jsArray.slice(from, to) };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = fromJSArray_( jsArray, h - 1, from + (i * step)\n                               , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    Elm.Native.Array.values = {\n      empty:empty,\n      fromList:fromList,\n      toList:toList,\n      initialize:F2(initialize),\n      append:F2(append),\n      push:F2(push),\n      slice:F3(slice),\n      get:F2(get),\n      set:F3(set),\n      map:F2(map),\n      indexedMap:F2(indexedMap),\n      foldl:F3(foldl),\n      foldr:F3(foldr),\n      length:length,\n\n      toJSArray:toJSArray,\n      fromJSArray:fromJSArray\n    };\n\n    return elm.Native.Array.values = Elm.Native.Array.values;\n}\n\n\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(elm) {\n  elm.Native = elm.Native || {};\n  elm.Native.Basics = elm.Native.Basics || {};\n  if (elm.Native.Basics.values) return elm.Native.Basics.values;\n\n  var Utils = Elm.Native.Utils.make(elm);\n\n  function div(a, b) {\n      return (a/b)|0;\n  }\n  function rem(a, b) {\n      return a % b;\n  }\n  function mod(a, b) {\n        if (b === 0) {\n            throw new Error(\"Cannot perform mod 0. Division by zero error.\");\n        }\n        var r = a % b;\n        var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r+b) : -mod(-a,-b));\n\n        return m === b ? 0 : m;\n  }\n  function logBase(base, n) {\n      return Math.log(n) / Math.log(base);\n  }\n  function negate(n) {\n      return -n;\n  }\n  function abs(n) {\n      return n < 0 ? -n : n;\n  }\n\n  function min(a, b) {\n      return Utils.cmp(a,b) < 0 ? a : b;\n  }\n  function max(a, b) {\n      return Utils.cmp(a,b) > 0 ? a : b;\n  }\n  function clamp(lo, hi, n) {\n      return Utils.cmp(n,lo) < 0 ? lo : Utils.cmp(n,hi) > 0 ? hi : n;\n  }\n\n  function xor(a, b) {\n      return a !== b;\n  }\n  function not(b) {\n      return !b;\n  }\n  function isInfinite(n) {\n      return n === Infinity || n === -Infinity\n  }\n\n  function truncate(n) {\n      return n|0;\n  }\n\n  function degrees(d) {\n      return d * Math.PI / 180;\n  }\n  function turns(t) {\n      return 2 * Math.PI * t;\n  }\n  function fromPolar(point) {\n      var r = point._0;\n      var t = point._1;\n      return Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n  }\n  function toPolar(point) {\n      var x = point._0;\n      var y = point._1;\n      return Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y,x));\n  }\n\n  var basics = {\n      div: F2(div),\n      rem: F2(rem),\n      mod: F2(mod),\n\n      pi: Math.PI,\n      e: Math.E,\n      cos: Math.cos,\n      sin: Math.sin,\n      tan: Math.tan,\n      acos: Math.acos,\n      asin: Math.asin,\n      atan: Math.atan,\n      atan2: F2(Math.atan2),\n\n      degrees:  degrees,\n      turns:  turns,\n      fromPolar:  fromPolar,\n      toPolar:  toPolar,\n\n      sqrt: Math.sqrt,\n      logBase: F2(logBase),\n      negate: negate,\n      abs: abs,\n      min: F2(min),\n      max: F2(max),\n      clamp: F3(clamp),\n      compare: Utils.compare,\n\n      xor: F2(xor),\n      not: not,\n\n      truncate: truncate,\n      ceiling: Math.ceil,\n      floor: Math.floor,\n      round: Math.round,\n      toFloat: function(x) { return x; },\n      isNaN: isNaN,\n      isInfinite: isInfinite\n  };\n\n  return elm.Native.Basics.values = basics;\n};\n\nElm.Native.Char = {};\nElm.Native.Char.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Char = elm.Native.Char || {};\n    if (elm.Native.Char.values) return elm.Native.Char.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isBetween(lo,hi) { return function(chr) {\n\tvar c = chr.charCodeAt(0);\n\treturn lo <= c && c <= hi;\n    };\n                              }\n    var isDigit = isBetween('0'.charCodeAt(0),'9'.charCodeAt(0));\n    var chk1 = isBetween('a'.charCodeAt(0),'f'.charCodeAt(0));\n    var chk2 = isBetween('A'.charCodeAt(0),'F'.charCodeAt(0));\n\n    return elm.Native.Char.values = {\n        fromCode : function(c) { return String.fromCharCode(c); },\n        toCode   : function(c) { return c.toUpperCase().charCodeAt(0); },\n        toUpper  : function(c) { return Utils.chr(c.toUpperCase()); },\n        toLower  : function(c) { return Utils.chr(c.toLowerCase()); },\n        toLocaleUpper : function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n        toLocaleLower : function(c) { return Utils.chr(c.toLocaleLowerCase()); },\n        isLower    : isBetween('a'.charCodeAt(0),'z'.charCodeAt(0)),\n        isUpper    : isBetween('A'.charCodeAt(0),'Z'.charCodeAt(0)),\n        isDigit    : isDigit,\n        isOctDigit : isBetween('0'.charCodeAt(0),'7'.charCodeAt(0)),\n        isHexDigit : function(c) { return isDigit(c) || chk1(c) || chk2(c); }\n    };\n};\n\nElm.Native.Color = {};\nElm.Native.Color.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Color = elm.Native.Color || {};\n    if (elm.Native.Color.values) return elm.Native.Color.values;\n\n    function toCss(c) {\n        var format = '';\n        var colors = '';\n        if (c.ctor === 'RGBA') {\n            format = 'rgb';\n            colors = c._0 + ', ' + c._1 + ', ' + c._2;\n        } else {\n            format = 'hsl';\n            colors = (c._0 * 180 / Math.PI) + ', ' +\n                     (c._1 * 100) + '%, ' +\n                     (c._2 * 100) + '%';\n        }\n        if (c._3 === 1) {\n            return format + '(' + colors + ')';\n        } else {\n            return format + 'a(' + colors + ', ' + c._3 + ')';\n        }\n    }\n\n    return elm.Native.Color.values = {\n        toCss:toCss\n    };\n\n};\n\nElm.Native.Debug = {};\nElm.Native.Debug.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Debug = elm.Native.Debug || {};\n    if (elm.Native.Debug.values) return elm.Native.Debug.values;\n    if ('values' in Elm.Native.Debug)\n        return elm.Native.Debug.values = Elm.Native.Debug.values;\n\n    var toString = Elm.Native.Show.make(elm).toString;\n    var replace = Elm.Native.Utils.make(elm).replace;\n\n    function log(tag, value) {\n        var msg = tag + ': ' + toString(value);\n        var process = process || {};\n        if (process.stdout) {\n            process.stdout.write(msg);\n        } else {\n            console.log(msg);\n        }\n        return value;\n    }\n\n    function crash(message) {\n        throw new Error(message);\n    }\n\n    function tracePath(debugId, form) {\n        return replace([[\"debugTracePathId\",debugId]], form);\n    }\n\n    function WatchTracker() {\n        this.frames = [{}];\n        this.clear = function() {\n            this.watches = {};\n        };\n        this.pushFrame = function() {\n            var lastFrame = this.frames[this.frames.length - 1];\n            this.frames.push(lastFrame);\n        }\n        this.notify = function(tag, value) {\n            this.frames[this.frames.length - 1][tag] = value;\n        };\n    }\n    var watchTracker = new WatchTracker();\n\n    function watch(tag, value) {\n        watchTracker.notify(tag, value);\n        return value;\n    }\n\n    function watchSummary(tag, f, value) {\n        watchTracker.notify(tag, f(value));\n        return value;\n    }\n\n    Elm.Native.Debug.values = {\n        crash: crash,\n        tracePath: F2(tracePath),\n        log: F2(log),\n        watch: F2(watch),\n        watchSummary:F3(watchSummary),\n        watchTracker: watchTracker\n    };\n    return elm.Native.Debug.values = Elm.Native.Debug.values;\n};\n\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\n// definition\nElm.Native.Graphics.Element.make = function(localRuntime) {\n    'use strict';\n\n    // attempt to short-circuit\n    if ('values' in Elm.Native.Graphics.Element) {\n        return Elm.Native.Graphics.Element.values;\n    }\n\n    var Color = Elm.Native.Color.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function createNode(elementType) {\n        var node = document.createElement(elementType);\n        node.style.padding = \"0\";\n        node.style.margin = \"0\";\n        return node;\n    }\n\n    function setProps(elem, node) {\n        var props = elem.props;\n\n        var element = elem.element;\n        var width = props.width - (element.adjustWidth || 0);\n        var height = props.height - (element.adjustHeight || 0);\n        node.style.width  = (width |0) + 'px';\n        node.style.height = (height|0) + 'px';\n\n        if (props.opacity !== 1) {\n            node.style.opacity = props.opacity;\n        }\n\n        if (props.color.ctor === 'Just') {\n            node.style.backgroundColor = Color.toCss(props.color._0);\n        }\n\n        if (props.tag !== '') {\n            node.id = props.tag;\n        }\n\n        if (props.hover.ctor !== '_Tuple0') {\n            addHover(node, props.hover);\n        }\n\n        if (props.click.ctor !== '_Tuple0') {\n            addClick(node, props.click);\n        }\n\n        if (props.href !== '') {\n            var anchor = createNode('a');\n            anchor.href = props.href;\n            anchor.style.display = 'block';\n            anchor.style.pointerEvents = 'auto';\n            anchor.appendChild(node);\n            node = anchor;\n        }\n\n        return node;\n    }\n\n    function addClick(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_click_handler = handler;\n        function trigger(ev) {\n            e.elm_click_handler(Utils.Tuple0);\n            ev.stopPropagation();\n        }\n        e.elm_click_trigger = trigger;\n        e.addEventListener('click', trigger);\n    }\n\n    function removeClick(e, handler) {\n        if (e.elm_click_trigger) {\n            e.removeEventListener('click', e.elm_click_trigger);\n            e.elm_click_trigger = null;\n            e.elm_click_handler = null;\n        }\n    }\n\n    function addHover(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_hover_handler = handler;\n        e.elm_hover_count = 0;\n\n        function over(evt) {\n            if (e.elm_hover_count++ > 0) return;\n            e.elm_hover_handler(true);\n            evt.stopPropagation();\n        }\n        function out(evt) {\n            if (e.contains(evt.toElement || evt.relatedTarget)) return;\n            e.elm_hover_count = 0;\n            e.elm_hover_handler(false);\n            evt.stopPropagation();\n        }\n        e.elm_hover_over = over;\n        e.elm_hover_out = out;\n        e.addEventListener('mouseover', over);\n        e.addEventListener('mouseout', out);\n    }\n\n    function removeHover(e) {\n        e.elm_hover_handler = null;\n        if (e.elm_hover_over) {\n            e.removeEventListener('mouseover', e.elm_hover_over);\n            e.elm_hover_over = null;\n        }\n        if (e.elm_hover_out) {\n            e.removeEventListener('mouseout', e.elm_hover_out);\n            e.elm_hover_out = null;\n        }\n    }\n\n    function image(props, img) {\n        switch (img._0.ctor) {\n        case 'Plain':   return plainImage(img._3);\n        case 'Fitted':  return fittedImage(props.width, props.height, img._3);\n        case 'Cropped': return croppedImage(img,props.width,props.height,img._3);\n        case 'Tiled':   return tiledImage(img._3);\n        }\n    }\n\n    function plainImage(src) {\n        var img = createNode('img');\n        img.src = src;\n        img.name = src;\n        img.style.display = \"block\";\n        return img;\n    }\n\n    function tiledImage(src) {\n        var div = createNode('div');\n        div.style.backgroundImage = 'url(' + src + ')';\n        return div;\n    }\n\n    function fittedImage(w, h, src) {\n        var div = createNode('div');\n        div.style.background = 'url(' + src + ') no-repeat center';\n        div.style.webkitBackgroundSize = 'cover';\n        div.style.MozBackgroundSize = 'cover';\n        div.style.OBackgroundSize = 'cover';\n        div.style.backgroundSize = 'cover';\n        return div;\n    }\n\n    function croppedImage(elem, w, h, src) {\n        var pos = elem._0._0;\n        var e = createNode('div');\n        e.style.overflow = \"hidden\";\n\n        var img = createNode('img');\n        img.onload = function() {\n            var sw = w / elem._1, sh = h / elem._2;\n            img.style.width = ((this.width * sw)|0) + 'px';\n            img.style.height = ((this.height * sh)|0) + 'px';\n            img.style.marginLeft = ((- pos._0 * sw)|0) + 'px';\n            img.style.marginTop = ((- pos._1 * sh)|0) + 'px';\n        };\n        img.src = src;\n        img.name = src;\n        e.appendChild(img);\n        return e;\n    }\n\n    function goOut(node) {\n        node.style.position = 'absolute';\n        return node;\n    }\n    function goDown(node) {\n        return node;\n    }\n    function goRight(node) {\n        node.style.styleFloat = 'left';\n        node.style.cssFloat = 'left';\n        return node;\n    }\n\n    var directionTable = {\n        DUp    : goDown,\n        DDown  : goDown,\n        DLeft  : goRight,\n        DRight : goRight,\n        DIn    : goOut,\n        DOut   : goOut\n    };\n    function needsReversal(dir) {\n        return dir == 'DUp' || dir == 'DLeft' || dir == 'DIn';\n    }\n\n    function flow(dir,elist) {\n        var array = List.toArray(elist);\n        var container = createNode('div');\n        var goDir = directionTable[dir];\n        if (goDir == goOut) {\n            container.style.pointerEvents = 'none';\n        }\n        if (needsReversal(dir)) {\n            array.reverse();\n        }\n        var len = array.length;\n        for (var i = 0; i < len; ++i) {\n            container.appendChild(goDir(render(array[i])));\n        }\n        return container;\n    }\n\n    function toPos(pos) {\n        switch(pos.ctor) {\n        case \"Absolute\": return  pos._0 + \"px\";\n        case \"Relative\": return (pos._0 * 100) + \"%\";\n        }\n    }\n\n    // must clear right, left, top, bottom, and transform\n    // before calling this function\n    function setPos(pos,elem,e) {\n        var element = elem.element;\n        var props = elem.props;\n        var w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n        var h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n        e.style.position = 'absolute';\n        e.style.margin = 'auto';\n        var transform = '';\n        switch(pos.horizontal.ctor) {\n        case 'P': e.style.right = toPos(pos.x); e.style.removeProperty('left'); break;\n        case 'Z': transform = 'translateX(' + ((-w/2)|0) + 'px) ';\n        case 'N': e.style.left = toPos(pos.x); e.style.removeProperty('right'); break;\n        }\n        switch(pos.vertical.ctor) {\n        case 'N': e.style.bottom = toPos(pos.y); e.style.removeProperty('top'); break;\n        case 'Z': transform += 'translateY(' + ((-h/2)|0) + 'px)';\n        case 'P': e.style.top = toPos(pos.y); e.style.removeProperty('bottom'); break;\n        }\n        if (transform !== '') {\n            addTransform(e.style, transform);\n        }\n        return e;\n    }\n\n    function addTransform(style, transform) {\n        style.transform       = transform;\n        style.msTransform     = transform;\n        style.MozTransform    = transform;\n        style.webkitTransform = transform;\n        style.OTransform      = transform;\n    }\n\n    function container(pos,elem) {\n        var e = render(elem);\n        setPos(pos, elem, e);\n        var div = createNode('div');\n        div.style.position = 'relative';\n        div.style.overflow = 'hidden';\n        div.appendChild(e);\n        return div;\n    }\n\n    function rawHtml(elem) {\n        var html = elem.html;\n        var guid = elem.guid;\n        var align = elem.align;\n\n        var div = createNode('div');\n        div.innerHTML = html;\n        div.style.visibility = \"hidden\";\n        if (align) {\n            div.style.textAlign = align;\n        }\n        div.style.visibility = 'visible';\n        div.style.pointerEvents = 'auto';\n        return div;\n    }\n\n    function render(elem) {\n        return setProps(elem, makeElement(elem));\n    }\n    function makeElement(e) {\n        var elem = e.element;\n        switch(elem.ctor) {\n        case 'Image':     return image(e.props, elem);\n        case 'Flow':      return flow(elem._0.ctor, elem._1);\n        case 'Container': return container(elem._0, elem._1);\n        case 'Spacer':    return createNode('div');\n        case 'RawHtml':   return rawHtml(elem);\n        case 'Custom':    return elem.render(elem.model);\n        }\n    }\n\n    function updateAndReplace(node, curr, next) {\n        var newNode = update(node, curr, next);\n        if (newNode !== node) {\n            node.parentNode.replaceChild(newNode, node);\n        }\n        return newNode;\n    }\n\n    function update(node, curr, next) {\n        var rootNode = node;\n        if (node.tagName === 'A') {\n            node = node.firstChild;\n        }\n        if (curr.props.id === next.props.id) {\n            updateProps(node, curr, next);\n            return rootNode;\n        }\n        if (curr.element.ctor !== next.element.ctor) {\n            return render(next);\n        }\n        var nextE = next.element;\n        var currE = curr.element;\n        switch(nextE.ctor) {\n        case \"Spacer\":\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"RawHtml\":\n            // only markdown blocks have guids, so this must be a text block\n            if (nextE.guid === null) {\n                if(currE.html.valueOf() !== nextE.html.valueOf()) {\n                    node.innerHTML = nextE.html;\n                }\n                updateProps(node, curr, next);\n                return rootNode;\n            }\n            if (nextE.guid !== currE.guid) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Image\":\n            if (nextE._0.ctor === 'Plain') {\n                if (nextE._3 !== currE._3) {\n                    node.src = nextE._3;\n                }\n            } else if (!Utils.eq(nextE,currE) ||\n                       next.props.width !== curr.props.width ||\n                       next.props.height !== curr.props.height) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Flow\":\n            var arr = List.toArray(nextE._1);\n            for (var i = arr.length; i--; ) {\n                arr[i] = arr[i].element.ctor;\n            }\n            if (nextE._0.ctor !== currE._0.ctor) {\n                return render(next);\n            }\n            var nexts = List.toArray(nextE._1);\n            var kids = node.childNodes;\n            if (nexts.length !== kids.length) {\n                return render(next);\n            }\n            var currs = List.toArray(currE._1);\n            var dir = nextE._0.ctor;\n            var goDir = directionTable[dir];\n            var toReverse = needsReversal(dir);\n            var len = kids.length;\n            for (var i = len; i-- ;) {\n                var subNode = kids[toReverse ? len - i - 1 : i];\n                goDir(updateAndReplace(subNode, currs[i], nexts[i]));\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Container\":\n            var subNode = node.firstChild;\n            var newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n            setPos(nextE._0, nextE._1, newSubNode);\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Custom\":\n            if (currE.type === nextE.type) {\n                var updatedNode = nextE.update(node, currE.model, nextE.model);\n                updateProps(updatedNode, curr, next);\n                return updatedNode;\n            } else {\n                return render(next);\n            }\n        }\n    }\n\n    function updateProps(node, curr, next) {\n        var nextProps = next.props;\n        var currProps = curr.props;\n\n        var element = next.element;\n        var width = nextProps.width - (element.adjustWidth || 0);\n        var height = nextProps.height - (element.adjustHeight || 0);\n        if (width !== currProps.width) {\n            node.style.width = (width|0) + 'px';\n        }\n        if (height !== currProps.height) {\n            node.style.height = (height|0) + 'px';\n        }\n\n        if (nextProps.opacity !== currProps.opacity) {\n            node.style.opacity = nextProps.opacity;\n        }\n\n        var nextColor = nextProps.color.ctor === 'Just'\n            ? Color.toCss(nextProps.color._0)\n            : '';\n        if (node.style.backgroundColor !== nextColor) {\n            node.style.backgroundColor = nextColor;\n        }\n\n        if (nextProps.tag !== currProps.tag) {\n            node.id = nextProps.tag;\n        }\n\n        if (nextProps.href !== currProps.href) {\n            if (currProps.href === '') {\n                // add a surrounding href\n                var anchor = createNode('a');\n                anchor.href = nextProps.href;\n                anchor.style.display = 'block';\n                anchor.style.pointerEvents = 'auto';\n\n                node.parentNode.replaceChild(anchor, node);\n                anchor.appendChild(node);\n            } else if (nextProps.href === '') {\n                // remove the surrounding href\n                var anchor = node.parentNode;\n                anchor.parentNode.replaceChild(node, anchor);\n            } else {\n                // just update the link\n                node.parentNode.href = nextProps.href;\n            }\n        }\n\n        // update click and hover handlers\n        var removed = false;\n\n        // update hover handlers\n        if (currProps.hover.ctor === '_Tuple0') {\n            if (nextProps.hover.ctor !== '_Tuple0') {\n                addHover(node, nextProps.hover);\n            }\n        }\n        else {\n            if (nextProps.hover.ctor === '_Tuple0') {\n                removed = true;\n                removeHover(node);\n            }\n            else {\n                node.elm_hover_handler = nextProps.hover;\n            }\n        }\n\n        // update click handlers\n        if (currProps.click.ctor === '_Tuple0') {\n            if (nextProps.click.ctor !== '_Tuple0') {\n                addClick(node, nextProps.click);\n            }\n        }\n        else {\n            if (nextProps.click.ctor === '_Tuple0') {\n                removed = true;\n                removeClick(node);\n            } else {\n                node.elm_click_handler = nextProps.click;\n            }\n        }\n\n        // stop capturing clicks if\n        if (removed\n            && nextProps.hover.ctor === '_Tuple0'\n            && nextProps.click.ctor === '_Tuple0')\n        {\n            node.style.pointerEvents = 'none';\n        }\n    }\n\n\n    function htmlHeight(width, rawHtml) {\n        // create dummy node\n        var temp = document.createElement('div');\n        temp.innerHTML = rawHtml.html;\n        if (width > 0) {\n            temp.style.width = width + \"px\";\n        }\n        temp.style.visibility = \"hidden\";\n        temp.style.styleFloat = \"left\";\n        temp.style.cssFloat   = \"left\";\n\n        document.body.appendChild(temp);\n\n        // get dimensions\n        var style = window.getComputedStyle(temp, null);\n        var w = Math.ceil(style.getPropertyValue(\"width\").slice(0,-2) - 0);\n        var h = Math.ceil(style.getPropertyValue(\"height\").slice(0,-2) - 0);\n        document.body.removeChild(temp);\n        return Utils.Tuple2(w,h);\n    }\n\n\n    return Elm.Native.Graphics.Element.values = {\n        render: render,\n        update: update,\n        updateAndReplace: updateAndReplace,\n\n        createNode: createNode,\n        addTransform: addTransform,\n        htmlHeight: F2(htmlHeight),\n        guid: Utils.guid\n    };\n\n};\n\nElm.Native.Json = {};\nElm.Native.Json.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Json = localRuntime.Native.Json || {};\n    if (localRuntime.Native.Json.values) {\n        return localRuntime.Native.Json.values;\n    }\n\n    var ElmArray = Elm.Native.Array.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Maybe = Elm.Maybe.make(localRuntime);\n    var Result = Elm.Result.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function crash(expected, actual) {\n        throw new Error(\n            'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n        );\n    }\n\n\n    // PRIMITIVE VALUES\n\n    function decodeNull(successValue) {\n        return function(value) {\n            if (value === null) {\n                return successValue;\n            }\n            crash('null', value);\n        };\n    }\n\n\n    function decodeString(value) {\n        if (typeof value === 'string' || value instanceof String) {\n            return value;\n        }\n        crash('a String', value);\n    }\n\n\n    function decodeFloat(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        crash('a Float', value);\n    }\n\n\n    function decodeInt(value) {\n        if (typeof value === 'number' && (value|0) === value) {\n            return value;\n        }\n        crash('an Int', value);\n    }\n\n\n    function decodeBool(value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        crash('a Bool', value);\n    }\n\n\n    // ARRAY\n\n    function decodeArray(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var array = new Array(len);\n                for (var i = len; i-- ; ) {\n                    array[i] = decoder(value[i]);\n                }\n                return ElmArray.fromJSArray(array);\n            }\n            crash('an Array', value);\n        };\n    }\n\n\n    // LIST\n\n    function decodeList(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var list = List.Nil;\n                for (var i = len; i-- ; ) {\n                    list = List.Cons( decoder(value[i]), list );\n                }\n                return list;\n            }\n            crash('a List', value);\n        };\n    }\n\n\n    // MAYBE\n\n    function decodeMaybe(decoder) {\n        return function(value) {\n            try {\n                return Maybe.Just(decoder(value));\n            } catch(e) {\n                return Maybe.Nothing;\n            }\n        };\n    }\n\n\n    // FIELDS\n\n    function decodeField(field, decoder) {\n        return function(value) {\n            var subValue = value[field];\n            if (subValue !== undefined) {\n                return decoder(subValue);\n            }\n            crash(\"an object with field '\" + field + \"'\", value);\n        };\n    }\n\n\n    // OBJECTS\n\n    function decodeKeyValuePairs(decoder) {\n        return function(value) {\n            var isObject =\n                typeof value === 'object'\n                    && value !== null\n                    && !(value instanceof Array);\n\n            if (isObject) {\n                var keyValuePairs = List.Nil;\n                for (var key in value) {\n                    var elmValue = decoder(value[key]);\n                    var pair = Utils.Tuple2(key, elmValue);\n                    keyValuePairs = List.Cons(pair, keyValuePairs);\n                }\n                return keyValuePairs;\n            }\n\n            crash(\"an object\", value);\n        };\n    }\n\n    function decodeObject1(f, d1) {\n        return function(value) {\n            return f(d1(value));\n        };\n    }\n\n    function decodeObject2(f, d1, d2) {\n        return function(value) {\n            return A2( f, d1(value), d2(value) );\n        };\n    }\n\n    function decodeObject3(f, d1, d2, d3) {\n        return function(value) {\n            return A3( f, d1(value), d2(value), d3(value) );\n        };\n    }\n\n    function decodeObject4(f, d1, d2, d3, d4) {\n        return function(value) {\n            return A4( f, d1(value), d2(value), d3(value), d4(value) );\n        };\n    }\n\n    function decodeObject5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            return A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n        };\n    }\n\n    function decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            return A6( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value)\n            );\n        };\n    }\n\n    function decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            return A7( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value)\n            );\n        };\n    }\n\n    function decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            return A8( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value),\n                d8(value)\n            );\n        };\n    }\n\n\n    // TUPLES\n\n    function decodeTuple1(f, d1) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 1 ) {\n                crash('a Tuple of length 1', value);\n            }\n            return f( d1(value[0]) );\n        };\n    }\n\n    function decodeTuple2(f, d1, d2) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 2 ) {\n                crash('a Tuple of length 2', value);\n            }\n            return A2( f, d1(value[0]), d2(value[1]) );\n        };\n    }\n\n    function decodeTuple3(f, d1, d2, d3) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 3 ) {\n                crash('a Tuple of length 3', value);\n            }\n            return A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n        };\n    }\n\n\n    function decodeTuple4(f, d1, d2, d3, d4) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 4 ) {\n                crash('a Tuple of length 4', value);\n            }\n            return A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n        };\n    }\n\n\n    function decodeTuple5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 5 ) {\n                crash('a Tuple of length 5', value);\n            }\n            return A5( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4])\n            );\n        };\n    }\n\n\n    function decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 6 ) {\n                crash('a Tuple of length 6', value);\n            }\n            return A6( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5])\n            );\n        };\n    }\n\n    function decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 7 ) {\n                crash('a Tuple of length 7', value);\n            }\n            return A7( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6])\n            );\n        };\n    }\n\n\n    function decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 8 ) {\n                crash('a Tuple of length 8', value);\n            }\n            return A8( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6]),\n                d8(value[7])\n            );\n        };\n    }\n\n\n    // CUSTOM DECODERS\n\n    function decodeValue(value) {\n        return value;\n    }\n\n    function runDecoderValue(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function customDecoder(decoder, callback) {\n        return function(value) {\n            var result = callback(decoder(value));\n            if (result.ctor === 'Err') {\n                throw new Error('custom decoder failed: ' + result._0);\n            }\n            return result._0;\n        }\n    }\n\n    function andThen(decode, callback) {\n        return function(value) {\n            var result = decode(value);\n            return callback(result)(value);\n        }\n    }\n\n    function fail(msg) {\n        return function(value) {\n            throw new Error(msg);\n        }\n    }\n\n    function succeed(successValue) {\n        return function(value) {\n            return successValue;\n        }\n    }\n\n\n    // ONE OF MANY\n\n    function oneOf(decoders) {\n        return function(value) {\n            var errors = [];\n            var temp = decoders;\n            while (temp.ctor !== '[]') {\n                try {\n                    return temp._0(value);\n                } catch(e) {\n                    errors.push(e.message);\n                }\n                temp = temp._1;\n            }\n            throw new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n        }\n    }\n\n    function get(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n\n    // ENCODE / DECODE\n\n    function runDecoderString(decoder, string) {\n        try {\n            return Result.Ok(decoder(JSON.parse(string)));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function encode(indentLevel, value) {\n        return JSON.stringify(value, null, indentLevel);\n    }\n\n    function identity(value) {\n        return value;\n    }\n\n    function encodeObject(keyValuePairs) {\n        var obj = {};\n        while (keyValuePairs.ctor !== '[]') {\n            var pair = keyValuePairs._0;\n            obj[pair._0] = pair._1;\n            keyValuePairs = keyValuePairs._1;\n        }\n        return obj;\n    }\n\n    return localRuntime.Native.Json.values = {\n        encode: F2(encode),\n        runDecoderString: F2(runDecoderString),\n        runDecoderValue: F2(runDecoderValue),\n\n        get: F2(get),\n        oneOf: oneOf,\n\n        decodeNull: decodeNull,\n        decodeInt: decodeInt,\n        decodeFloat: decodeFloat,\n        decodeString: decodeString,\n        decodeBool: decodeBool,\n\n        decodeMaybe: decodeMaybe,\n\n        decodeList: decodeList,\n        decodeArray: decodeArray,\n\n        decodeField: F2(decodeField),\n\n        decodeObject1: F2(decodeObject1),\n        decodeObject2: F3(decodeObject2),\n        decodeObject3: F4(decodeObject3),\n        decodeObject4: F5(decodeObject4),\n        decodeObject5: F6(decodeObject5),\n        decodeObject6: F7(decodeObject6),\n        decodeObject7: F8(decodeObject7),\n        decodeObject8: F9(decodeObject8),\n        decodeKeyValuePairs: decodeKeyValuePairs,\n\n        decodeTuple1: F2(decodeTuple1),\n        decodeTuple2: F3(decodeTuple2),\n        decodeTuple3: F4(decodeTuple3),\n        decodeTuple4: F5(decodeTuple4),\n        decodeTuple5: F6(decodeTuple5),\n        decodeTuple6: F7(decodeTuple6),\n        decodeTuple7: F8(decodeTuple7),\n        decodeTuple8: F9(decodeTuple8),\n\n        andThen: F2(andThen),\n        decodeValue: decodeValue,\n        customDecoder: F2(customDecoder),\n        fail: fail,\n        succeed: succeed,\n\n        identity: identity,\n        encodeNull: null,\n        encodeArray: ElmArray.toJSArray,\n        encodeList: List.toArray,\n        encodeObject: encodeObject\n\n    };\n\n};\n\nElm.Native.List = {};\nElm.Native.List.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.List = elm.Native.List || {};\n    if (elm.Native.List.values) return elm.Native.List.values;\n    if ('values' in Elm.Native.List)\n        return elm.Native.List.values = Elm.Native.List.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var Nil = Utils.Nil;\n    var Cons = Utils.Cons;\n\n    function throwError(f) {\n        throw new Error(\"Function '\" + f + \"' expects a non-empty list!\");\n    }\n\n    function toArray(xs) {\n        var out = [];\n        while (xs.ctor !== '[]') {\n            out.push(xs._0);\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function fromArray(arr) {\n        var out = Nil;\n        for (var i = arr.length; i--; ) {\n            out = Cons(arr[i], out);\n        }\n        return out;\n    }\n\n    function range(lo,hi) {\n        var lst = Nil;\n        if (lo <= hi) {\n            do { lst = Cons(hi,lst) } while (hi-->lo);\n        }\n        return lst\n    }\n\n    function head(v) {\n        return v.ctor === '[]' ? throwError('head') : v._0;\n    }\n    function tail(v) {\n        return v.ctor === '[]' ? throwError('tail') : v._1;\n    }\n\n    function last(xs) {\n        if (xs.ctor === '[]') { throwError('last'); }\n        var out = xs._0;\n        while (xs.ctor !== '[]') {\n            out = xs._0;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function map(f, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            arr.push(f(xs._0));\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    // f defined similarly for both foldl and foldr (NB: different from Haskell)\n    // ie, foldl : (a -> b -> b) -> b -> [a] -> b\n    function foldl(f, b, xs) {\n        var acc = b;\n        while (xs.ctor !== '[]') {\n            acc = A2(f, xs._0, acc);\n            xs = xs._1;\n        }\n        return acc;\n    }\n\n    function foldr(f, b, xs) {\n        var arr = toArray(xs);\n        var acc = b;\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function foldl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('foldl1') : foldl(f, xs._0, xs._1);\n    }\n\n    function foldr1(f, xs) {\n        if (xs.ctor === '[]') { throwError('foldr1'); }\n        var arr = toArray(xs);\n        var acc = arr.pop();\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function scanl(f, b, xs) {\n        var arr = toArray(xs);\n        arr.unshift(b);\n        var len = arr.length;\n        for (var i = 1; i < len; ++i) {\n            arr[i] = A2(f, arr[i], arr[i-1]);\n        }\n        return fromArray(arr);\n    }\n\n    function scanl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('scanl1') : scanl(f, xs._0, xs._1);\n    }\n\n    function filter(pred, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) { arr.push(xs._0); }\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function length(xs) {\n        var out = 0;\n        while (xs.ctor !== '[]') {\n            out += 1;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function member(x, xs) {\n        while (xs.ctor !== '[]') {\n            if (Utils.eq(x,xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function reverse(xs) {\n        return fromArray(toArray(xs).reverse());\n    }\n\n    function append(xs, ys) {\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    function all(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (!pred(xs._0)) return false;\n            xs = xs._1;\n        }\n        return true;\n    }\n\n    function any(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function map2(f, xs, ys) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]') {\n            arr.push(A2(f, xs._0, ys._0));\n            xs = xs._1;\n            ys = ys._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map3(f, xs, ys, zs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]') {\n            arr.push(A3(f, xs._0, ys._0, zs._0));\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map4(f, ws, xs, ys, zs) {\n        var arr = [];\n        while (   ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map5(f, vs, ws, xs, ys, zs) {\n        var arr = [];\n        while (   vs.ctor !== '[]'\n               && ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n            vs = vs._1;\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function sort(xs) {\n        return fromArray(toArray(xs).sort(Utils.cmp));\n    }\n\n    function sortBy(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            return Utils.cmp(f(a), f(b));\n        }));\n    }\n\n    function sortWith(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            var ord = f(a)(b).ctor;\n            return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n        }));\n    }\n\n    function nth(xs, n) {\n        return toArray(xs)[n];\n    }\n\n    function take(n, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && n > 0) {\n            arr.push(xs._0);\n            xs = xs._1;\n            --n;\n        }\n        return fromArray(arr);\n    }\n\n    function drop(n, xs) {\n        while (xs.ctor !== '[]' && n > 0) {\n            xs = xs._1;\n            --n;\n        }\n        return xs;\n    }\n\n    function repeat(n, x) {\n        var arr = [];\n        var pattern = [x];\n        while (n > 0) {\n            if (n & 1) arr = arr.concat(pattern);\n            n >>= 1, pattern = pattern.concat(pattern);\n        }\n        return fromArray(arr);\n    }\n\n\n    Elm.Native.List.values = {\n        Nil:Nil,\n        Cons:Cons,\n        cons:F2(Cons),\n        toArray:toArray,\n        fromArray:fromArray,\n        range:range,\n        append: F2(append),\n\n        head:head,\n        tail:tail,\n        last:last,\n\n        map:F2(map),\n        foldl:F3(foldl),\n        foldr:F3(foldr),\n\n        foldl1:F2(foldl1),\n        foldr1:F2(foldr1),\n        scanl:F3(scanl),\n        scanl1:F2(scanl1),\n        filter:F2(filter),\n        length:length,\n        member:F2(member),\n        reverse:reverse,\n\n        all:F2(all),\n        any:F2(any),\n        map2:F3(map2),\n        map3:F4(map3),\n        map4:F5(map4),\n        map5:F6(map5),\n        sort:sort,\n        sortBy:F2(sortBy),\n        sortWith:F2(sortWith),\n        nth:F2(nth),\n        take:F2(take),\n        drop:F2(drop),\n        repeat:F2(repeat)\n    };\n    return elm.Native.List.values = Elm.Native.List.values;\n\n};\n\nElm.Native.Ports = {};\nElm.Native.Ports.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Ports = localRuntime.Native.Ports || {};\n    if (localRuntime.Native.Ports.values) {\n        return localRuntime.Native.Ports.values;\n    }\n\n    var Signal;\n\n    function incomingSignal(converter) {\n        converter.isSignal = true;\n        return converter;\n    }\n\n    function outgoingSignal(converter) {\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        return function(signal) {\n            var subscribers = []\n            function subscribe(handler) {\n                subscribers.push(handler);\n            }\n            function unsubscribe(handler) {\n                subscribers.pop(subscribers.indexOf(handler));\n            }\n            A2( Signal.map, function(value) {\n                var val = converter(value);\n                var len = subscribers.length;\n                for (var i = 0; i < len; ++i) {\n                    subscribers[i](val);\n                }\n            }, signal);\n            return { subscribe:subscribe, unsubscribe:unsubscribe };\n        }\n    }\n\n    function portIn(name, converter) {\n        var jsValue = localRuntime.ports.incoming[name];\n        if (jsValue === undefined) {\n            throw new Error(\"Initialization Error: port '\" + name +\n                            \"' was not given an input!\");\n        }\n        localRuntime.ports.uses[name] += 1;\n        try {\n            var elmValue = converter(jsValue);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n\n        // just return a static value if it is not a signal\n        if (!converter.isSignal) {\n            return elmValue;\n        }\n\n        // create a signal if necessary\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        var signal = Signal.constant(elmValue);\n        function send(jsValue) {\n            try {\n                var elmValue = converter(jsValue);\n            } catch(e) {\n                throw new Error(\"Error sending to port '\" + name + \"': \\n\" + e.message);\n            }\n            setTimeout(function() {\n                localRuntime.notify(signal.id, elmValue);\n            }, 0);\n        }\n        localRuntime.ports.outgoing[name] = { send:send };\n        return signal;\n    }\n\n    function portOut(name, converter, value) {\n        try {\n            localRuntime.ports.outgoing[name] = converter(value);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n        return value;\n    }\n\n    return localRuntime.Native.Ports.values = {\n        incomingSignal: incomingSignal,\n        outgoingSignal: outgoingSignal,\n        portOut: portOut,\n        portIn: portIn\n    };\n};\n\n\n\nif (!Elm.fullscreen) {\n\n    (function() {\n        'use strict';\n\n        var Display = { FULLSCREEN: 0, COMPONENT: 1, NONE: 2 };\n\n        Elm.fullscreen = function(module, ports) {\n            var container = document.createElement('div');\n            document.body.appendChild(container);\n            return init(Display.FULLSCREEN, container, module, ports || {});\n        };\n\n        Elm.embed = function(module, container, ports) {\n            var tag = container.tagName;\n            if (tag !== 'DIV') {\n                throw new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n            } else if (container.hasChildNodes()) {\n                throw new Error('Elm.node must be given an empty DIV. No children allowed!');\n            }\n            return init(Display.COMPONENT, container, module, ports || {});\n        };\n\n        Elm.worker = function(module, ports) {\n            return init(Display.NONE, {}, module, ports || {});\n        };\n\n        function init(display, container, module, ports, moduleToReplace) {\n            // defining state needed for an instance of the Elm RTS\n            var inputs = [];\n\n            /* OFFSET\n             * Elm's time traveling debugger lets you interrupt the smooth flow of time\n             * by pausing and continuing program execution. To ensure the user sees a\n             * program that moves smoothly through the pause/continue time gap,\n             * we need to adjsut the value of Date.now().\n             */\n            var timer = function() {\n                var inducedDelay = 0;\n\n                var now = function() {\n                    return Date.now() - inducedDelay;\n                };\n\n                var addDelay = function(d) {\n                    inducedDelay += d;\n                    return inducedDelay;\n                };\n\n                return {\n                    now : now,\n                    addDelay : addDelay\n                }\n            }();\n\n            var updateInProgress = false;\n            function notify(id, v) {\n                if (updateInProgress) {\n                    throw new Error(\n                        'The notify function has been called synchronously!\\n' +\n                        'This can lead to frames being dropped.\\n' +\n                        'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n');\n                }\n                updateInProgress = true;\n                var timestep = timer.now();\n                for (var i = inputs.length; i--; ) {\n                    inputs[i].recv(timestep, id, v);\n                }\n                updateInProgress = false;\n            }\n            function setTimeout(func, delay) {\n                window.setTimeout(func, delay);\n            }\n\n            var listeners = [];\n            function addListener(relevantInputs, domNode, eventName, func) {\n                domNode.addEventListener(eventName, func);\n                var listener = {\n                    relevantInputs: relevantInputs,\n                    domNode: domNode,\n                    eventName: eventName,\n                    func: func\n                };\n                listeners.push(listener);\n            }\n\n            var portUses = {}\n            for (var key in ports) {\n                portUses[key] = 0;\n            }\n            // create the actual RTS. Any impure modules will attach themselves to this\n            // object. This permits many Elm programs to be embedded per document.\n            var elm = {\n                notify: notify,\n                setTimeout: setTimeout,\n                node: container,\n                addListener: addListener,\n                inputs: inputs,\n                timer: timer,\n                ports: { incoming:ports, outgoing:{}, uses:portUses },\n\n                isFullscreen: function() { return display === Display.FULLSCREEN; },\n                isEmbed: function() { return display === Display.COMPONENT; },\n                isWorker: function() { return display === Display.NONE; }\n            };\n\n            function swap(newModule) {\n                removeListeners(listeners);\n                var div = document.createElement('div');\n                var newElm = init(display, div, newModule, ports, elm);\n                inputs = [];\n                // elm.swap = newElm.swap;\n                return newElm;\n            }\n\n            function dispose() {\n                removeListeners(listeners);\n                inputs = [];\n            }\n\n            var Module = {};\n            try {\n                Module = module.make(elm);\n                checkPorts(elm);\n            } catch(e) {\n                var code = document.createElement('code');\n\n                var lines = e.message.split('\\n');\n                code.appendChild(document.createTextNode(lines[0]));\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createElement('br'));\n                for (var i = 1; i < lines.length; ++i) {\n                    code.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i]));\n                    code.appendChild(document.createElement('br'));\n                }\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createTextNode(\"Open the developer console for more details.\"));\n\n                container.appendChild(code);\n                throw e;\n            }\n            inputs = filterDeadInputs(inputs);\n            filterListeners(inputs, listeners);\n            addReceivers(elm.ports.outgoing);\n            if (display !== Display.NONE) {\n                var graphicsNode = initGraphics(elm, Module);\n            }\n            if (typeof moduleToReplace !== 'undefined') {\n                hotSwap(moduleToReplace, elm);\n\n                // rerender scene if graphics are enabled.\n                if (typeof graphicsNode !== 'undefined') {\n                    graphicsNode.recv(0, true, 0);\n                }\n            }\n\n            return {\n                swap:swap,\n                ports:elm.ports.outgoing,\n                dispose:dispose\n            };\n        };\n\n        function checkPorts(elm) {\n            var portUses = elm.ports.uses;\n            for (var key in portUses) {\n                var uses = portUses[key]\n                if (uses === 0) {\n                    throw new Error(\n                        \"Initialization Error: provided port '\" + key +\n                        \"' to a module that does not take it as in input.\\n\" +\n                        \"Remove '\" + key + \"' from the module initialization code.\");\n                } else if (uses > 1) {\n                    throw new Error(\n                        \"Initialization Error: port '\" + key +\n                        \"' has been declared multiple times in the Elm code.\\n\" +\n                        \"Remove declarations until there is exactly one.\");\n                }\n            }\n        }\n\n\n        //// FILTER SIGNALS ////\n\n        // TODO: move this code into the signal module and create a function\n        // Signal.initializeGraph that actually instantiates everything.\n\n        function filterListeners(inputs, listeners) {\n            loop:\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                for (var j = inputs.length; j--; ) {\n                    if (listener.relevantInputs.indexOf(inputs[j].id) >= 0) {\n                        continue loop;\n                    }\n                }\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        function removeListeners(listeners) {\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        // add receivers for built-in ports if they are defined\n        function addReceivers(ports) {\n            if ('log' in ports) {\n                ports.log.subscribe(function(v) { console.log(v) });\n            }\n            if ('stdout' in ports) {\n                var process = process || {};\n                var handler = process.stdout\n                    ? function(v) { process.stdout.write(v); }\n                    : function(v) { console.log(v); };\n                ports.stdout.subscribe(handler);\n            }\n            if ('stderr' in ports) {\n                var process = process || {};\n                var handler = process.stderr\n                    ? function(v) { process.stderr.write(v); }\n                    : function(v) { console.log('Error:' + v); };\n                ports.stderr.subscribe(handler);\n            }\n            if ('title' in ports) {\n                if (typeof ports.title === 'string') {\n                    document.title = ports.title;\n                } else {\n                    ports.title.subscribe(function(v) { document.title = v; });\n                }\n            }\n            if ('redirect' in ports) {\n                ports.redirect.subscribe(function(v) {\n                    if (v.length > 0) window.location = v;\n                });\n            }\n            if ('favicon' in ports) {\n                if (typeof ports.favicon === 'string') {\n                    changeFavicon(ports.favicon);\n                } else {\n                    ports.favicon.subscribe(changeFavicon);\n                }\n            }\n            function changeFavicon(src) {\n                var link = document.createElement('link');\n                var oldLink = document.getElementById('elm-favicon');\n                link.id = 'elm-favicon';\n                link.rel = 'shortcut icon';\n                link.href = src;\n                if (oldLink) {\n                    document.head.removeChild(oldLink);\n                }\n                document.head.appendChild(link);\n            }\n        }\n\n\n        function filterDeadInputs(inputs) {\n            var temp = [];\n            for (var i = inputs.length; i--; ) {\n                if (isAlive(inputs[i])) temp.push(inputs[i]);\n            }\n            return temp;\n        }\n\n\n        function isAlive(input) {\n            if (!('defaultNumberOfKids' in input)) return true;\n            var len = input.kids.length;\n            if (len === 0) return false;\n            if (len > input.defaultNumberOfKids) return true;\n            var alive = false;\n            for (var i = len; i--; ) {\n                alive = alive || isAlive(input.kids[i]);\n            }\n            return alive;\n        }\n\n\n        ////  RENDERING  ////\n\n        function initGraphics(elm, Module) {\n            if (!('main' in Module)) {\n                throw new Error(\"'main' is missing! What do I display?!\");\n            }\n\n            var signalGraph = Module.main;\n\n            // make sure the signal graph is actually a signal & extract the visual model\n            var Signal = Elm.Signal.make(elm);\n            if (!('recv' in signalGraph)) {\n                signalGraph = Signal.constant(signalGraph);\n            }\n            var initialScene = signalGraph.value;\n\n            // Add the initialScene to the DOM\n            var Element = Elm.Native.Graphics.Element.make(elm);\n            elm.node.appendChild(Element.render(initialScene));\n\n            var _requestAnimationFrame =\n                typeof requestAnimationFrame !== 'undefined'\n                    ? requestAnimationFrame\n                    : function(cb) { setTimeout(cb, 1000/60); }\n                    ;\n\n            // domUpdate is called whenever the main Signal changes.\n            //\n            // domUpdate and drawCallback implement a small state machine in order\n            // to schedule only 1 draw per animation frame. This enforces that\n            // once draw has been called, it will not be called again until the\n            // next frame.\n            //\n            // drawCallback is scheduled whenever\n            // 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n            // 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n            //\n            // Invariants:\n            // 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n            // 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n            //    scheduled drawCallback.\n            var NO_REQUEST = 0;\n            var PENDING_REQUEST = 1;\n            var EXTRA_REQUEST = 2;\n            var state = NO_REQUEST;\n            var savedScene = initialScene;\n            var scheduledScene = initialScene;\n\n            function domUpdate(newScene) {\n                scheduledScene = newScene;\n\n                switch (state) {\n                    case NO_REQUEST:\n                        _requestAnimationFrame(drawCallback);\n                        state = PENDING_REQUEST;\n                        return;\n                    case PENDING_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                    case EXTRA_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                }\n            }\n\n            function drawCallback() {\n                switch (state) {\n                    case NO_REQUEST:\n                        // This state should not be possible. How can there be no\n                        // request, yet somehow we are actively fulfilling a\n                        // request?\n                        throw new Error(\n                            \"Unexpected draw callback.\\n\" +\n                            \"Please report this to <https://github.com/elm-lang/core/issues>.\"\n                        );\n\n                    case PENDING_REQUEST:\n                        // At this point, we do not *know* that another frame is\n                        // needed, but we make an extra request to rAF just in\n                        // case. It's possible to drop a frame if rAF is called\n                        // too late, so we just do it preemptively.\n                        _requestAnimationFrame(drawCallback);\n                        state = EXTRA_REQUEST;\n\n                        // There's also stuff we definitely need to draw.\n                        draw();\n                        return;\n\n                    case EXTRA_REQUEST:\n                        // Turns out the extra request was not needed, so we will\n                        // stop calling rAF. No reason to call it all the time if\n                        // no one needs it.\n                        state = NO_REQUEST;\n                        return;\n                }\n            }\n\n            function draw() {\n                Element.updateAndReplace(elm.node.firstChild, savedScene, scheduledScene);\n                if (elm.Native.Window) {\n                    elm.Native.Window.values.resizeIfNeeded();\n                }\n                savedScene = scheduledScene;\n            }\n\n            var renderer = A2(Signal.map, domUpdate, signalGraph);\n\n            // must check for resize after 'renderer' is created so\n            // that changes show up.\n            if (elm.Native.Window) {\n                elm.Native.Window.values.resizeIfNeeded();\n            }\n\n            return renderer;\n        }\n\n        //// HOT SWAPPING ////\n\n        // Returns boolean indicating if the swap was successful.\n        // Requires that the two signal graphs have exactly the same\n        // structure.\n        function hotSwap(from, to) {\n            function similar(nodeOld,nodeNew) {\n                var idOkay = nodeOld.id === nodeNew.id;\n                var lengthOkay = nodeOld.kids.length === nodeNew.kids.length;\n                return idOkay && lengthOkay;\n            }\n            function swap(nodeOld,nodeNew) {\n                nodeNew.value = nodeOld.value;\n                return true;\n            }\n            var canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n            if (canSwap) {\n                depthFirstTraversals(swap, from.inputs, to.inputs);\n            }\n            from.node.parentNode.replaceChild(to.node, from.node);\n\n            return canSwap;\n        }\n\n        // Returns false if the node operation f ever fails.\n        function depthFirstTraversals(f, queueOld, queueNew) {\n            if (queueOld.length !== queueNew.length) return false;\n            queueOld = queueOld.slice(0);\n            queueNew = queueNew.slice(0);\n\n            var seen = [];\n            while (queueOld.length > 0 && queueNew.length > 0) {\n                var nodeOld = queueOld.pop();\n                var nodeNew = queueNew.pop();\n                if (seen.indexOf(nodeOld.id) < 0) {\n                    if (!f(nodeOld, nodeNew)) return false;\n                    queueOld = queueOld.concat(nodeOld.kids);\n                    queueNew = queueNew.concat(nodeNew.kids);\n                    seen.push(nodeOld.id);\n                }\n            }\n            return true;\n        }\n    }());\n\n    function F2(fun) {\n        function wrapper(a) { return function(b) { return fun(a,b) } }\n        wrapper.arity = 2;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F3(fun) {\n        function wrapper(a) {\n            return function(b) { return function(c) { return fun(a,b,c) }}\n        }\n        wrapper.arity = 3;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F4(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return fun(a,b,c,d) }}}\n        }\n        wrapper.arity = 4;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F5(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return fun(a,b,c,d,e) }}}}\n        }\n        wrapper.arity = 5;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F6(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return fun(a,b,c,d,e,f) }}}}}\n        }\n        wrapper.arity = 6;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F7(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return fun(a,b,c,d,e,f,g) }}}}}}\n        }\n        wrapper.arity = 7;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F8(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) {\n            return fun(a,b,c,d,e,f,g,h)}}}}}}}\n        }\n        wrapper.arity = 8;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F9(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) { return function(i) {\n            return fun(a,b,c,d,e,f,g,h,i) }}}}}}}}\n        }\n        wrapper.arity = 9;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function A2(fun,a,b) {\n        return fun.arity === 2\n            ? fun.func(a,b)\n            : fun(a)(b);\n    }\n    function A3(fun,a,b,c) {\n        return fun.arity === 3\n            ? fun.func(a,b,c)\n            : fun(a)(b)(c);\n    }\n    function A4(fun,a,b,c,d) {\n        return fun.arity === 4\n            ? fun.func(a,b,c,d)\n            : fun(a)(b)(c)(d);\n    }\n    function A5(fun,a,b,c,d,e) {\n        return fun.arity === 5\n            ? fun.func(a,b,c,d,e)\n            : fun(a)(b)(c)(d)(e);\n    }\n    function A6(fun,a,b,c,d,e,f) {\n        return fun.arity === 6\n            ? fun.func(a,b,c,d,e,f)\n            : fun(a)(b)(c)(d)(e)(f);\n    }\n    function A7(fun,a,b,c,d,e,f,g) {\n        return fun.arity === 7\n            ? fun.func(a,b,c,d,e,f,g)\n            : fun(a)(b)(c)(d)(e)(f)(g);\n    }\n    function A8(fun,a,b,c,d,e,f,g,h) {\n        return fun.arity === 8\n            ? fun.func(a,b,c,d,e,f,g,h)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h);\n    }\n    function A9(fun,a,b,c,d,e,f,g,h,i) {\n        return fun.arity === 9\n            ? fun.func(a,b,c,d,e,f,g,h,i)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n    }\n}\nElm.Native.Show = {};\nElm.Native.Show.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Show = elm.Native.Show || {};\n    if (elm.Native.Show.values) return elm.Native.Show.values;\n\n    var _Array;\n    var Dict;\n    var List;\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var toString = function(v) {\n        var type = typeof v;\n        if (type === \"function\") {\n            var name = v.func ? v.func.name : v.name;\n            return '<function' + (name === '' ? '' : ': ') + name + '>';\n        }\n        else if (type === \"boolean\") {\n            return v ? \"True\" : \"False\";\n        }\n        else if (type === \"number\") {\n            return v + \"\";\n        }\n        else if ((v instanceof String) && v.isChar) {\n            return \"'\" + addSlashes(v) + \"'\";\n        }\n        else if (type === \"string\") {\n            return '\"' + addSlashes(v) + '\"';\n        }\n        else if (type === \"object\" && '_' in v && probablyPublic(v)) {\n            var output = [];\n            for (var k in v._) {\n                for (var i = v._[k].length; i--; ) {\n                    output.push(k + \" = \" + toString(v._[k][i]));\n                }\n            }\n            for (var k in v) {\n                if (k === '_') continue;\n                output.push(k + \" = \" + toString(v[k]));\n            }\n            if (output.length === 0) {\n                return \"{}\";\n            }\n            return \"{ \" + output.join(\", \") + \" }\";\n        }\n        else if (type === \"object\" && 'ctor' in v) {\n            if (v.ctor.substring(0,6) === \"_Tuple\") {\n                var output = [];\n                for (var k in v) {\n                    if (k === 'ctor') continue;\n                    output.push(toString(v[k]));\n                }\n                return \"(\" + output.join(\",\") + \")\";\n            }\n            else if (v.ctor === \"_Array\") {\n                if (!_Array) {\n                    _Array = Elm.Array.make(elm);\n                }\n                var list = _Array.toList(v);\n                return \"Array.fromList \" + toString(list);\n            }\n            else if (v.ctor === \"::\") {\n                var output = '[' + toString(v._0);\n                v = v._1;\n                while (v.ctor === \"::\") {\n                    output += \",\" + toString(v._0);\n                    v = v._1;\n                }\n                return output + ']';\n            }\n            else if (v.ctor === \"[]\") {\n                return \"[]\";\n            }\n            else if (v.ctor === \"RBNode\" || v.ctor === \"RBEmpty\") {\n                if (!Dict) {\n                    Dict = Elm.Dict.make(elm);\n                }\n                if (!List) {\n                    List = Elm.List.make(elm);\n                }\n                var list = Dict.toList(v);\n                var name = \"Dict\";\n                if (list.ctor === \"::\" && list._0._1.ctor === \"_Tuple0\") {\n                    name = \"Set\";\n                    list = A2(List.map, function(x){return x._0}, list);\n                }\n                return name + \".fromList \" + toString(list);\n            }\n            else {\n                var output = \"\";\n                for (var i in v) {\n                    if (i === 'ctor') continue;\n                    var str = toString(v[i]);\n                    var parenless = str[0] === '{' || str[0] === '<' || str.indexOf(' ') < 0;\n                    output += ' ' + (parenless ? str : '(' + str + ')');\n                }\n                return v.ctor + output;\n            }\n        }\n        if (type === 'object' && 'recv' in v) {\n            return '<signal>';\n        }\n        return \"<internal structure>\";\n    };\n\n    function addSlashes(str) {\n        return str.replace(/\\\\/g, '\\\\\\\\')\n                  .replace(/\\n/g, '\\\\n')\n                  .replace(/\\t/g, '\\\\t')\n                  .replace(/\\r/g, '\\\\r')\n                  .replace(/\\v/g, '\\\\v')\n                  .replace(/\\0/g, '\\\\0')\n                  .replace(/\\'/g, \"\\\\'\")\n                  .replace(/\\\"/g, '\\\\\"');\n    }\n\n    function probablyPublic(v) {\n        var keys = Object.keys(v);\n        var len = keys.length;\n        if (len === 3\n            && 'props' in v\n            && 'element' in v)\n        {\n            return false;\n        }\n        else if (len === 5\n            && 'horizontal' in v\n            && 'vertical' in v\n            && 'x' in v\n            && 'y' in v)\n        {\n            return false;\n        }\n        else if (len === 7\n            && 'theta' in v\n            && 'scale' in v\n            && 'x' in v\n            && 'y' in v\n            && 'alpha' in v\n            && 'form' in v)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    return elm.Native.Show.values = {\n        toString: toString\n    };\n};\n\n\nElm.Native.Signal = {};\nElm.Native.Signal.make = function(localRuntime) {\n\n  localRuntime.Native = localRuntime.Native || {};\n  localRuntime.Native.Signal = localRuntime.Native.Signal || {};\n  if (localRuntime.Native.Signal.values) {\n      return localRuntime.Native.Signal.values;\n  }\n\n  var Utils = Elm.Native.Utils.make(localRuntime);\n\n  function broadcastToKids(node, timestep, changed) {\n    var kids = node.kids;\n    for (var i = kids.length; i--; ) {\n      kids[i].recv(timestep, changed, node.id);\n    }\n  }\n\n  function Input(base) {\n    this.id = Utils.guid();\n    this.value = base;\n    this.kids = [];\n    this.defaultNumberOfKids = 0;\n    this.recv = function(timestep, eid, v) {\n      var changed = eid === this.id;\n      if (changed) {\n        this.value = v;\n      }\n      broadcastToKids(this, timestep, changed);\n      return changed;\n    };\n    localRuntime.inputs.push(this);\n  }\n\n  function LiftN(update, args) {\n    this.id = Utils.guid();\n    this.value = update();\n    this.kids = [];\n\n    var n = args.length;\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      ++count;\n      if (changed) { isChanged = true; }\n      if (count == n) {\n        if (isChanged) { this.value = update(); }\n        broadcastToKids(this, timestep, isChanged);\n        isChanged = false;\n        count = 0;\n      }\n    };\n    for (var i = n; i--; ) { args[i].kids.push(this); }\n  }\n\n  function map(func, a) {\n    function update() { return func(a.value); }\n    return new LiftN(update, [a]);\n  }\n  function map2(func, a, b) {\n    function update() { return A2( func, a.value, b.value ); }\n    return new LiftN(update, [a,b]);\n  }\n  function map3(func, a, b, c) {\n    function update() { return A3( func, a.value, b.value, c.value ); }\n    return new LiftN(update, [a,b,c]);\n  }\n  function map4(func, a, b, c, d) {\n    function update() { return A4( func, a.value, b.value, c.value, d.value ); }\n    return new LiftN(update, [a,b,c,d]);\n  }\n  function map5(func, a, b, c, d, e) {\n    function update() { return A5( func, a.value, b.value, c.value, d.value, e.value ); }\n    return new LiftN(update, [a,b,c,d,e]);\n  }\n\n  function Foldp(step, state, input) {\n    this.id = Utils.guid();\n    this.value = state;\n    this.kids = [];\n\n    this.recv = function(timestep, changed, parentID) {\n      if (changed) {\n          this.value = A2( step, input.value, this.value );\n      }\n      broadcastToKids(this, timestep, changed);\n    };\n    input.kids.push(this);\n  }\n\n  function foldp(step, state, input) {\n      return new Foldp(step, state, input);\n  }\n\n  function DropIf(pred,base,input) {\n    this.id = Utils.guid();\n    this.value = pred(input.value) ? base : input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !pred(input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function DropRepeats(input) {\n    this.id = Utils.guid();\n    this.value = input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !Utils.eq(this.value,input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function timestamp(a) {\n    function update() { return Utils.Tuple2(localRuntime.timer.now(), a.value); }\n    return new LiftN(update, [a]);\n  }\n\n  function SampleOn(s1,s2) {\n    this.id = Utils.guid();\n    this.value = s2.value;\n    this.kids = [];\n\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      if (parentID === s1.id) isChanged = changed;\n      ++count;\n      if (count == 2) {\n        if (isChanged) { this.value = s2.value; }\n        broadcastToKids(this, timestep, isChanged);\n        count = 0;\n        isChanged = false;\n      }\n    };\n    s1.kids.push(this);\n    s2.kids.push(this);\n  }\n\n  function sampleOn(s1,s2) { return new SampleOn(s1,s2); }\n\n  function delay(t,s) {\n      var delayed = new Input(s.value);\n      var firstEvent = true;\n      function update(v) {\n        if (firstEvent) {\n            firstEvent = false; return;\n        }\n        setTimeout(function() {\n            localRuntime.notify(delayed.id, v);\n        }, t);\n      }\n      function first(a,b) { return a; }\n      return new SampleOn(delayed, map2(F2(first), delayed, map(update,s)));\n  }\n\n  function Merge(s1,s2) {\n      this.id = Utils.guid();\n      this.value = s1.value;\n      this.kids = [];\n\n      var next = null;\n      var count = 0;\n      var isChanged = false;\n\n      this.recv = function(timestep, changed, parentID) {\n        ++count;\n        if (changed) {\n            isChanged = true;\n            if (parentID == s2.id && next === null) { next = s2.value; }\n            if (parentID == s1.id) { next = s1.value; }\n        }\n\n        if (count == 2) {\n            if (isChanged) { this.value = next; next = null; }\n            broadcastToKids(this, timestep, isChanged);\n            isChanged = false;\n            count = 0;\n        }\n      };\n      s1.kids.push(this);\n      s2.kids.push(this);\n  }\n\n  function merge(s1,s2) {\n      return new Merge(s1,s2);\n  }\n\n\n    // SIGNAL INPUTS\n\n    function input(initialValue) {\n        return new Input(initialValue);\n    }\n\n    function send(input, value) {\n        return function() {\n            localRuntime.notify(input.id, value);\n        };\n    }\n\n    function subscribe(input) {\n        return input;\n    }\n\n\n  return localRuntime.Native.Signal.values = {\n    constant : function(v) { return new Input(v); },\n    map  : F2(map ),\n    map2 : F3(map2),\n    map3 : F4(map3),\n    map4 : F5(map4),\n    map5 : F6(map5),\n    foldp : F3(foldp),\n    delay : F2(delay),\n    merge : F2(merge),\n    keepIf : F3(function(pred,base,sig) {\n      return new DropIf(function(x) {return !pred(x);},base,sig); }),\n    dropIf : F3(function(pred,base,sig) { return new DropIf(pred,base,sig); }),\n    dropRepeats : function(s) { return new DropRepeats(s);},\n    sampleOn : F2(sampleOn),\n    timestamp : timestamp,\n    input: input,\n    send: F2(send),\n    subscribe: subscribe\n  };\n};\n\nElm.Native.String = {};\nElm.Native.String.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.String = elm.Native.String || {};\n    if (elm.Native.String.values) return elm.Native.String.values;\n    if ('values' in Elm.Native.String) {\n        return elm.Native.String.values = Elm.Native.String.values;\n    }\n\n    var Char = Elm.Char.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Maybe = Elm.Maybe.make(elm);\n    var Result = Elm.Result.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isEmpty(str) {\n        return str.length === 0;\n    }\n    function cons(chr,str) {\n        return chr + str;\n    }\n    function uncons(str) {\n        var hd;\n        return (hd = str[0])\n            ? Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)))\n            : Maybe.Nothing;\n    }\n    function append(a,b) {\n        return a + b;\n    }\n    function concat(strs) {\n        return List.toArray(strs).join('');\n    }\n    function length(str) {\n        return str.length;\n    }\n    function map(f,str) {\n        var out = str.split('');\n        for (var i = out.length; i--; ) {\n            out[i] = f(Utils.chr(out[i]));\n        }\n        return out.join('');\n    }\n    function filter(pred,str) {\n        return str.split('').map(Utils.chr).filter(pred).join('');\n    }\n    function reverse(str) {\n        return str.split('').reverse().join('');\n    }\n    function foldl(f,b,str) {\n        var len = str.length;\n        for (var i = 0; i < len; ++i) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n    function foldr(f,b,str) {\n        for (var i = str.length; i--; ) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n\n    function split(sep, str) {\n        return List.fromArray(str.split(sep));\n    }\n    function join(sep, strs) {\n        return List.toArray(strs).join(sep);\n    }\n    function repeat(n, str) {\n        var result = '';\n        while (n > 0) {\n            if (n & 1) result += str;\n            n >>= 1, str += str;\n        }\n        return result;\n    }\n\n    function slice(start, end, str) {\n        return str.slice(start,end);\n    }\n    function left(n, str) {\n        return n < 1 ? \"\" : str.slice(0,n);\n    }\n    function right(n, str) {\n        return n < 1 ? \"\" : str.slice(-n);\n    }\n    function dropLeft(n, str) {\n        return n < 1 ? str : str.slice(n);\n    }\n    function dropRight(n, str) {\n        return n < 1 ? str : str.slice(0,-n);\n    }\n\n    function pad(n,chr,str) {\n        var half = (n - str.length) / 2;\n        return repeat(Math.ceil(half),chr) + str + repeat(half|0,chr);\n    }\n    function padRight(n,chr,str) {\n        return str + repeat(n - str.length, chr);\n    }\n    function padLeft(n,chr,str) {\n        return repeat(n - str.length, chr) + str;\n    }\n\n    function trim(str) {\n        return str.trim();\n    }\n    function trimLeft(str) {\n        return str.trimLeft();\n    }\n    function trimRight(str) {\n        return str.trimRight();\n    }\n\n    function words(str) {\n        return List.fromArray(str.trim().split(/\\s+/g));\n    }\n    function lines(str) {\n        return List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n    }\n\n    function toUpper(str) {\n        return str.toUpperCase();\n    }\n    function toLower(str) {\n        return str.toLowerCase();\n    }\n\n    function any(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (pred(Utils.chr(str[i]))) return true;\n        }\n        return false;\n    }\n    function all(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (!pred(Utils.chr(str[i]))) return false;\n        }\n        return true;\n    }\n\n    function contains(sub, str) {\n        return str.indexOf(sub) > -1;\n    }\n    function startsWith(sub, str) {\n        return str.indexOf(sub) === 0;\n    }\n    function endsWith(sub, str) {\n        return str.length >= sub.length &&\n               str.lastIndexOf(sub) === str.length - sub.length;\n    }\n    function indexes(sub, str) {\n        var subLen = sub.length;\n        var i = 0;\n        var is = [];\n        while ((i = str.indexOf(sub, i)) > -1) {\n            is.push(i);\n            i = i + subLen;\n        }\n        return List.fromArray(is);\n    }\n\n    function toInt(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n            start = 1;\n        }\n        for (var i = start; i < len; ++i) {\n            if (!Char.isDigit(s[i])) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n        }\n        return Result.Ok(parseInt(s, 10));\n    }\n\n    function toFloat(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n            }\n            start = 1;\n        }\n        var dotCount = 0;\n        for (var i = start; i < len; ++i) {\n            if (Char.isDigit(s[i])) {\n                continue;\n            }\n            if (s[i] === '.') {\n                dotCount += 1;\n                if (dotCount <= 1) {\n                    continue;\n                }\n            }\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        return Result.Ok(parseFloat(s));\n    }\n\n    function toList(str) {\n        return List.fromArray(str.split('').map(Utils.chr));\n    }\n    function fromList(chars) {\n        return List.toArray(chars).join('');\n    }\n\n    return Elm.Native.String.values = {\n        isEmpty: isEmpty,\n        cons: F2(cons),\n        uncons: uncons,\n        append: F2(append),\n        concat: concat,\n        length: length,\n        map: F2(map),\n        filter: F2(filter),\n        reverse: reverse,\n        foldl: F3(foldl),\n        foldr: F3(foldr),\n\n        split: F2(split),\n        join: F2(join),\n        repeat: F2(repeat),\n\n        slice: F3(slice),\n        left: F2(left),\n        right: F2(right),\n        dropLeft: F2(dropLeft),\n        dropRight: F2(dropRight),\n\n        pad: F3(pad),\n        padLeft: F3(padLeft),\n        padRight: F3(padRight),\n\n        trim: trim,\n        trimLeft: trimLeft,\n        trimRight: trimRight,\n\n        words: words,\n        lines: lines,\n\n        toUpper: toUpper,\n        toLower: toLower,\n\n        any: F2(any),\n        all: F2(all),\n\n        contains: F2(contains),\n        startsWith: F2(startsWith),\n        endsWith: F2(endsWith),\n        indexes: F2(indexes),\n\n        toInt: toInt,\n        toFloat: toFloat,\n        toList: toList,\n        fromList: fromList\n    };\n};\n\nElm.Native = Elm.Native || {};\nElm.Native.Utils = {};\nElm.Native.Utils.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Utils = localRuntime.Native.Utils || {};\n    if (localRuntime.Native.Utils.values) {\n        return localRuntime.Native.Utils.values;\n    }\n\n    function eq(l,r) {\n        var stack = [{'x': l, 'y': r}]\n        while (stack.length > 0) {\n            var front = stack.pop();\n            var x = front.x;\n            var y = front.y;\n            if (x === y) continue;\n            if (typeof x === \"object\") {\n                var c = 0;\n                for (var i in x) {\n                    ++c;\n                    if (i in y) {\n                        if (i !== 'ctor') {\n                            stack.push({ 'x': x[i], 'y': y[i] });\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n                if ('ctor' in x) {\n                    stack.push({'x': x.ctor, 'y': y.ctor});\n                }\n                if (c !== Object.keys(y).length) {\n                    return false;\n                };\n            } else if (typeof x === 'function') {\n                throw new Error('Equality error: general function equality is ' +\n                                'undecidable, and therefore, unsupported');\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // code in Generate/JavaScript.hs depends on the particular\n    // integer values assigned to LT, EQ, and GT\n    var LT = -1, EQ = 0, GT = 1, ord = ['LT','EQ','GT'];\n    function compare(x,y) { return { ctor: ord[cmp(x,y)+1] } }\n    function cmp(x,y) {\n        var ord;\n        if (typeof x !== 'object'){\n            return x === y ? EQ : x < y ? LT : GT;\n        }\n        else if (x.isChar){\n            var a = x.toString();\n            var b = y.toString();\n            return a === b ? EQ : a < b ? LT : GT;\n        }\n        else if (x.ctor === \"::\" || x.ctor === \"[]\") {\n            while (true) {\n                if (x.ctor === \"[]\" && y.ctor === \"[]\") return EQ;\n                if (x.ctor !== y.ctor) return x.ctor === '[]' ? LT : GT;\n                ord = cmp(x._0, y._0);\n                if (ord !== EQ) return ord;\n                x = x._1;\n                y = y._1;\n            }\n        }\n        else if (x.ctor.slice(0,6) === '_Tuple') {\n            var n = x.ctor.slice(6) - 0;\n            var err = 'cannot compare tuples with more than 6 elements.';\n            if (n === 0) return EQ;\n            if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n            if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n            if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n            if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n            if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n            if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n            if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n            return EQ;\n        }\n        else {\n            throw new Error('Comparison error: comparison is only defined on ints, ' +\n                            'floats, times, chars, strings, lists of comparable values, ' +\n                            'and tuples of comparable values.');\n        }\n    }\n\n\n    var Tuple0 = { ctor: \"_Tuple0\" };\n    function Tuple2(x,y) {\n        return {\n            ctor: \"_Tuple2\",\n            _0: x,\n            _1: y\n        };\n    }\n\n    function chr(c) {\n        var x = new String(c);\n        x.isChar = true;\n        return x;\n    }\n\n    function txt(str) {\n        var t = new String(str);\n        t.text = true;\n        return t;\n    }\n\n    function makeText(text) {\n        var style = '';\n        var href = '';\n        while (true) {\n            if (text.style) {\n                style += text.style;\n                text = text.text;\n                continue;\n            }\n            if (text.href) {\n                href = text.href;\n                text = text.text;\n                continue;\n            }\n            if (href) {\n                text = '<a href=\"' + href + '\">' + text + '</a>';\n            }\n            if (style) {\n                text = '<span style=\"' + style + '\">' + text + '</span>';\n            }\n            return text;\n        }\n    }\n\n    var count = 0;\n    function guid(_) {\n        return count++\n    }\n\n    function copy(oldRecord) {\n        var newRecord = {};\n        for (var key in oldRecord) {\n            var value = key === '_'\n                ? copy(oldRecord._)\n                : oldRecord[key]\n                ;\n            newRecord[key] = value;\n        }\n        return newRecord;\n    }\n\n    function remove(key, oldRecord) {\n        var record = copy(oldRecord);\n        if (key in record._) {\n            record[key] = record._[key][0];\n            record._[key] = record._[key].slice(1);\n            if (record._[key].length === 0) {\n                delete record._[key];\n            }\n        } else {\n            delete record[key];\n        }\n        return record;\n    }\n\n    function replace(keyValuePairs, oldRecord) {\n        var record = copy(oldRecord);\n        for (var i = keyValuePairs.length; i--; ) {\n            var pair = keyValuePairs[i];\n            record[pair[0]] = pair[1];\n        }\n        return record;\n    }\n\n    function insert(key, value, oldRecord) {\n        var newRecord = copy(oldRecord);\n        if (key in newRecord) {\n            var values = newRecord._[key];\n            var copiedValues = values ? values.slice(0) : [];\n            newRecord._[key] = [newRecord[key]].concat(copiedValues);\n        }\n        newRecord[key] = value;\n        return newRecord;\n    }\n\n    function getXY(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n\n        if (localRuntime.isEmbed()) {\n            var rect = localRuntime.node.getBoundingClientRect();\n            var relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n            var rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n            // TODO: figure out if there is a way to avoid rounding here\n            posx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n            posy = posy - Math.round(rely) - localRuntime.node.clientTop;\n        }\n        return Tuple2(posx, posy);\n    }\n\n\n    //// LIST STUFF ////\n\n    var Nil = { ctor:'[]' };\n\n    function Cons(hd,tl) {\n        return {\n            ctor: \"::\",\n            _0: hd,\n            _1: tl\n        };\n    }\n\n    function append(xs,ys) {\n        // append Text\n        if (xs.text || ys.text) {\n            return txt(makeText(xs) + makeText(ys));\n        }\n\n        // append Strings\n        if (typeof xs === \"string\") {\n            return xs + ys;\n        }\n\n        // append Lists\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    //// RUNTIME ERRORS ////\n\n    function indent(lines) {\n        return '\\n' + lines.join('\\n');\n    }\n\n    function badCase(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in case-expression.',\n            'Make sure your patterns cover every case!'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n    function badIf(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in multi-way-if expression.',\n            'It is best to use \\'otherwise\\' as the last branch of multi-way-if.'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n\n    function badPort(expected, received) {\n        var msg = indent([\n            'Expecting ' + expected + ' but was given ',\n            JSON.stringify(received)\n        ]);\n        throw new Error('Runtime error when sending values through a port.' + msg);\n    }\n\n\n    return localRuntime.Native.Utils.values = {\n        eq:eq,\n        cmp:cmp,\n        compare:F2(compare),\n        Tuple0:Tuple0,\n        Tuple2:Tuple2,\n        chr:chr,\n        txt:txt,\n        makeText:makeText,\n        copy: copy,\n        remove: remove,\n        replace: replace,\n        insert: insert,\n        guid: guid,\n        getXY: getXY,\n\n        Nil: Nil,\n        Cons: Cons,\n        append: F2(append),\n\n        badCase: badCase,\n        badIf: badIf,\n        badPort: badPort\n    };\n};\n\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = createHash\n\nfunction createHash(elem) {\n    var attributes = elem.attributes\n    var hash = {}\n\n    if (attributes === null || attributes === undefined) {\n        return hash\n    }\n\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i]\n\n        if (attr.name.substr(0,5) !== \"data-\") {\n            continue\n        }\n\n        hash[attr.name.substr(5)] = attr.value\n    }\n\n    return hash\n}\n\n},{}],2:[function(require,module,exports){\nvar createStore = require(\"weakmap-shim/create-store\")\nvar Individual = require(\"individual\")\n\nvar createHash = require(\"./create-hash.js\")\n\nvar hashStore = Individual(\"__DATA_SET_WEAKMAP@3\", createStore())\n\nmodule.exports = DataSet\n\nfunction DataSet(elem) {\n    var store = hashStore(elem)\n\n    if (!store.hash) {\n        store.hash = createHash(elem)\n    }\n\n    return store.hash\n}\n\n},{\"./create-hash.js\":1,\"individual\":3,\"weakmap-shim/create-store\":4}],3:[function(require,module,exports){\n(function (global){\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual\n\nfunction Individual(key, value) {\n    if (root[key]) {\n        return root[key]\n    }\n\n    Object.defineProperty(root, key, {\n        value: value\n        , configurable: true\n    })\n\n    return value\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\nvar hiddenStore = require('./hidden-store.js');\n\nmodule.exports = createStore;\n\nfunction createStore() {\n    var key = {};\n\n    return function (obj) {\n        if (typeof obj !== 'object' || obj === null) {\n            throw new Error('Weakmap-shim: Key must be object')\n        }\n\n        var store = obj.valueOf(key);\n        return store && store.identity === key ?\n            store : hiddenStore(obj, key);\n    };\n}\n\n},{\"./hidden-store.js\":5}],5:[function(require,module,exports){\nmodule.exports = hiddenStore;\n\nfunction hiddenStore(obj, key) {\n    var store = { identity: key };\n    var valueOf = obj.valueOf;\n\n    Object.defineProperty(obj, \"valueOf\", {\n        value: function (value) {\n            return value !== key ?\n                valueOf.apply(this, arguments) : store;\n        },\n        writable: true\n    });\n\n    return store;\n}\n\n},{}],6:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = addEvent\n\nfunction addEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        ds[type] = handler\n    } else if (Array.isArray(events)) {\n        if (events.indexOf(handler) === -1) {\n            events.push(handler)\n        }\n    } else if (events !== handler) {\n        ds[type] = [events, handler]\n    }\n}\n\n},{\"data-set\":2}],7:[function(require,module,exports){\nvar globalDocument = require(\"global/document\")\nvar DataSet = require(\"data-set\")\nvar createStore = require(\"weakmap-shim/create-store\")\n\nvar addEvent = require(\"./add-event.js\")\nvar removeEvent = require(\"./remove-event.js\")\nvar ProxyEvent = require(\"./proxy-event.js\")\n\nvar HANDLER_STORE = createStore()\n\nmodule.exports = DOMDelegator\n\nfunction DOMDelegator(document) {\n    document = document || globalDocument\n\n    this.target = document.documentElement\n    this.events = {}\n    this.rawEventListeners = {}\n    this.globalListeners = {}\n}\n\nDOMDelegator.prototype.addEventListener = addEvent\nDOMDelegator.prototype.removeEventListener = removeEvent\n\nDOMDelegator.prototype.allocateHandle =\n    function allocateHandle(func) {\n        var handle = new Handle()\n\n        HANDLER_STORE(handle).func = func;\n\n        return handle\n    }\n\nDOMDelegator.prototype.transformHandle =\n    function transformHandle(handle, lambda) {\n        var func = HANDLER_STORE(handle).func\n\n        return this.allocateHandle(function (ev) {\n            var result = lambda(ev)\n            if (result) {\n                func(result)\n            }\n        })\n    }\n\nDOMDelegator.prototype.addGlobalEventListener =\n    function addGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n        if (listeners.indexOf(fn) === -1) {\n            listeners.push(fn)\n        }\n\n        this.globalListeners[eventName] = listeners;\n    }\n\nDOMDelegator.prototype.removeGlobalEventListener =\n    function removeGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n\n        var index = listeners.indexOf(fn)\n        if (index !== -1) {\n            listeners.splice(index, 1)\n        }\n    }\n\nDOMDelegator.prototype.listenTo = function listenTo(eventName) {\n    if (this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = true\n\n    var listener = this.rawEventListeners[eventName]\n    if (!listener) {\n        listener = this.rawEventListeners[eventName] =\n            createHandler(eventName, this)\n    }\n\n    this.target.addEventListener(eventName, listener, true)\n}\n\nDOMDelegator.prototype.unlistenTo = function unlistenTo(eventName) {\n    if (!this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = false\n    var listener = this.rawEventListeners[eventName]\n\n    if (!listener) {\n        throw new Error(\"dom-delegator#unlistenTo: cannot \" +\n            \"unlisten to \" + eventName)\n    }\n\n    this.target.removeEventListener(eventName, listener, true)\n}\n\nfunction createHandler(eventName, delegator) {\n    var globalListeners = delegator.globalListeners;\n    var delegatorTarget = delegator.target;\n\n    return handler\n\n    function handler(ev) {\n        var globalHandlers = globalListeners[eventName] || []\n\n        if (globalHandlers.length > 0) {\n            var globalEvent = new ProxyEvent(ev);\n            globalEvent.currentTarget = delegatorTarget;\n            callListeners(globalHandlers, globalEvent)\n        }\n\n        findAndInvokeListeners(ev.target, ev, eventName)\n    }\n}\n\nfunction findAndInvokeListeners(elem, ev, eventName) {\n    var listener = getListener(elem, eventName)\n\n    if (listener && listener.handlers.length > 0) {\n        var listenerEvent = new ProxyEvent(ev);\n        listenerEvent.currentTarget = listener.currentTarget\n        callListeners(listener.handlers, listenerEvent)\n\n        if (listenerEvent._bubbles) {\n            var nextTarget = listener.currentTarget.parentNode\n            findAndInvokeListeners(nextTarget, ev, eventName)\n        }\n    }\n}\n\nfunction getListener(target, type) {\n    // terminate recursion if parent is `null`\n    if (target === null) {\n        return null\n    }\n\n    var ds = DataSet(target)\n    // fetch list of handler fns for this event\n    var handler = ds[type]\n    var allHandler = ds.event\n\n    if (!handler && !allHandler) {\n        return getListener(target.parentNode, type)\n    }\n\n    var handlers = [].concat(handler || [], allHandler || [])\n    return new Listener(target, handlers)\n}\n\nfunction callListeners(handlers, ev) {\n    handlers.forEach(function (handler) {\n        if (typeof handler === \"function\") {\n            handler(ev)\n        } else if (typeof handler.handleEvent === \"function\") {\n            handler.handleEvent(ev)\n        } else if (handler.type === \"dom-delegator-handle\") {\n            HANDLER_STORE(handler).func(ev)\n        } else {\n            throw new Error(\"dom-delegator: unknown handler \" +\n                \"found: \" + JSON.stringify(handlers));\n        }\n    })\n}\n\nfunction Listener(target, handlers) {\n    this.currentTarget = target\n    this.handlers = handlers\n}\n\nfunction Handle() {\n    this.type = \"dom-delegator-handle\"\n}\n\n},{\"./add-event.js\":6,\"./proxy-event.js\":15,\"./remove-event.js\":16,\"data-set\":2,\"global/document\":10,\"weakmap-shim/create-store\":13}],8:[function(require,module,exports){\nvar Individual = require(\"individual\")\nvar cuid = require(\"cuid\")\nvar globalDocument = require(\"global/document\")\n\nvar DOMDelegator = require(\"./dom-delegator.js\")\n\nvar delegatorCache = Individual(\"__DOM_DELEGATOR_CACHE@9\", {\n    delegators: {}\n})\nvar commonEvents = [\n    \"blur\", \"change\", \"click\",  \"contextmenu\", \"dblclick\",\n    \"error\",\"focus\", \"focusin\", \"focusout\", \"input\", \"keydown\",\n    \"keypress\", \"keyup\", \"load\", \"mousedown\", \"mouseup\",\n    \"resize\", \"scroll\", \"select\", \"submit\", \"touchcancel\",\n    \"touchend\", \"touchstart\", \"unload\"\n]\n\n/*  Delegator is a thin wrapper around a singleton `DOMDelegator`\n        instance.\n\n    Only one DOMDelegator should exist because we do not want\n        duplicate event listeners bound to the DOM.\n\n    `Delegator` will also `listenTo()` all events unless\n        every caller opts out of it\n*/\nmodule.exports = Delegator\n\nfunction Delegator(opts) {\n    opts = opts || {}\n    var document = opts.document || globalDocument\n\n    var cacheKey = document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"]\n\n    if (!cacheKey) {\n        cacheKey =\n            document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"] = cuid()\n    }\n\n    var delegator = delegatorCache.delegators[cacheKey]\n\n    if (!delegator) {\n        delegator = delegatorCache.delegators[cacheKey] =\n            new DOMDelegator(document)\n    }\n\n    if (opts.defaultEvents !== false) {\n        for (var i = 0; i < commonEvents.length; i++) {\n            delegator.listenTo(commonEvents[i])\n        }\n    }\n\n    return delegator\n}\n\n\n\n},{\"./dom-delegator.js\":7,\"cuid\":9,\"global/document\":10,\"individual\":11}],9:[function(require,module,exports){\n/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\n/*global window, navigator, document, require, process, module */\n(function (app) {\n  'use strict';\n  var namespace = 'cuid',\n    c = 0,\n    blockSize = 4,\n    base = 36,\n    discreteValues = Math.pow(base, blockSize),\n\n    pad = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length-size);\n    },\n\n    randomBlock = function randomBlock() {\n      return pad((Math.random() *\n            discreteValues << 0)\n            .toString(base), blockSize);\n    },\n\n    safeCounter = function () {\n      c = (c < discreteValues) ? c : 0;\n      c++; // this is not subliminal\n      return c - 1;\n    },\n\n    api = function cuid() {\n      // Starting with a lowercase letter makes\n      // it HTML element ID friendly.\n      var letter = 'c', // hard-coded allows for sequential access\n\n        // timestamp\n        // warning: this exposes the exact date and time\n        // that the uid was created.\n        timestamp = (new Date().getTime()).toString(base),\n\n        // Prevent same-machine collisions.\n        counter,\n\n        // A few chars to generate distinct ids for different\n        // clients (so different computers are far less\n        // likely to generate the same id)\n        fingerprint = api.fingerprint(),\n\n        // Grab some more chars from Math.random()\n        random = randomBlock() + randomBlock();\n\n        counter = pad(safeCounter().toString(base), blockSize);\n\n      return  (letter + timestamp + counter + fingerprint + random);\n    };\n\n  api.slug = function slug() {\n    var date = new Date().getTime().toString(36),\n      counter,\n      print = api.fingerprint().slice(0,1) +\n        api.fingerprint().slice(-1),\n      random = randomBlock().slice(-2);\n\n      counter = safeCounter().toString(36).slice(-4);\n\n    return date.slice(-2) +\n      counter + print + random;\n  };\n\n  api.globalCount = function globalCount() {\n    // We want to cache the results of this\n    var cache = (function calc() {\n        var i,\n          count = 0;\n\n        for (i in window) {\n          count++;\n        }\n\n        return count;\n      }());\n\n    api.globalCount = function () { return cache; };\n    return cache;\n  };\n\n  api.fingerprint = function browserPrint() {\n    return pad((navigator.mimeTypes.length +\n      navigator.userAgent.length).toString(36) +\n      api.globalCount().toString(36), 4);\n  };\n\n  // don't change anything from here down.\n  if (app.register) {\n    app.register(namespace, api);\n  } else if (typeof module !== 'undefined') {\n    module.exports = api;\n  } else {\n    app[namespace] = api;\n  }\n\n}(this.applitude || this));\n\n},{}],10:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":40}],11:[function(require,module,exports){\nmodule.exports=require(3)\n},{}],12:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],13:[function(require,module,exports){\nmodule.exports=require(4)\n},{\"./hidden-store.js\":14}],14:[function(require,module,exports){\nmodule.exports=require(5)\n},{}],15:[function(require,module,exports){\nvar inherits = require(\"inherits\")\n\nvar ALL_PROPS = [\n    \"altKey\", \"bubbles\", \"cancelable\", \"ctrlKey\",\n    \"eventPhase\", \"metaKey\", \"relatedTarget\", \"shiftKey\",\n    \"target\", \"timeStamp\", \"type\", \"view\", \"which\"\n]\nvar KEY_PROPS = [\"char\", \"charCode\", \"key\", \"keyCode\"]\nvar MOUSE_PROPS = [\n    \"button\", \"buttons\", \"clientX\", \"clientY\", \"layerX\",\n    \"layerY\", \"offsetX\", \"offsetY\", \"pageX\", \"pageY\",\n    \"screenX\", \"screenY\", \"toElement\"\n]\n\nvar rkeyEvent = /^key|input/\nvar rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/\n\nmodule.exports = ProxyEvent\n\nfunction ProxyEvent(ev) {\n    if (!(this instanceof ProxyEvent)) {\n        return new ProxyEvent(ev)\n    }\n\n    if (rkeyEvent.test(ev.type)) {\n        return new KeyEvent(ev)\n    } else if (rmouseEvent.test(ev.type)) {\n        return new MouseEvent(ev)\n    }\n\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    this._rawEvent = ev\n    this._bubbles = false;\n}\n\nProxyEvent.prototype.preventDefault = function () {\n    this._rawEvent.preventDefault()\n}\n\nProxyEvent.prototype.startPropagation = function () {\n    this._bubbles = true;\n}\n\nfunction MouseEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < MOUSE_PROPS.length; j++) {\n        var mousePropKey = MOUSE_PROPS[j]\n        this[mousePropKey] = ev[mousePropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(MouseEvent, ProxyEvent)\n\nfunction KeyEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < KEY_PROPS.length; j++) {\n        var keyPropKey = KEY_PROPS[j]\n        this[keyPropKey] = ev[keyPropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(KeyEvent, ProxyEvent)\n\n},{\"inherits\":12}],16:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = removeEvent\n\nfunction removeEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        return\n    } else if (Array.isArray(events)) {\n        var index = events.indexOf(handler)\n        if (index !== -1) {\n            events.splice(index, 1)\n        }\n    } else if (events === handler) {\n        ds[type] = null\n    }\n}\n\n},{\"data-set\":2}],17:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"vtree/is-vhook\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, props, previous, propName);\n        } else if (isHook(propValue)) {\n            propValue.hook(node,\n                propName,\n                previous ? previous[propName] : undefined)\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else if (propValue !== undefined) {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, props, previous, propName) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{\"is-object\":21,\"vtree/is-vhook\":29}],18:[function(require,module,exports){\nvar document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"vtree/is-vnode\")\nvar isVText = require(\"vtree/is-vtext\")\nvar isWidget = require(\"vtree/is-widget\")\nvar handleThunk = require(\"vtree/handle-thunk\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{\"./apply-properties\":17,\"global/document\":20,\"vtree/handle-thunk\":27,\"vtree/is-vnode\":30,\"vtree/is-vtext\":31,\"vtree/is-widget\":32}],19:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],20:[function(require,module,exports){\nmodule.exports=require(10)\n},{\"min-document\":40}],21:[function(require,module,exports){\nmodule.exports = isObject\n\nfunction isObject(x) {\n    return typeof x === \"object\" && x !== null\n}\n\n},{}],22:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n\n},{}],23:[function(require,module,exports){\nvar applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"vtree/is-widget\")\nvar VPatch = require(\"vtree/vpatch\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    if (updateWidget(leftVNode, widget)) {\n        return widget.update(leftVNode, domNode) || domNode\n    }\n\n    var parentNode = domNode.parentNode\n    var newWidget = render(widget, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newWidget, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newWidget\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, bIndex) {\n    var children = []\n    var childNodes = domNode.childNodes\n    var len = childNodes.length\n    var i\n    var reverseIndex = bIndex.reverse\n\n    for (i = 0; i < len; i++) {\n        children.push(domNode.childNodes[i])\n    }\n\n    var insertOffset = 0\n    var move\n    var node\n    var insertNode\n    for (i = 0; i < len; i++) {\n        move = bIndex[i]\n        if (move !== undefined && move !== i) {\n            // the element currently at this index will be moved later so increase the insert offset\n            if (reverseIndex[i] > i) {\n                insertOffset++\n            }\n\n            node = children[move]\n            insertNode = childNodes[i + insertOffset] || null\n            if (node !== insertNode) {\n                domNode.insertBefore(node, insertNode)\n            }\n\n            // the moved element came from the front of the array so reduce the insert offset\n            if (move < i) {\n                insertOffset--\n            }\n        }\n\n        // element at this index is scheduled to be removed so increase insert offset\n        if (i in bIndex.removes) {\n            insertOffset++\n        }\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        console.log(oldRoot)\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{\"./apply-properties\":17,\"./create-element\":18,\"./update-widget\":25,\"vtree/is-widget\":32,\"vtree/vpatch\":37}],24:[function(require,module,exports){\nvar document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{\"./dom-index\":19,\"./patch-op\":23,\"global/document\":20,\"x-is-array\":22}],25:[function(require,module,exports){\nvar isWidget = require(\"vtree/is-widget\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{\"vtree/is-widget\":32}],26:[function(require,module,exports){\nvar isArray = require(\"x-is-array\")\nvar isObject = require(\"is-object\")\n\nvar VPatch = require(\"./vpatch\")\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar handleThunk = require(\"./handle-thunk\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        if (isThunk(a) || isThunk(b)) {\n            thunks(a, b, patch, index)\n        } else {\n            hooks(b, patch, index)\n        }\n        return\n    }\n\n    var apply = patch[index]\n\n    if (b == null) {\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n        destroyWidgets(a, patch, index)\n    } else if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties, b.hooks)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                destroyWidgets(a, patch, index)\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            destroyWidgets(a, patch, index)\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            destroyWidgets(a, patch, index)\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n\n        if (!isWidget(a)) {\n            destroyWidgets(a, patch, index)\n        }\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n}\n\nfunction diffProps(a, b, hooks) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (hooks && aKey in hooks) {\n            diff = diff || {}\n            diff[aKey] = bValue\n        } else {\n            if (isObject(aValue) && isObject(bValue)) {\n                if (getPrototype(bValue) !== getPrototype(aValue)) {\n                    diff = diff || {}\n                    diff[aKey] = bValue\n                } else {\n                    var objectDiff = diffProps(aValue, bValue)\n                    if (objectDiff) {\n                        diff = diff || {}\n                        diff[aKey] = objectDiff\n                    }\n                }\n            } else if (aValue !== bValue) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            }\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var bChildren = reorder(aChildren, b.children)\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else if (!rightNode) {\n            if (leftNode) {\n                // Excess nodes in a need to be removed\n                patch[index] = new VPatch(VPatch.REMOVE, leftNode, null)\n                destroyWidgets(leftNode, patch, index)\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (bChildren.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, bChildren.moves))\n    }\n\n    return apply\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = new VPatch(VPatch.REMOVE, vNode, null)\n        }\n    } else if (isVNode(vNode) && vNode.hasWidgets) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b);\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// Execute hooks when two nodes are identical\nfunction hooks(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = new VPatch(VPatch.PROPS, vNode.hooks, vNode.hooks)\n        }\n\n        if (vNode.descendantHooks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                hooks(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    }\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n\n    var bKeys = keyIndex(bChildren)\n\n    if (!bKeys) {\n        return bChildren\n    }\n\n    var aKeys = keyIndex(aChildren)\n\n    if (!aKeys) {\n        return bChildren\n    }\n\n    var bMatch = {}, aMatch = {}\n\n    for (var key in bKeys) {\n        bMatch[bKeys[key]] = aKeys[key]\n    }\n\n    for (var key in aKeys) {\n        aMatch[aKeys[key]] = bKeys[key]\n    }\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n    var shuffle = []\n    var freeIndex = 0\n    var i = 0\n    var moveIndex = 0\n    var moves = {}\n    var removes = moves.removes = {}\n    var reverse = moves.reverse = {}\n    var hasMoves = false\n\n    while (freeIndex < len) {\n        var move = aMatch[i]\n        if (move !== undefined) {\n            shuffle[i] = bChildren[move]\n            if (move !== moveIndex) {\n                moves[move] = moveIndex\n                reverse[moveIndex] = move\n                hasMoves = true\n            }\n            moveIndex++\n        } else if (i in aMatch) {\n            shuffle[i] = undefined\n            removes[i] = moveIndex++\n            hasMoves = true\n        } else {\n            while (bMatch[freeIndex] !== undefined) {\n                freeIndex++\n            }\n\n            if (freeIndex < len) {\n                var freeChild = bChildren[freeIndex]\n                if (freeChild) {\n                    shuffle[i] = freeChild\n                    if (freeIndex !== moveIndex) {\n                        hasMoves = true\n                        moves[freeIndex] = moveIndex\n                        reverse[moveIndex] = freeIndex\n                    }\n                    moveIndex++\n                }\n                freeIndex++\n            }\n        }\n        i++\n    }\n\n    if (hasMoves) {\n        shuffle.moves = moves\n    }\n\n    return shuffle\n}\n\nfunction keyIndex(children) {\n    var i, keys\n\n    for (i = 0; i < children.length; i++) {\n        var child = children[i]\n\n        if (child.key !== undefined) {\n            keys = keys || {}\n            keys[child.key] = i\n        }\n    }\n\n    return keys\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{\"./handle-thunk\":27,\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32,\"./vpatch\":37,\"is-object\":33,\"x-is-array\":34}],27:[function(require,module,exports){\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n\n},{\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32}],28:[function(require,module,exports){\nmodule.exports = isThunk\n\nfunction isThunk(t) {\n    return t && t.type === \"Thunk\"\n}\n\n},{}],29:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook && typeof hook.hook === \"function\" &&\n        !hook.hasOwnProperty(\"hook\")\n}\n\n},{}],30:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n\n},{\"./version\":35}],31:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n\n},{\"./version\":35}],32:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n\n},{}],33:[function(require,module,exports){\nmodule.exports=require(21)\n},{}],34:[function(require,module,exports){\nmodule.exports=require(22)\n},{}],35:[function(require,module,exports){\nmodule.exports = \"1\"\n\n},{}],36:[function(require,module,exports){\nvar version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property)) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n\n},{\"./is-vhook\":29,\"./is-vnode\":30,\"./is-widget\":32,\"./version\":35}],37:[function(require,module,exports){\nvar version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n\n},{\"./version\":35}],38:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n\n},{\"./version\":35}],39:[function(require,module,exports){\n\nvar VNode = require('vtree/vnode');\nvar VText = require('vtree/vtext');\nvar diff = require('vtree/diff');\nvar patch = require('vdom/patch');\nvar createElement = require('vdom/create-element');\nvar DataSet = require(\"data-set\");\nvar Delegator = require(\"dom-delegator\");\nvar isHook = require(\"vtree/is-vhook\");\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.VirtualDom = elm.Native.VirtualDom || {};\n    if (elm.Native.VirtualDom.values) {\n        return elm.Native.VirtualDom.values;\n    }\n\n    // This manages event listeners. Somehow...\n    var delegator = Delegator();\n\n    var NativeElement = Elm.Native.Graphics.Element.make(elm);\n    var Element = Elm.Graphics.Element.make(elm);\n    var Json = Elm.Native.Json.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function listToObject(list) {\n        var object = {};\n        while (list.ctor !== '[]') {\n            var entry = list._0;\n            object[entry.key] = entry.value;\n            list = list._1;\n        }\n        return object;\n    }\n\n    function node(name, propertyList, contents) {\n        var props = listToObject(propertyList);\n\n        var key, namespace;\n        // support keys\n        if (props.key !== undefined) {\n            key = props.key;\n            props.key = undefined;\n        }\n\n        // support namespace\n        if (props.namespace !== undefined) {\n            namespace = props.namespace;\n            props.namespace = undefined;\n        }\n\n        // ensure that setting text of an input does not move the cursor\n        var useSoftSet =\n            name === 'input'\n            && props.value !== undefined\n            && !isHook(props.value);\n\n        if (useSoftSet) {\n            props.value = SoftSetHook(props.value);\n        }\n\n        return new VNode(name, props, List.toArray(contents), key, namespace);\n    }\n\n    function property(key, value) {\n        return {\n            key: key,\n            value: value\n        };\n    }\n\n    function on(name, decoder, createMessage) {\n        function eventHandler(event) {\n            var value = A2(Json.runDecoderValue, decoder, event);\n            if (value.ctor === 'Ok') {\n                createMessage(value._0)();\n            }\n        }\n        return property(name, DataSetHook(eventHandler));\n    }\n\n    function DataSetHook(value) {\n        if (!(this instanceof DataSetHook)) {\n            return new DataSetHook(value);\n        }\n\n        this.value = value;\n    }\n\n    DataSetHook.prototype.hook = function (node, propertyName) {\n        var ds = DataSet(node);\n        ds[propertyName] = this.value;\n    };\n\n\n    function SoftSetHook(value) {\n      if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n      }\n\n      this.value = value;\n    }\n\n    SoftSetHook.prototype.hook = function (node, propertyName) {\n      if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n      }\n    };\n\n    function text(string) {\n        return new VText(string);\n    }\n\n    function fromElement(element) {\n        return {\n            type: \"Widget\",\n\n            element: element,\n\n            init: function () {\n                return NativeElement.render(element);\n            },\n\n            update: function (previous, node) {\n                return NativeElement.update(node, previous.element, element);\n            }\n        };\n    }\n\n    function toElement(width, height, html) {\n        return A3(Element.newElement, width, height,\n                  { ctor: 'Custom'\n                  , type: 'evancz/elm-html'\n                  , render: render\n                  , update: update\n                  , model: html\n                  });\n    }\n\n    function render(model) {\n        var element = NativeElement.createNode('div');\n        element.appendChild(createElement(model));\n        return element;\n    }\n\n    function update(node, oldModel, newModel) {\n        var patches = diff(oldModel, newModel);\n        var newNode = patch(node.firstChild, patches)\n        if (newNode !== node.firstChild) {\n            node.replaceChild(newNode, node.firstChild)\n        }\n        return node;\n    }\n\n    function lazyRef(fn, a) {\n        function thunk() {\n            return fn(a);\n        }\n        return new Thunk(fn, [a], thunk);\n    }\n\n    function lazyRef2(fn, a, b) {\n        function thunk() {\n            return A2(fn, a, b);\n        }\n        return new Thunk(fn, [a,b], thunk);\n    }\n\n    function lazyRef3(fn, a, b, c) {\n        function thunk() {\n            return A3(fn, a, b, c);\n        }\n        return new Thunk(fn, [a,b,c], thunk);\n    }\n\n    function Thunk(fn, args, thunk) {\n        this.fn = fn;\n        this.args = args;\n        this.vnode = null;\n        this.key = undefined;\n        this.thunk = thunk;\n    }\n\n    Thunk.prototype.type = \"Thunk\";\n    Thunk.prototype.update = updateThunk;\n    Thunk.prototype.render = renderThunk;\n\n    function shouldUpdate(current, previous) {\n        if (current.fn !== previous.fn) {\n            return true;\n        }\n\n        // if it's the same function, we know the number of args must match\n        var cargs = current.args;\n        var pargs = previous.args;\n\n        for (var i = cargs.length; i--; ) {\n            if (cargs[i] !== pargs[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function updateThunk(previous, domNode) {\n        if (!shouldUpdate(this, previous)) {\n            this.vnode = previous.vnode;\n            return;\n        }\n\n        if (!this.vnode) {\n            this.vnode = this.thunk();\n        }\n\n        var patches = diff(previous.vnode, this.vnode);\n        patch(domNode, patches);\n    }\n\n    function renderThunk() {\n        return this.thunk();\n    }\n\n    return Elm.Native.VirtualDom.values = {\n        node: F3(node),\n        text: text,\n        on: F3(on),\n\n        property: F2(property),\n\n        lazy: F2(lazyRef),\n        lazy2: F3(lazyRef2),\n        lazy3: F4(lazyRef3),\n\n        toElement: F3(toElement),\n        fromElement: fromElement\n    };\n};\n\n},{\"data-set\":2,\"dom-delegator\":8,\"vdom/create-element\":18,\"vdom/patch\":24,\"vtree/diff\":26,\"vtree/is-vhook\":29,\"vtree/vnode\":36,\"vtree/vtext\":38}],40:[function(require,module,exports){\n\n},{}]},{},[39]);\n\nElm.Native = Elm.Native || {};\nElm.Native.Window = {};\nElm.Native.Window.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Window = localRuntime.Native.Window || {};\n    if (localRuntime.Native.Window.values) {\n        return localRuntime.Native.Window.values;\n    }\n\n    var Signal = Elm.Signal.make(localRuntime);\n    var NS = Elm.Native.Signal.make(localRuntime);\n    var Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\n    function getWidth() {\n        return localRuntime.node.clientWidth;\n    }\n    function getHeight() {\n        if (localRuntime.isFullscreen()) {\n            return window.innerHeight;\n        }\n        return localRuntime.node.clientHeight;\n    }\n\n    var dimensions = NS.input(Tuple2(getWidth(), getHeight()));\n    dimensions.defaultNumberOfKids = 2;\n\n    // Do not move width and height into Elm. By setting the default number of kids,\n    // the resize listener can be detached.\n    var width  = A2(Signal.map, function(p){return p._0;}, dimensions);\n    width.defaultNumberOfKids = 0;\n\n    var height = A2(Signal.map, function(p){return p._1;}, dimensions);\n    height.defaultNumberOfKids = 0;\n\n    function resizeIfNeeded() {\n        // Do not trigger event if the dimensions have not changed.\n        // This should be most of the time.\n        var w = getWidth();\n        var h = getHeight();\n        if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n\n        setTimeout(function () {\n            // Check again to see if the dimensions have changed.\n            // It is conceivable that the dimensions have changed\n            // again while some other event was being processed.\n            var w = getWidth();\n            var h = getHeight();\n            if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n            localRuntime.notify(dimensions.id, Tuple2(w,h));\n        }, 0);\n    }\n    localRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\n    return localRuntime.Native.Window.values = {\n        dimensions: dimensions,\n        width: width,\n        height: height,\n        resizeIfNeeded: resizeIfNeeded\n    };\n\n};\n\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   \"use strict\";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values)\n   return _elm.Result.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Result\",\n   $Maybe = Elm.Maybe.make(_elm);\n   var toMaybe = function (result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return $Maybe.Nothing;\n            case \"Ok\":\n            return $Maybe.Just(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 110 and 123\");\n      }();\n   };\n   var Err = function (a) {\n      return {ctor: \"Err\",_0: a};\n   };\n   var andThen = F2(function (result,\n   callback) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return callback(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 72 and 91\");\n      }();\n   });\n   var Ok = function (a) {\n      return {ctor: \"Ok\",_0: a};\n   };\n   var map = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return Ok(f(result._0));}\n         _U.badCase($moduleName,\n         \"between lines 32 and 69\");\n      }();\n   });\n   var formatError = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(f(result._0));\n            case \"Ok\":\n            return Ok(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 94 and 107\");\n      }();\n   });\n   var fromMaybe = F2(function (err,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Ok(maybe._0);\n            case \"Nothing\":\n            return Err(err);}\n         _U.badCase($moduleName,\n         \"between lines 126 and 128\");\n      }();\n   });\n   _elm.Result.values = {_op: _op\n                        ,Ok: Ok\n                        ,Err: Err\n                        ,map: map\n                        ,andThen: andThen\n                        ,formatError: formatError\n                        ,toMaybe: toMaybe\n                        ,fromMaybe: fromMaybe};\n   return _elm.Result.values;\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values)\n   return _elm.Signal.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Signal\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm);\n   var subscribe = $Native$Signal.subscribe;\n   var send = $Native$Signal.send;\n   var channel = $Native$Signal.input;\n   var Message = {ctor: \"Message\"};\n   var Channel = {ctor: \"Channel\"};\n   _op[\"~\"] = F2(function (sf,s) {\n      return A3($Native$Signal.map2,\n      F2(function (f,x) {\n         return f(x);\n      }),\n      sf,\n      s);\n   });\n   _op[\"<~\"] = F2(function (f,s) {\n      return A2($Native$Signal.map,\n      f,\n      s);\n   });\n   var sampleOn = $Native$Signal.sampleOn;\n   var dropRepeats = $Native$Signal.dropRepeats;\n   var dropIf = $Native$Signal.dropIf;\n   var keepIf = $Native$Signal.keepIf;\n   var keepWhen = F3(function (bs,\n   def,\n   sig) {\n      return A2(_op[\"<~\"],\n      $Basics.snd,\n      A3(keepIf,\n      $Basics.fst,\n      {ctor: \"_Tuple2\"\n      ,_0: false\n      ,_1: def},\n      A2(_op[\"~\"],\n      A2(_op[\"<~\"],\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      A2(sampleOn,sig,bs)),\n      sig)));\n   });\n   var dropWhen = function (bs) {\n      return keepWhen(A2(_op[\"<~\"],\n      $Basics.not,\n      bs));\n   };\n   var merge = $Native$Signal.merge;\n   var mergeMany = function (signals) {\n      return A2($List.foldr1,\n      merge,\n      signals);\n   };\n   var foldp = $Native$Signal.foldp;\n   var map5 = $Native$Signal.map5;\n   var map4 = $Native$Signal.map4;\n   var map3 = $Native$Signal.map3;\n   var map2 = $Native$Signal.map2;\n   var map = $Native$Signal.map;\n   var constant = $Native$Signal.constant;\n   var Signal = {ctor: \"Signal\"};\n   _elm.Signal.values = {_op: _op\n                        ,Signal: Signal\n                        ,constant: constant\n                        ,map: map\n                        ,map2: map2\n                        ,map3: map3\n                        ,map4: map4\n                        ,map5: map5\n                        ,foldp: foldp\n                        ,merge: merge\n                        ,mergeMany: mergeMany\n                        ,keepIf: keepIf\n                        ,dropIf: dropIf\n                        ,keepWhen: keepWhen\n                        ,dropWhen: dropWhen\n                        ,dropRepeats: dropRepeats\n                        ,sampleOn: sampleOn\n                        ,Channel: Channel\n                        ,Message: Message\n                        ,channel: channel\n                        ,send: send\n                        ,subscribe: subscribe};\n   return _elm.Signal.values;\n};\nElm.String = Elm.String || {};\nElm.String.make = function (_elm) {\n   \"use strict\";\n   _elm.String = _elm.String || {};\n   if (_elm.String.values)\n   return _elm.String.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"String\",\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$String = Elm.Native.String.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var fromList = $Native$String.fromList;\n   var toList = $Native$String.toList;\n   var toFloat = $Native$String.toFloat;\n   var toInt = $Native$String.toInt;\n   var indices = $Native$String.indexes;\n   var indexes = $Native$String.indexes;\n   var endsWith = $Native$String.endsWith;\n   var startsWith = $Native$String.startsWith;\n   var contains = $Native$String.contains;\n   var all = $Native$String.all;\n   var any = $Native$String.any;\n   var toLower = $Native$String.toLower;\n   var toUpper = $Native$String.toUpper;\n   var lines = $Native$String.lines;\n   var words = $Native$String.words;\n   var trimRight = $Native$String.trimRight;\n   var trimLeft = $Native$String.trimLeft;\n   var trim = $Native$String.trim;\n   var padRight = $Native$String.padRight;\n   var padLeft = $Native$String.padLeft;\n   var pad = $Native$String.pad;\n   var dropRight = $Native$String.dropRight;\n   var dropLeft = $Native$String.dropLeft;\n   var right = $Native$String.right;\n   var left = $Native$String.left;\n   var slice = $Native$String.slice;\n   var repeat = $Native$String.repeat;\n   var join = $Native$String.join;\n   var split = $Native$String.split;\n   var foldr = $Native$String.foldr;\n   var foldl = $Native$String.foldl;\n   var reverse = $Native$String.reverse;\n   var filter = $Native$String.filter;\n   var map = $Native$String.map;\n   var length = $Native$String.length;\n   var concat = $Native$String.concat;\n   var append = $Native$String.append;\n   var uncons = $Native$String.uncons;\n   var cons = $Native$String.cons;\n   var fromChar = function ($char) {\n      return A2(cons,$char,\"\");\n   };\n   var isEmpty = $Native$String.isEmpty;\n   _elm.String.values = {_op: _op\n                        ,isEmpty: isEmpty\n                        ,cons: cons\n                        ,fromChar: fromChar\n                        ,uncons: uncons\n                        ,append: append\n                        ,concat: concat\n                        ,length: length\n                        ,map: map\n                        ,filter: filter\n                        ,reverse: reverse\n                        ,foldl: foldl\n                        ,foldr: foldr\n                        ,split: split\n                        ,join: join\n                        ,repeat: repeat\n                        ,slice: slice\n                        ,left: left\n                        ,right: right\n                        ,dropLeft: dropLeft\n                        ,dropRight: dropRight\n                        ,pad: pad\n                        ,padLeft: padLeft\n                        ,padRight: padRight\n                        ,trim: trim\n                        ,trimLeft: trimLeft\n                        ,trimRight: trimRight\n                        ,words: words\n                        ,lines: lines\n                        ,toUpper: toUpper\n                        ,toLower: toLower\n                        ,any: any\n                        ,all: all\n                        ,contains: contains\n                        ,startsWith: startsWith\n                        ,endsWith: endsWith\n                        ,indexes: indexes\n                        ,indices: indices\n                        ,toInt: toInt\n                        ,toFloat: toFloat\n                        ,toList: toList\n                        ,fromList: fromList};\n   return _elm.String.values;\n};\nElm.Task = Elm.Task || {};\nElm.Task.make = function (_elm) {\n   \"use strict\";\n   _elm.Task = _elm.Task || {};\n   if (_elm.Task.values)\n   return _elm.Task.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Task\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm);\n   var onFinish = F2(function (enterMessage,\n   escapeMessage) {\n      return function () {\n         var select = function (key) {\n            return function () {\n               switch (key)\n               {case 13:\n                  return $Result.Ok(enterMessage);\n                  case 27:\n                  return $Result.Ok(escapeMessage);}\n               return $Result.Err(\"Not a \\'finish\\' key, such as ENTER or ESCAPE\");\n            }();\n         };\n         return A3($Html$Events.on,\n         \"keydown\",\n         A2($Json$Decode.customDecoder,\n         $Html$Events.keyCode,\n         select),\n         $Basics.identity);\n      }();\n   });\n   var update = F2(function (update,\n   task) {\n      return function () {\n         switch (update.ctor)\n         {case \"Cancel\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Nothing]],\n              task));\n            case \"Commit\":\n            return function () {\n                 var _v4 = task.edits;\n                 switch (_v4.ctor)\n                 {case \"Just\":\n                    return function () {\n                         var description = $String.trim(_v4._0);\n                         return $String.isEmpty(description) ? $Maybe.Nothing : $Maybe.Just(_U.replace([[\"edits\"\n                                                                                                        ,$Maybe.Nothing]\n                                                                                                       ,[\"description\"\n                                                                                                        ,description]],\n                         task));\n                      }();\n                    case \"Nothing\":\n                    return $Maybe.Just(task);}\n                 _U.badCase($moduleName,\n                 \"between lines 56 and 69\");\n              }();\n            case \"Completed\":\n            return $Maybe.Just(_U.replace([[\"completed\"\n                                           ,update._0]],\n              task));\n            case \"Delete\":\n            return $Maybe.Nothing;\n            case \"Edit\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(update._0)]],\n              task));\n            case \"Focus\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(task.description)]],\n              task));}\n         _U.badCase($moduleName,\n         \"between lines 45 and 73\");\n      }();\n   });\n   var Delete = {ctor: \"Delete\"};\n   var Completed = function (a) {\n      return {ctor: \"Completed\"\n             ,_0: a};\n   };\n   var Commit = {ctor: \"Commit\"};\n   var Cancel = {ctor: \"Cancel\"};\n   var Edit = function (a) {\n      return {ctor: \"Edit\",_0: a};\n   };\n   var Focus = {ctor: \"Focus\"};\n   var view = F2(function (channel,\n   task) {\n      return function () {\n         var description = A2($Maybe.withDefault,\n         task.description,\n         task.edits);\n         var className = A2($Basics._op[\"++\"],\n         task.completed ? \"completed \" : \"\",\n         function () {\n            var _v6 = task.edits;\n            switch (_v6.ctor)\n            {case \"Just\": return \"editing\";\n               case \"Nothing\": return \"\";}\n            _U.badCase($moduleName,\n            \"between lines 82 and 86\");\n         }());\n         return A2($Html.li,\n         _L.fromArray([$Html$Attributes.$class(className)]),\n         _L.fromArray([A2($Html.div,\n                      _L.fromArray([$Html$Attributes.$class(\"view\")]),\n                      _L.fromArray([A2($Html.input,\n                                   _L.fromArray([$Html$Attributes.$class(\"toggle\")\n                                                ,$Html$Attributes.type$(\"checkbox\")\n                                                ,$Html$Attributes.checked(task.completed)\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Completed($Basics.not(task.completed))}))]),\n                                   _L.fromArray([]))\n                                   ,A2($Html.label,\n                                   _L.fromArray([$Html$Events.onDoubleClick(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Focus}))]),\n                                   _L.fromArray([$Html.text(description)]))\n                                   ,A2($Html.button,\n                                   _L.fromArray([$Html$Attributes.$class(\"destroy\")\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Delete}))]),\n                                   _L.fromArray([]))]))\n                      ,A2($Html.input,\n                      _L.fromArray([$Html$Attributes.$class(\"edit\")\n                                   ,$Html$Attributes.value(description)\n                                   ,$Html$Attributes.name(\"title\")\n                                   ,$Html$Attributes.id(A2($Basics._op[\"++\"],\n                                   \"todo-\",\n                                   $Basics.toString(task.id)))\n                                   ,A3($Html$Events.on,\n                                   \"input\",\n                                   $Html$Events.targetValue,\n                                   function (desc) {\n                                      return A2($LocalChannel.send,\n                                      channel,\n                                      {ctor: \"_Tuple2\"\n                                      ,_0: task.id\n                                      ,_1: Edit(desc)});\n                                   })\n                                   ,$Html$Events.onBlur(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}))\n                                   ,A2(onFinish,\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}),\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Cancel}))]),\n                      _L.fromArray([]))]));\n      }();\n   });\n   var init = F2(function (desc,\n   id) {\n      return {_: {}\n             ,completed: false\n             ,description: desc\n             ,edits: $Maybe.Nothing\n             ,id: id};\n   });\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,completed: b\n             ,description: a\n             ,edits: c\n             ,id: d};\n   });\n   _elm.Task.values = {_op: _op\n                      ,Model: Model\n                      ,init: init\n                      ,Focus: Focus\n                      ,Edit: Edit\n                      ,Cancel: Cancel\n                      ,Commit: Commit\n                      ,Completed: Completed\n                      ,Delete: Delete\n                      ,update: update\n                      ,view: view\n                      ,onFinish: onFinish};\n   return _elm.Task.values;\n};\nElm.Todo = Elm.Todo || {};\nElm.Todo.make = function (_elm) {\n   \"use strict\";\n   _elm.Todo = _elm.Todo || {};\n   if (_elm.Todo.values)\n   return _elm.Todo.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Todo\",\n   $Basics = Elm.Basics.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Html$Lazy = Elm.Html.Lazy.make(_elm),\n   $List = Elm.List.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm),\n   $Task = Elm.Task.make(_elm),\n   $Window = Elm.Window.make(_elm);\n   var route = _P.portIn(\"route\",\n   _P.incomingSignal(function (v) {\n      return typeof v === \"string\" || typeof v === \"object\" && v instanceof String ? v : _U.badPort(\"a string\",\n      v);\n   }));\n   var savedModel = _P.portIn(\"savedModel\",\n   function (v) {\n      return v === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v === \"object\" && \"tasks\" in v && \"field\" in v && \"uid\" in v && \"visibility\" in v ? {_: {}\n                                                                                                                                                                              ,tasks: typeof v.tasks === \"object\" && v.tasks instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.tasks.map(function (v) {\n                                                                                                                                                                                 return typeof v === \"object\" && \"description\" in v && \"completed\" in v && \"edits\" in v && \"id\" in v ? {_: {}\n                                                                                                                                                                                                                                                                                       ,description: typeof v.description === \"string\" || typeof v.description === \"object\" && v.description instanceof String ? v.description : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.description)\n                                                                                                                                                                                                                                                                                       ,completed: typeof v.completed === \"boolean\" ? v.completed : _U.badPort(\"a boolean (true or false)\",\n                                                                                                                                                                                                                                                                                       v.completed)\n                                                                                                                                                                                                                                                                                       ,edits: v.edits === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v.edits === \"string\" || typeof v.edits === \"object\" && v.edits instanceof String ? v.edits : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.edits))\n                                                                                                                                                                                                                                                                                       ,id: typeof v.id === \"number\" ? v.id : _U.badPort(\"a number\",\n                                                                                                                                                                                                                                                                                       v.id)} : _U.badPort(\"an object with fields \\'description\\', \\'completed\\', \\'edits\\', \\'id\\'\",\n                                                                                                                                                                                 v);\n                                                                                                                                                                              })) : _U.badPort(\"an array\",\n                                                                                                                                                                              v.tasks)\n                                                                                                                                                                              ,field: typeof v.field === \"string\" || typeof v.field === \"object\" && v.field instanceof String ? v.field : _U.badPort(\"a string\",\n                                                                                                                                                                              v.field)\n                                                                                                                                                                              ,uid: typeof v.uid === \"number\" ? v.uid : _U.badPort(\"a number\",\n                                                                                                                                                                              v.uid)\n                                                                                                                                                                              ,visibility: typeof v.visibility === \"string\" || typeof v.visibility === \"object\" && v.visibility instanceof String ? v.visibility : _U.badPort(\"a string\",\n                                                                                                                                                                              v.visibility)} : _U.badPort(\"an object with fields \\'tasks\\', \\'field\\', \\'uid\\', \\'visibility\\'\",\n      v));\n   });\n   var infoFooter = A2($Html.footer,\n   _L.fromArray([$Html$Attributes.id(\"info\")]),\n   _L.fromArray([A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Double-click to edit a todo\")]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Written by \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"https://github.com/evancz\")]),\n                             _L.fromArray([$Html.text(\"Evan Czaplicki\")]))]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Part of \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"http://todomvc.com\")]),\n                             _L.fromArray([$Html.text(\"TodoMVC\")]))]))]));\n   var update = F2(function (action,\n   state) {\n      return function () {\n         switch (action.ctor)\n         {case \"Add\":\n            return function () {\n                 var description = $String.trim(state.field);\n                 return $String.isEmpty(description) ? state : _U.replace([[\"uid\"\n                                                                           ,state.uid + 1]\n                                                                          ,[\"field\"\n                                                                           ,\"\"]\n                                                                          ,[\"tasks\"\n                                                                           ,A2($Basics._op[\"++\"],\n                                                                           state.tasks,\n                                                                           _L.fromArray([A2($Task.init,\n                                                                           description,\n                                                                           state.uid)]))]],\n                 state);\n              }();\n            case \"ChangeVisibility\":\n            return _U.replace([[\"visibility\"\n                               ,action._0]],\n              state);\n            case \"CheckAll\":\n            return function () {\n                 var updateTask = function (t) {\n                    return _U.replace([[\"completed\"\n                                       ,action._0]],\n                    t);\n                 };\n                 return _U.replace([[\"tasks\"\n                                    ,A2($List.map,\n                                    updateTask,\n                                    state.tasks)]],\n                 state);\n              }();\n            case \"DeleteComplete\":\n            return _U.replace([[\"tasks\"\n                               ,A2($List.filter,\n                               function ($) {\n                                  return $Basics.not(function (_) {\n                                     return _.completed;\n                                  }($));\n                               },\n                               state.tasks)]],\n              state);\n            case \"NoOp\": return state;\n            case \"UpdateField\":\n            return _U.replace([[\"field\"\n                               ,action._0]],\n              state);\n            case \"UpdateTask\":\n            switch (action._0.ctor)\n              {case \"_Tuple2\":\n                 return function () {\n                      var updateTask = function (t) {\n                         return _U.eq(t.id,\n                         action._0._0) ? A2($Task.update,\n                         action._0._1,\n                         t) : $Maybe.Just(t);\n                      };\n                      return _U.replace([[\"tasks\"\n                                         ,A2($List.filterMap,\n                                         updateTask,\n                                         state.tasks)]],\n                      state);\n                   }();}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 71 and 100\");\n      }();\n   });\n   var ChangeVisibility = function (a) {\n      return {ctor: \"ChangeVisibility\"\n             ,_0: a};\n   };\n   var CheckAll = function (a) {\n      return {ctor: \"CheckAll\"\n             ,_0: a};\n   };\n   var DeleteComplete = {ctor: \"DeleteComplete\"};\n   var UpdateTask = function (a) {\n      return {ctor: \"UpdateTask\"\n             ,_0: a};\n   };\n   var Add = {ctor: \"Add\"};\n   var UpdateField = function (a) {\n      return {ctor: \"UpdateField\"\n             ,_0: a};\n   };\n   var NoOp = {ctor: \"NoOp\"};\n   var actions = $Signal.channel(NoOp);\n   var taskEntry = function (task) {\n      return A2($Html.header,\n      _L.fromArray([$Html$Attributes.id(\"header\")]),\n      _L.fromArray([A2($Html.h1,\n                   _L.fromArray([]),\n                   _L.fromArray([$Html.text(\"todos\")]))\n                   ,A2($Html.input,\n                   _L.fromArray([$Html$Attributes.id(\"new-todo\")\n                                ,$Html$Attributes.placeholder(\"What needs to be done?\")\n                                ,$Html$Attributes.autofocus(true)\n                                ,$Html$Attributes.value(task)\n                                ,$Html$Attributes.name(\"newTodo\")\n                                ,A3($Html$Events.on,\n                                \"input\",\n                                $Html$Events.targetValue,\n                                function ($) {\n                                   return $Signal.send(actions)(UpdateField($));\n                                })\n                                ,A2($Task.onFinish,\n                                A2($Signal.send,actions,Add),\n                                A2($Signal.send,\n                                actions,\n                                NoOp))]),\n                   _L.fromArray([]))]));\n   };\n   var visibilitySwap = F3(function (uri,\n   visibility,\n   actualVisibility) {\n      return function () {\n         var className = _U.eq(visibility,\n         actualVisibility) ? \"selected\" : \"\";\n         return A2($Html.li,\n         _L.fromArray([$Html$Events.onClick(A2($Signal.send,\n         actions,\n         ChangeVisibility(visibility)))]),\n         _L.fromArray([A2($Html.a,\n         _L.fromArray([$Html$Attributes.$class(className)\n                      ,$Html$Attributes.href(uri)]),\n         _L.fromArray([$Html.text(visibility)]))]));\n      }();\n   });\n   var controls = F2(function (visibility,\n   tasks) {\n      return function () {\n         var tasksCompleted = $List.length(A2($List.filter,\n         function (_) {\n            return _.completed;\n         },\n         tasks));\n         var tasksLeft = $List.length(tasks) - tasksCompleted;\n         var item_ = _U.eq(tasksLeft,\n         1) ? \" item\" : \" items\";\n         return A2($Html.footer,\n         _L.fromArray([$Html$Attributes.id(\"footer\")\n                      ,$Html$Attributes.hidden($List.isEmpty(tasks))]),\n         _L.fromArray([A2($Html.span,\n                      _L.fromArray([$Html$Attributes.id(\"todo-count\")]),\n                      _L.fromArray([A2($Html.strong,\n                                   _L.fromArray([]),\n                                   _L.fromArray([$Html.text($Basics.toString(tasksLeft))]))\n                                   ,$Html.text(A2($Basics._op[\"++\"],\n                                   item_,\n                                   \" left\"))]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"filters\")]),\n                      _L.fromArray([A3(visibilitySwap,\n                                   \"#/\",\n                                   \"All\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/active\",\n                                   \"Active\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/completed\",\n                                   \"Completed\",\n                                   visibility)]))\n                      ,A2($Html.button,\n                      _L.fromArray([$Html$Attributes.$class(\"clear-completed\")\n                                   ,$Html$Attributes.id(\"clear-completed\")\n                                   ,$Html$Attributes.hidden(_U.eq(tasksCompleted,\n                                   0))\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   DeleteComplete))]),\n                      _L.fromArray([$Html.text(A2($Basics._op[\"++\"],\n                      \"Clear completed (\",\n                      A2($Basics._op[\"++\"],\n                      $Basics.toString(tasksCompleted),\n                      \")\")))]))]));\n      }();\n   });\n   var allActions = A2($Signal.merge,\n   $Signal.subscribe(actions),\n   A2($Signal.map,\n   ChangeVisibility,\n   route));\n   var taskActions = A2($LocalChannel.create,\n   UpdateTask,\n   actions);\n   var taskList = F2(function (visibility,\n   tasks) {\n      return function () {\n         var cssVisibility = $List.isEmpty(tasks) ? \"hidden\" : \"visible\";\n         var allCompleted = A2($List.all,\n         function (_) {\n            return _.completed;\n         },\n         tasks);\n         var isVisible = function (todo) {\n            return function () {\n               switch (visibility)\n               {case \"Active\":\n                  return $Basics.not(todo.completed);\n                  case \"All\": return true;\n                  case \"Completed\":\n                  return todo.completed;}\n               _U.badCase($moduleName,\n               \"between lines 140 and 145\");\n            }();\n         };\n         return A2($Html.section,\n         _L.fromArray([$Html$Attributes.id(\"main\")\n                      ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                            ,_0: \"visibility\"\n                                                            ,_1: cssVisibility}]))]),\n         _L.fromArray([A2($Html.input,\n                      _L.fromArray([$Html$Attributes.id(\"toggle-all\")\n                                   ,$Html$Attributes.type$(\"checkbox\")\n                                   ,$Html$Attributes.name(\"toggle\")\n                                   ,$Html$Attributes.checked(allCompleted)\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   CheckAll($Basics.not(allCompleted))))]),\n                      _L.fromArray([]))\n                      ,A2($Html.label,\n                      _L.fromArray([$Html$Attributes.$for(\"toggle-all\")]),\n                      _L.fromArray([$Html.text(\"Mark all as complete\")]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"todo-list\")]),\n                      A2($List.map,\n                      $Task.view(taskActions),\n                      A2($List.filter,\n                      isVisible,\n                      tasks)))]));\n      }();\n   });\n   var view = function (state) {\n      return A2($Html.div,\n      _L.fromArray([$Html$Attributes.$class(\"todomvc-wrapper\")\n                   ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                         ,_0: \"visibility\"\n                                                         ,_1: \"hidden\"}]))]),\n      _L.fromArray([A2($Html.section,\n                   _L.fromArray([$Html$Attributes.id(\"todoapp\")]),\n                   _L.fromArray([A2($Html$Lazy.lazy,\n                                taskEntry,\n                                state.field)\n                                ,A3($Html$Lazy.lazy2,\n                                taskList,\n                                state.visibility,\n                                state.tasks)\n                                ,A3($Html$Lazy.lazy2,\n                                controls,\n                                state.visibility,\n                                state.tasks)]))\n                   ,infoFooter]));\n   };\n   var scene = F2(function (model,\n   _v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\":\n            return A4($Graphics$Element.container,\n              _v8._0,\n              _v8._1,\n              $Graphics$Element.midTop,\n              A3($Html.toElement,\n              550,\n              _v8._1,\n              view(model)));}\n         _U.badCase($moduleName,\n         \"on line 231, column 5 to 54\");\n      }();\n   });\n   var focus = _P.portOut(\"focus\",\n   _P.outgoingSignal(function (v) {\n      return v.ctor === \"Nothing\" ? null : v._0;\n   }),\n   function () {\n      var toSelector = function (action) {\n         return function () {\n            switch (action.ctor)\n            {case \"UpdateTask\":\n               switch (action._0.ctor)\n                 {case \"_Tuple2\":\n                    switch (action._0._1.ctor)\n                      {case \"Focus\":\n                         return $Maybe.Just(action._0._0);}\n                      break;}\n                 break;}\n            return $Maybe.Nothing;\n         }();\n      };\n      return A2($Signal.map,\n      toSelector,\n      $Signal.subscribe(actions));\n   }());\n   var emptyModel = {_: {}\n                    ,field: \"\"\n                    ,tasks: _L.fromArray([])\n                    ,uid: 0\n                    ,visibility: \"All\"};\n   var initialModel = A2($Maybe.withDefault,\n   emptyModel,\n   savedModel);\n   var model = A3($Signal.foldp,\n   update,\n   initialModel,\n   allActions);\n   var main = A3($Signal.map2,\n   scene,\n   model,\n   $Window.dimensions);\n   var save = _P.portOut(\"save\",\n   _P.outgoingSignal(function (v) {\n      return {tasks: Elm.Native.List.make(_elm).toArray(v.tasks).map(function (v) {\n                return {description: v.description\n                       ,completed: v.completed\n                       ,edits: v.edits.ctor === \"Nothing\" ? null : v.edits._0\n                       ,id: v.id};\n             })\n             ,field: v.field\n             ,uid: v.uid\n             ,visibility: v.visibility};\n   }),\n   model);\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,field: b\n             ,tasks: a\n             ,uid: c\n             ,visibility: d};\n   });\n   _elm.Todo.values = {_op: _op\n                      ,Model: Model\n                      ,emptyModel: emptyModel\n                      ,NoOp: NoOp\n                      ,UpdateField: UpdateField\n                      ,Add: Add\n                      ,UpdateTask: UpdateTask\n                      ,DeleteComplete: DeleteComplete\n                      ,CheckAll: CheckAll\n                      ,ChangeVisibility: ChangeVisibility\n                      ,update: update\n                      ,view: view\n                      ,taskEntry: taskEntry\n                      ,taskList: taskList\n                      ,controls: controls\n                      ,visibilitySwap: visibilitySwap\n                      ,infoFooter: infoFooter\n                      ,main: main\n                      ,scene: scene\n                      ,model: model\n                      ,initialModel: initialModel\n                      ,allActions: allActions\n                      ,actions: actions\n                      ,taskActions: taskActions};\n   return _elm.Todo.values;\n};\nElm.VirtualDom = Elm.VirtualDom || {};\nElm.VirtualDom.make = function (_elm) {\n   \"use strict\";\n   _elm.VirtualDom = _elm.VirtualDom || {};\n   if (_elm.VirtualDom.values)\n   return _elm.VirtualDom.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"VirtualDom\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var lazy3 = $Native$VirtualDom.lazy3;\n   var lazy2 = $Native$VirtualDom.lazy2;\n   var lazy = $Native$VirtualDom.lazy;\n   var on = $Native$VirtualDom.on;\n   var property = $Native$VirtualDom.property;\n   var Property = {ctor: \"Property\"};\n   var fromElement = $Native$VirtualDom.fromElement;\n   var toElement = $Native$VirtualDom.toElement;\n   var text = $Native$VirtualDom.text;\n   var node = $Native$VirtualDom.node;\n   var Node = {ctor: \"Node\"};\n   _elm.VirtualDom.values = {_op: _op\n                            ,Node: Node\n                            ,node: node\n                            ,text: text\n                            ,toElement: toElement\n                            ,fromElement: fromElement\n                            ,Property: Property\n                            ,property: property\n                            ,on: on\n                            ,lazy: lazy\n                            ,lazy2: lazy2\n                            ,lazy3: lazy3};\n   return _elm.VirtualDom.values;\n};\nElm.Window = Elm.Window || {};\nElm.Window.make = function (_elm) {\n   \"use strict\";\n   _elm.Window = _elm.Window || {};\n   if (_elm.Window.values)\n   return _elm.Window.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Window\",\n   $Native$Window = Elm.Native.Window.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var height = $Native$Window.height;\n   var width = $Native$Window.width;\n   var dimensions = $Native$Window.dimensions;\n   _elm.Window.values = {_op: _op\n                        ,dimensions: dimensions\n                        ,width: width\n                        ,height: height};\n   return _elm.Window.values;\n};\n","source":"elmtodo/elm.js","raw":"var Elm = Elm || { Native: {} };\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   \"use strict\";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values)\n   return _elm.Array.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Array\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,\n   array) {\n      return _U.cmp(0,\n      i) < 1 && _U.cmp(i,\n      $Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,\n      i,\n      array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,\n   arr) {\n      return function () {\n         var update = F2(function (x,\n         xs) {\n            return isOkay(x) ? A2($Native$Array.push,\n            x,\n            xs) : xs;\n         });\n         return A3($Native$Array.foldl,\n         update,\n         $Native$Array.empty,\n         arr);\n      }();\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      _L.range(0,\n      $Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {\n      return A2(initialize,\n      n,\n      $Basics.always(e));\n   });\n   var Array = {ctor: \"Array\"};\n   _elm.Array.values = {_op: _op\n                       ,Array: Array\n                       ,initialize: initialize\n                       ,repeat: repeat\n                       ,fromList: fromList\n                       ,toList: toList\n                       ,toIndexedList: toIndexedList\n                       ,map: map\n                       ,indexedMap: indexedMap\n                       ,foldl: foldl\n                       ,foldr: foldr\n                       ,filter: filter\n                       ,empty: empty\n                       ,push: push\n                       ,get: get\n                       ,set: set\n                       ,slice: slice\n                       ,length: length\n                       ,append: append};\n   return _elm.Array.values;\n};\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   \"use strict\";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values)\n   return _elm.Basics.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Basics\",\n   $Native$Basics = Elm.Native.Basics.make(_elm),\n   $Native$Show = Elm.Native.Show.make(_elm),\n   $Native$Utils = Elm.Native.Utils.make(_elm);\n   var uncurry = F2(function (f,\n   _v0) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"_Tuple2\": return A2(f,\n              _v0._0,\n              _v0._1);}\n         _U.badCase($moduleName,\n         \"on line 458, column 19 to 24\");\n      }();\n   });\n   var curry = F3(function (f,\n   a,\n   b) {\n      return f({ctor: \"_Tuple2\"\n               ,_0: a\n               ,_1: b});\n   });\n   var flip = F3(function (f,b,a) {\n      return A2(f,a,b);\n   });\n   var snd = function (_v4) {\n      return function () {\n         switch (_v4.ctor)\n         {case \"_Tuple2\": return _v4._1;}\n         _U.badCase($moduleName,\n         \"on line 442, column 13 to 14\");\n      }();\n   };\n   var fst = function (_v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\": return _v8._0;}\n         _U.badCase($moduleName,\n         \"on line 438, column 13 to 14\");\n      }();\n   };\n   var always = F2(function (a,\n   _v12) {\n      return function () {\n         return a;\n      }();\n   });\n   var identity = function (x) {\n      return x;\n   };\n   _op[\"<|\"] = F2(function (f,x) {\n      return f(x);\n   });\n   _op[\"|>\"] = F2(function (x,f) {\n      return f(x);\n   });\n   _op[\">>\"] = F3(function (f,\n   g,\n   x) {\n      return g(f(x));\n   });\n   _op[\"<<\"] = F3(function (g,\n   f,\n   x) {\n      return g(f(x));\n   });\n   _op[\"++\"] = $Native$Utils.append;\n   var toString = $Native$Show.toString;\n   var isInfinite = $Native$Basics.isInfinite;\n   var isNaN = $Native$Basics.isNaN;\n   var toFloat = $Native$Basics.toFloat;\n   var ceiling = $Native$Basics.ceiling;\n   var floor = $Native$Basics.floor;\n   var truncate = $Native$Basics.truncate;\n   var round = $Native$Basics.round;\n   var otherwise = true;\n   var not = $Native$Basics.not;\n   var xor = $Native$Basics.xor;\n   _op[\"||\"] = $Native$Basics.or;\n   _op[\"&&\"] = $Native$Basics.and;\n   var max = $Native$Basics.max;\n   var min = $Native$Basics.min;\n   var GT = {ctor: \"GT\"};\n   var EQ = {ctor: \"EQ\"};\n   var LT = {ctor: \"LT\"};\n   var compare = $Native$Basics.compare;\n   _op[\">=\"] = $Native$Basics.ge;\n   _op[\"<=\"] = $Native$Basics.le;\n   _op[\">\"] = $Native$Basics.gt;\n   _op[\"<\"] = $Native$Basics.lt;\n   _op[\"/=\"] = $Native$Basics.neq;\n   _op[\"==\"] = $Native$Basics.eq;\n   var e = $Native$Basics.e;\n   var pi = $Native$Basics.pi;\n   var clamp = $Native$Basics.clamp;\n   var logBase = $Native$Basics.logBase;\n   var abs = $Native$Basics.abs;\n   var negate = $Native$Basics.negate;\n   var sqrt = $Native$Basics.sqrt;\n   var atan2 = $Native$Basics.atan2;\n   var atan = $Native$Basics.atan;\n   var asin = $Native$Basics.asin;\n   var acos = $Native$Basics.acos;\n   var tan = $Native$Basics.tan;\n   var sin = $Native$Basics.sin;\n   var cos = $Native$Basics.cos;\n   _op[\"^\"] = $Native$Basics.exp;\n   _op[\"%\"] = $Native$Basics.mod;\n   var rem = $Native$Basics.rem;\n   _op[\"//\"] = $Native$Basics.div;\n   _op[\"/\"] = $Native$Basics.floatDiv;\n   _op[\"*\"] = $Native$Basics.mul;\n   _op[\"-\"] = $Native$Basics.sub;\n   _op[\"+\"] = $Native$Basics.add;\n   var toPolar = $Native$Basics.toPolar;\n   var fromPolar = $Native$Basics.fromPolar;\n   var turns = $Native$Basics.turns;\n   var degrees = $Native$Basics.degrees;\n   var radians = function (t) {\n      return t;\n   };\n   _elm.Basics.values = {_op: _op\n                        ,radians: radians\n                        ,degrees: degrees\n                        ,turns: turns\n                        ,fromPolar: fromPolar\n                        ,toPolar: toPolar\n                        ,rem: rem\n                        ,cos: cos\n                        ,sin: sin\n                        ,tan: tan\n                        ,acos: acos\n                        ,asin: asin\n                        ,atan: atan\n                        ,atan2: atan2\n                        ,sqrt: sqrt\n                        ,negate: negate\n                        ,abs: abs\n                        ,logBase: logBase\n                        ,clamp: clamp\n                        ,pi: pi\n                        ,e: e\n                        ,compare: compare\n                        ,LT: LT\n                        ,EQ: EQ\n                        ,GT: GT\n                        ,min: min\n                        ,max: max\n                        ,xor: xor\n                        ,not: not\n                        ,otherwise: otherwise\n                        ,round: round\n                        ,truncate: truncate\n                        ,floor: floor\n                        ,ceiling: ceiling\n                        ,toFloat: toFloat\n                        ,isNaN: isNaN\n                        ,isInfinite: isInfinite\n                        ,toString: toString\n                        ,identity: identity\n                        ,always: always\n                        ,fst: fst\n                        ,snd: snd\n                        ,flip: flip\n                        ,curry: curry\n                        ,uncurry: uncurry};\n   return _elm.Basics.values;\n};\nElm.Char = Elm.Char || {};\nElm.Char.make = function (_elm) {\n   \"use strict\";\n   _elm.Char = _elm.Char || {};\n   if (_elm.Char.values)\n   return _elm.Char.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Char\",\n   $Native$Char = Elm.Native.Char.make(_elm);\n   var fromCode = $Native$Char.fromCode;\n   var toCode = $Native$Char.toCode;\n   var toLocaleLower = $Native$Char.toLocaleLower;\n   var toLocaleUpper = $Native$Char.toLocaleUpper;\n   var toLower = $Native$Char.toLower;\n   var toUpper = $Native$Char.toUpper;\n   var isHexDigit = $Native$Char.isHexDigit;\n   var isOctDigit = $Native$Char.isOctDigit;\n   var isDigit = $Native$Char.isDigit;\n   var isLower = $Native$Char.isLower;\n   var isUpper = $Native$Char.isUpper;\n   _elm.Char.values = {_op: _op\n                      ,isUpper: isUpper\n                      ,isLower: isLower\n                      ,isDigit: isDigit\n                      ,isOctDigit: isOctDigit\n                      ,isHexDigit: isHexDigit\n                      ,toUpper: toUpper\n                      ,toLower: toLower\n                      ,toLocaleUpper: toLocaleUpper\n                      ,toLocaleLower: toLocaleLower\n                      ,toCode: toCode\n                      ,fromCode: fromCode};\n   return _elm.Char.values;\n};\nElm.Color = Elm.Color || {};\nElm.Color.make = function (_elm) {\n   \"use strict\";\n   _elm.Color = _elm.Color || {};\n   if (_elm.Color.values)\n   return _elm.Color.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Color\",\n   $Basics = Elm.Basics.make(_elm);\n   var Radial = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"Radial\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var radial = Radial;\n   var Linear = F3(function (a,\n   b,\n   c) {\n      return {ctor: \"Linear\"\n             ,_0: a\n             ,_1: b\n             ,_2: c};\n   });\n   var linear = Linear;\n   var fmod = F2(function (f,n) {\n      return function () {\n         var integer = $Basics.floor(f);\n         return $Basics.toFloat(A2($Basics._op[\"%\"],\n         integer,\n         n)) + f - $Basics.toFloat(integer);\n      }();\n   });\n   var rgbToHsl = F3(function (red,\n   green,\n   blue) {\n      return function () {\n         var b = $Basics.toFloat(blue) / 255;\n         var g = $Basics.toFloat(green) / 255;\n         var r = $Basics.toFloat(red) / 255;\n         var cMax = A2($Basics.max,\n         A2($Basics.max,r,g),\n         b);\n         var cMin = A2($Basics.min,\n         A2($Basics.min,r,g),\n         b);\n         var c = cMax - cMin;\n         var lightness = (cMax + cMin) / 2;\n         var saturation = _U.eq(lightness,\n         0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n         var hue = $Basics.degrees(60) * (_U.eq(cMax,\n         r) ? A2(fmod,\n         (g - b) / c,\n         6) : _U.eq(cMax,\n         g) ? (b - r) / c + 2 : _U.eq(cMax,\n         b) ? (r - g) / c + 4 : _U.badIf($moduleName,\n         \"between lines 141 and 143\"));\n         return {ctor: \"_Tuple3\"\n                ,_0: hue\n                ,_1: saturation\n                ,_2: lightness};\n      }();\n   });\n   var hslToRgb = F3(function (hue,\n   saturation,\n   lightness) {\n      return function () {\n         var hue$ = hue / $Basics.degrees(60);\n         var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n         var x = chroma * (1 - $Basics.abs(A2(fmod,\n         hue$,\n         2) - 1));\n         var $ = _U.cmp(hue$,\n         0) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: 0\n                  ,_2: 0} : _U.cmp(hue$,\n         1) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: x\n                  ,_2: 0} : _U.cmp(hue$,\n         2) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: chroma\n                  ,_2: 0} : _U.cmp(hue$,\n         3) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: chroma\n                  ,_2: x} : _U.cmp(hue$,\n         4) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: x\n                  ,_2: chroma} : _U.cmp(hue$,\n         5) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: 0\n                  ,_2: chroma} : _U.cmp(hue$,\n         6) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: 0\n                  ,_2: x} : {ctor: \"_Tuple3\"\n                            ,_0: 0\n                            ,_1: 0\n                            ,_2: 0},\n         r = $._0,\n         g = $._1,\n         b = $._2;\n         var m = lightness - chroma / 2;\n         return {ctor: \"_Tuple3\"\n                ,_0: r + m\n                ,_1: g + m\n                ,_2: b + m};\n      }();\n   });\n   var toRgb = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\":\n            return function () {\n                 var $ = A3(hslToRgb,\n                 color._0,\n                 color._1,\n                 color._2),\n                 r = $._0,\n                 g = $._1,\n                 b = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,blue: $Basics.round(255 * b)\n                        ,green: $Basics.round(255 * g)\n                        ,red: $Basics.round(255 * r)};\n              }();\n            case \"RGBA\": return {_: {}\n                                ,alpha: color._3\n                                ,blue: color._2\n                                ,green: color._1\n                                ,red: color._0};}\n         _U.badCase($moduleName,\n         \"between lines 115 and 123\");\n      }();\n   };\n   var toHsl = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return {_: {}\n                              ,alpha: color._3\n                              ,hue: color._0\n                              ,lightness: color._2\n                              ,saturation: color._1};\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,hue: h\n                        ,lightness: l\n                        ,saturation: s};\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 105 and 112\");\n      }();\n   };\n   var HSLA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"HSLA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var hsla = F4(function (hue,\n   saturation,\n   lightness,\n   alpha) {\n      return A4(HSLA,\n      hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),\n      saturation,\n      lightness,\n      alpha);\n   });\n   var hsl = F3(function (hue,\n   saturation,\n   lightness) {\n      return A4(hsla,\n      hue,\n      saturation,\n      lightness,\n      1);\n   });\n   var complement = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return A4(hsla,\n              color._0 + $Basics.degrees(180),\n              color._1,\n              color._2,\n              color._3);\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return A4(hsla,\n                 h + $Basics.degrees(180),\n                 s,\n                 l,\n                 color._3);\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 96 and 102\");\n      }();\n   };\n   var grayscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var greyscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var RGBA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"RGBA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var rgba = RGBA;\n   var rgb = F3(function (r,g,b) {\n      return A4(RGBA,r,g,b,1);\n   });\n   var lightRed = A4(RGBA,\n   239,\n   41,\n   41,\n   1);\n   var red = A4(RGBA,204,0,0,1);\n   var darkRed = A4(RGBA,\n   164,\n   0,\n   0,\n   1);\n   var lightOrange = A4(RGBA,\n   252,\n   175,\n   62,\n   1);\n   var orange = A4(RGBA,\n   245,\n   121,\n   0,\n   1);\n   var darkOrange = A4(RGBA,\n   206,\n   92,\n   0,\n   1);\n   var lightYellow = A4(RGBA,\n   255,\n   233,\n   79,\n   1);\n   var yellow = A4(RGBA,\n   237,\n   212,\n   0,\n   1);\n   var darkYellow = A4(RGBA,\n   196,\n   160,\n   0,\n   1);\n   var lightGreen = A4(RGBA,\n   138,\n   226,\n   52,\n   1);\n   var green = A4(RGBA,\n   115,\n   210,\n   22,\n   1);\n   var darkGreen = A4(RGBA,\n   78,\n   154,\n   6,\n   1);\n   var lightBlue = A4(RGBA,\n   114,\n   159,\n   207,\n   1);\n   var blue = A4(RGBA,\n   52,\n   101,\n   164,\n   1);\n   var darkBlue = A4(RGBA,\n   32,\n   74,\n   135,\n   1);\n   var lightPurple = A4(RGBA,\n   173,\n   127,\n   168,\n   1);\n   var purple = A4(RGBA,\n   117,\n   80,\n   123,\n   1);\n   var darkPurple = A4(RGBA,\n   92,\n   53,\n   102,\n   1);\n   var lightBrown = A4(RGBA,\n   233,\n   185,\n   110,\n   1);\n   var brown = A4(RGBA,\n   193,\n   125,\n   17,\n   1);\n   var darkBrown = A4(RGBA,\n   143,\n   89,\n   2,\n   1);\n   var black = A4(RGBA,0,0,0,1);\n   var white = A4(RGBA,\n   255,\n   255,\n   255,\n   1);\n   var lightGrey = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var grey = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGrey = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightGray = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var gray = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGray = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightCharcoal = A4(RGBA,\n   136,\n   138,\n   133,\n   1);\n   var charcoal = A4(RGBA,\n   85,\n   87,\n   83,\n   1);\n   var darkCharcoal = A4(RGBA,\n   46,\n   52,\n   54,\n   1);\n   _elm.Color.values = {_op: _op\n                       ,RGBA: RGBA\n                       ,HSLA: HSLA\n                       ,rgba: rgba\n                       ,rgb: rgb\n                       ,hsla: hsla\n                       ,hsl: hsl\n                       ,grayscale: grayscale\n                       ,greyscale: greyscale\n                       ,complement: complement\n                       ,toHsl: toHsl\n                       ,toRgb: toRgb\n                       ,fmod: fmod\n                       ,rgbToHsl: rgbToHsl\n                       ,hslToRgb: hslToRgb\n                       ,Linear: Linear\n                       ,Radial: Radial\n                       ,linear: linear\n                       ,radial: radial\n                       ,lightRed: lightRed\n                       ,red: red\n                       ,darkRed: darkRed\n                       ,lightOrange: lightOrange\n                       ,orange: orange\n                       ,darkOrange: darkOrange\n                       ,lightYellow: lightYellow\n                       ,yellow: yellow\n                       ,darkYellow: darkYellow\n                       ,lightGreen: lightGreen\n                       ,green: green\n                       ,darkGreen: darkGreen\n                       ,lightBlue: lightBlue\n                       ,blue: blue\n                       ,darkBlue: darkBlue\n                       ,lightPurple: lightPurple\n                       ,purple: purple\n                       ,darkPurple: darkPurple\n                       ,lightBrown: lightBrown\n                       ,brown: brown\n                       ,darkBrown: darkBrown\n                       ,black: black\n                       ,white: white\n                       ,lightGrey: lightGrey\n                       ,grey: grey\n                       ,darkGrey: darkGrey\n                       ,lightGray: lightGray\n                       ,gray: gray\n                       ,darkGray: darkGray\n                       ,lightCharcoal: lightCharcoal\n                       ,charcoal: charcoal\n                       ,darkCharcoal: darkCharcoal};\n   return _elm.Color.values;\n};\nElm.Dict = Elm.Dict || {};\nElm.Dict.make = function (_elm) {\n   \"use strict\";\n   _elm.Dict = _elm.Dict || {};\n   if (_elm.Dict.values)\n   return _elm.Dict.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Dict\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm),\n   $String = Elm.String.make(_elm);\n   var foldr = F3(function (f,\n   acc,\n   t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            switch (t._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldr,\n              f,\n              A3(f,\n              t._1,\n              t._2,\n              A3(foldr,f,acc,t._4)),\n              t._3);}\n         _U.badCase($moduleName,\n         \"between lines 410 and 418\");\n      }();\n   });\n   var keys = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      keyList) {\n         return A2($List._op[\"::\"],\n         key,\n         keyList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var values = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      valueList) {\n         return A2($List._op[\"::\"],\n         value,\n         valueList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var toList = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,list) {\n         return A2($List._op[\"::\"],\n         {ctor: \"_Tuple2\"\n         ,_0: key\n         ,_1: value},\n         list);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var foldl = F3(function (f,\n   acc,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldl,\n              f,\n              A3(f,\n              dict._1,\n              dict._2,\n              A3(foldl,f,acc,dict._3)),\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 399 and 407\");\n      }();\n   });\n   var isBBlack = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\": return true;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"BBlack\": return true;}\n              break;}\n         return false;\n      }();\n   };\n   var showFlag = function (f) {\n      return function () {\n         switch (f.ctor)\n         {case \"Insert\": return \"Insert\";\n            case \"Remove\": return \"Remove\";\n            case \"Same\": return \"Same\";}\n         _U.badCase($moduleName,\n         \"between lines 175 and 181\");\n      }();\n   };\n   var Same = {ctor: \"Same\"};\n   var Remove = {ctor: \"Remove\"};\n   var Insert = {ctor: \"Insert\"};\n   var get = F2(function (targetKey,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Maybe.Nothing;}\n              break;\n            case \"RBNode\":\n            return function () {\n                 var _v29 = A2($Basics.compare,\n                 targetKey,\n                 dict._1);\n                 switch (_v29.ctor)\n                 {case \"EQ\":\n                    return $Maybe.Just(dict._2);\n                    case \"GT\": return A2(get,\n                      targetKey,\n                      dict._4);\n                    case \"LT\": return A2(get,\n                      targetKey,\n                      dict._3);}\n                 _U.badCase($moduleName,\n                 \"between lines 131 and 137\");\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 126 and 137\");\n      }();\n   });\n   var member = F2(function (key,\n   dict) {\n      return function () {\n         var _v30 = A2(get,key,dict);\n         switch (_v30.ctor)\n         {case \"Just\": return true;\n            case \"Nothing\": return false;}\n         _U.badCase($moduleName,\n         \"between lines 140 and 142\");\n      }();\n   });\n   var max = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"(max Empty) is not defined\");\n            case \"RBNode\":\n            switch (dict._4.ctor)\n              {case \"RBEmpty\":\n                 return {ctor: \"_Tuple2\"\n                        ,_0: dict._1\n                        ,_1: dict._2};}\n              return max(dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 100 and 123\");\n      }();\n   };\n   var min = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Native$Debug.crash(\"(min Empty) is not defined\");}\n              break;\n            case \"RBNode\":\n            switch (dict._3.ctor)\n              {case \"RBEmpty\":\n                 switch (dict._3._0.ctor)\n                   {case \"LBlack\":\n                      return {ctor: \"_Tuple2\"\n                             ,_0: dict._1\n                             ,_1: dict._2};}\n                   break;}\n              return min(dict._3);}\n         _U.badCase($moduleName,\n         \"between lines 87 and 95\");\n      }();\n   };\n   var RBEmpty = function (a) {\n      return {ctor: \"RBEmpty\"\n             ,_0: a};\n   };\n   var RBNode = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"RBNode\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var showLColor = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"LBBlack\":\n            return \"LBBlack\";\n            case \"LBlack\": return \"LBlack\";}\n         _U.badCase($moduleName,\n         \"between lines 70 and 72\");\n      }();\n   };\n   var LBBlack = {ctor: \"LBBlack\"};\n   var LBlack = {ctor: \"LBlack\"};\n   var empty = RBEmpty(LBlack);\n   var map = F2(function (f,dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              dict._0,\n              dict._1,\n              A2(f,dict._1,dict._2),\n              A2(map,f,dict._3),\n              A2(map,f,dict._4));}\n         _U.badCase($moduleName,\n         \"between lines 387 and 396\");\n      }();\n   });\n   var showNColor = function (c) {\n      return function () {\n         switch (c.ctor)\n         {case \"BBlack\": return \"BBlack\";\n            case \"Black\": return \"Black\";\n            case \"NBlack\": return \"NBlack\";\n            case \"Red\": return \"Red\";}\n         _U.badCase($moduleName,\n         \"between lines 56 and 60\");\n      }();\n   };\n   var reportRemBug = F4(function (msg,\n   c,\n   lgot,\n   rgot) {\n      return $Native$Debug.crash($String.concat(_L.fromArray([\"Internal red-black tree invariant violated, expected \"\n                                                             ,msg\n                                                             ,\" and got \"\n                                                             ,showNColor(c)\n                                                             ,\"/\"\n                                                             ,lgot\n                                                             ,\"/\"\n                                                             ,rgot\n                                                             ,\"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"])));\n   });\n   var NBlack = {ctor: \"NBlack\"};\n   var BBlack = {ctor: \"BBlack\"};\n   var Black = {ctor: \"Black\"};\n   var ensureBlackRoot = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return dict;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"Black\": return dict;\n                 case \"Red\": return A5(RBNode,\n                   Black,\n                   dict._1,\n                   dict._2,\n                   dict._3,\n                   dict._4);}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 147 and 159\");\n      }();\n   };\n   var blackish = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\": return true;\n            case \"RBNode\":\n            return _U.eq(t._0,\n              Black) || _U.eq(t._0,BBlack);}\n         _U.badCase($moduleName,\n         \"between lines 332 and 334\");\n      }();\n   };\n   var blacken = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return RBEmpty(LBlack);\n            case \"RBNode\": return A5(RBNode,\n              Black,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 371 and 373\");\n      }();\n   };\n   var Red = {ctor: \"Red\"};\n   var moreBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");\n            case \"Black\": return BBlack;\n            case \"NBlack\": return Red;\n            case \"Red\": return Black;}\n         _U.badCase($moduleName,\n         \"between lines 237 and 241\");\n      }();\n   };\n   var lessBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\": return Black;\n            case \"Black\": return Red;\n            case \"NBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");\n            case \"Red\": return NBlack;}\n         _U.badCase($moduleName,\n         \"between lines 246 and 250\");\n      }();\n   };\n   var lessBlackTree = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              lessBlack(dict._0),\n              dict._1,\n              dict._2,\n              dict._3,\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 255 and 257\");\n      }();\n   };\n   var redden = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n            case \"RBNode\": return A5(RBNode,\n              Red,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 379 and 384\");\n      }();\n   };\n   var balance_node = function (t) {\n      return function () {\n         var assemble = function (col) {\n            return function (xk) {\n               return function (xv) {\n                  return function (yk) {\n                     return function (yv) {\n                        return function (zk) {\n                           return function (zv) {\n                              return function (a) {\n                                 return function (b) {\n                                    return function (c) {\n                                       return function (d) {\n                                          return A5(RBNode,\n                                          lessBlack(col),\n                                          yk,\n                                          yv,\n                                          A5(RBNode,Black,xk,xv,a,b),\n                                          A5(RBNode,Black,zk,zv,c,d));\n                                       };\n                                    };\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n         return blackish(t) ? function () {\n            switch (t.ctor)\n            {case \"RBNode\":\n               switch (t._3.ctor)\n                 {case \"RBNode\":\n                    switch (t._3._0.ctor)\n                      {case \"Red\":\n                         switch (t._3._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._3._1)(t._3._3._2)(t._3._1)(t._3._2)(t._1)(t._2)(t._3._3._3)(t._3._3._4)(t._3._4)(t._4);}\n                                break;}\n                           switch (t._3._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._1)(t._3._2)(t._3._4._1)(t._3._4._2)(t._1)(t._2)(t._3._3)(t._3._4._3)(t._3._4._4)(t._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._4.ctor)\n                 {case \"RBNode\":\n                    switch (t._4._0.ctor)\n                      {case \"Red\":\n                         switch (t._4._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._3._1)(t._4._3._2)(t._4._1)(t._4._2)(t._3)(t._4._3._3)(t._4._3._4)(t._4._4);}\n                                break;}\n                           switch (t._4._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._1)(t._4._2)(t._4._4._1)(t._4._4._2)(t._3)(t._4._3)(t._4._4._3)(t._4._4._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._0.ctor)\n                 {case \"BBlack\":\n                    switch (t._4.ctor)\n                      {case \"RBNode\":\n                         switch (t._4._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._4._3.ctor)\n                                {case \"RBNode\":\n                                   switch (t._4._3._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._4._4.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._4._4._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._4._3._1,\n                                                       t._4._3._2,\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3,\n                                                       t._4._3._3),\n                                                       A5(balance,\n                                                       Black,\n                                                       t._4._1,\n                                                       t._4._2,\n                                                       t._4._3._4,\n                                                       redden(t._4._4)));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      switch (t._3.ctor)\n                      {case \"RBNode\":\n                         switch (t._3._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._3._4.ctor)\n                                {case \"RBNode\":\n                                   switch (t._3._4._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._3._3.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._3._3._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._3._4._1,\n                                                       t._3._4._2,\n                                                       A5(balance,\n                                                       Black,\n                                                       t._3._1,\n                                                       t._3._2,\n                                                       redden(t._3._3),\n                                                       t._3._4._3),\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3._4._4,\n                                                       t._4));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      break;}\n                 break;}\n            return t;\n         }() : t;\n      }();\n   };\n   var balance = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return balance_node(A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r));\n   });\n   var bubble = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,\n      moreBlack(c),\n      k,\n      v,\n      lessBlackTree(l),\n      lessBlackTree(r)) : A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r);\n   });\n   var remove_max = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return function () {\n         switch (r.ctor)\n         {case \"RBEmpty\": return A3(rem,\n              c,\n              l,\n              r);\n            case \"RBNode\": return A5(bubble,\n              c,\n              k,\n              v,\n              l,\n              A5(remove_max,\n              r._0,\n              r._1,\n              r._2,\n              r._3,\n              r._4));}\n         _U.badCase($moduleName,\n         \"between lines 316 and 321\");\n      }();\n   });\n   var rem = F3(function (c,l,r) {\n      return function () {\n         var _v169 = {ctor: \"_Tuple2\"\n                     ,_0: l\n                     ,_1: r};\n         switch (_v169.ctor)\n         {case \"_Tuple2\":\n            switch (_v169._0.ctor)\n              {case \"RBEmpty\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           switch (c.ctor)\n                           {case \"Black\":\n                              return RBEmpty(LBBlack);\n                              case \"Red\":\n                              return RBEmpty(LBlack);}\n                           _U.badCase($moduleName,\n                           \"between lines 275 and 279\");\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var _v191 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v191.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v191._0.ctor)\n                                {case \"Black\":\n                                   switch (_v191._1.ctor)\n                                     {case \"LBlack\":\n                                        switch (_v191._2.ctor)\n                                          {case \"Red\": return A5(RBNode,\n                                               Black,\n                                               _v169._1._1,\n                                               _v169._1._2,\n                                               _v169._1._3,\n                                               _v169._1._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/LBlack/Red\",\n                           c,\n                           showLColor(_v169._0._0),\n                           showNColor(_v169._1._0));\n                        }();}\n                   break;\n                 case \"RBNode\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           var _v195 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v195.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v195._0.ctor)\n                                {case \"Black\":\n                                   switch (_v195._1.ctor)\n                                     {case \"Red\":\n                                        switch (_v195._2.ctor)\n                                          {case \"LBlack\":\n                                             return A5(RBNode,\n                                               Black,\n                                               _v169._0._1,\n                                               _v169._0._2,\n                                               _v169._0._3,\n                                               _v169._0._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/Red/LBlack\",\n                           c,\n                           showNColor(_v169._0._0),\n                           showLColor(_v169._1._0));\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var l$ = A5(remove_max,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var r = A5(RBNode,\n                           _v169._1._0,\n                           _v169._1._1,\n                           _v169._1._2,\n                           _v169._1._3,\n                           _v169._1._4);\n                           var l = A5(RBNode,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var $ = max(l),\n                           k = $._0,\n                           v = $._1;\n                           return A5(bubble,c,k,v,l$,r);\n                        }();}\n                   break;}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 273 and 302\");\n      }();\n   });\n   var update = F3(function (k,\n   alter,\n   dict) {\n      return function () {\n         var up = function (dict) {\n            return function () {\n               switch (dict.ctor)\n               {case \"RBEmpty\":\n                  switch (dict._0.ctor)\n                    {case \"LBlack\":\n                       return function () {\n                            var _v206 = alter($Maybe.Nothing);\n                            switch (_v206.ctor)\n                            {case \"Just\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Insert\n                                      ,_1: A5(RBNode,\n                                      Red,\n                                      k,\n                                      _v206._0,\n                                      empty,\n                                      empty)};\n                               case \"Nothing\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Same\n                                      ,_1: empty};}\n                            _U.badCase($moduleName,\n                            \"between lines 187 and 191\");\n                         }();}\n                    break;\n                  case \"RBNode\":\n                  return function () {\n                       var _v208 = A2($Basics.compare,\n                       k,\n                       dict._1);\n                       switch (_v208.ctor)\n                       {case \"EQ\": return function () {\n                               var _v209 = alter($Maybe.Just(dict._2));\n                               switch (_v209.ctor)\n                               {case \"Just\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode,\n                                         dict._0,\n                                         dict._1,\n                                         _v209._0,\n                                         dict._3,\n                                         dict._4)};\n                                  case \"Nothing\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Remove\n                                         ,_1: A3(rem,\n                                         dict._0,\n                                         dict._3,\n                                         dict._4)};}\n                               _U.badCase($moduleName,\n                               \"between lines 194 and 199\");\n                            }();\n                          case \"GT\": return function () {\n                               var $ = up(dict._4),\n                               flag = $._0,\n                               newRight = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 208 and 213\");\n                               }();\n                            }();\n                          case \"LT\": return function () {\n                               var $ = up(dict._3),\n                               flag = $._0,\n                               newLeft = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 201 and 206\");\n                               }();\n                            }();}\n                       _U.badCase($moduleName,\n                       \"between lines 192 and 213\");\n                    }();}\n               _U.badCase($moduleName,\n               \"between lines 185 and 213\");\n            }();\n         };\n         var $ = up(dict),\n         flag = $._0,\n         updatedDict = $._1;\n         return function () {\n            switch (flag.ctor)\n            {case \"Insert\":\n               return ensureBlackRoot(updatedDict);\n               case \"Remove\":\n               return blacken(updatedDict);\n               case \"Same\":\n               return updatedDict;}\n            _U.badCase($moduleName,\n            \"between lines 215 and 221\");\n         }();\n      }();\n   });\n   var insert = F3(function (key,\n   value,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Just(value)),\n      dict);\n   });\n   var singleton = F2(function (key,\n   value) {\n      return A3(insert,\n      key,\n      value,\n      RBEmpty(LBlack));\n   });\n   var union = F2(function (t1,\n   t2) {\n      return A3(foldl,\n      insert,\n      t2,\n      t1);\n   });\n   var fromList = function (assocs) {\n      return A3($List.foldl,\n      F2(function (_v214,dict) {\n         return function () {\n            switch (_v214.ctor)\n            {case \"_Tuple2\":\n               return A3(insert,\n                 _v214._0,\n                 _v214._1,\n                 dict);}\n            _U.badCase($moduleName,\n            \"on line 459, column 38 to 59\");\n         }();\n      }),\n      empty,\n      assocs);\n   };\n   var filter = F2(function (predicate,\n   dictionary) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         dict) {\n            return A2(predicate,\n            key,\n            value) ? A3(insert,\n            key,\n            value,\n            dict) : dict;\n         });\n         return A3(foldl,\n         add,\n         empty,\n         dictionary);\n      }();\n   });\n   var intersect = F2(function (t1,\n   t2) {\n      return A2(filter,\n      F2(function (k,_v218) {\n         return function () {\n            return A2(member,k,t2);\n         }();\n      }),\n      t1);\n   });\n   var partition = F2(function (predicate,\n   dict) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         _v220) {\n            return function () {\n               switch (_v220.ctor)\n               {case \"_Tuple2\":\n                  return A2(predicate,\n                    key,\n                    value) ? {ctor: \"_Tuple2\"\n                             ,_0: A3(insert,\n                             key,\n                             value,\n                             _v220._0)\n                             ,_1: _v220._1} : {ctor: \"_Tuple2\"\n                                              ,_0: _v220._0\n                                              ,_1: A3(insert,\n                                              key,\n                                              value,\n                                              _v220._1)};}\n               _U.badCase($moduleName,\n               \"between lines 480 and 482\");\n            }();\n         });\n         return A3(foldl,\n         add,\n         {ctor: \"_Tuple2\"\n         ,_0: empty\n         ,_1: empty},\n         dict);\n      }();\n   });\n   var remove = F2(function (key,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Nothing),\n      dict);\n   });\n   var diff = F2(function (t1,t2) {\n      return A3(foldl,\n      F3(function (k,v,t) {\n         return A2(remove,k,t);\n      }),\n      t1,\n      t2);\n   });\n   _elm.Dict.values = {_op: _op\n                      ,empty: empty\n                      ,singleton: singleton\n                      ,insert: insert\n                      ,update: update\n                      ,get: get\n                      ,remove: remove\n                      ,member: member\n                      ,filter: filter\n                      ,partition: partition\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,map: map\n                      ,union: union\n                      ,intersect: intersect\n                      ,diff: diff\n                      ,keys: keys\n                      ,values: values\n                      ,toList: toList\n                      ,fromList: fromList};\n   return _elm.Dict.values;\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values)\n   return _elm.Graphics.Element.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Graphics.Element\",\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm);\n   var DOut = {ctor: \"DOut\"};\n   var outward = DOut;\n   var DIn = {ctor: \"DIn\"};\n   var inward = DIn;\n   var DRight = {ctor: \"DRight\"};\n   var right = DRight;\n   var DLeft = {ctor: \"DLeft\"};\n   var left = DLeft;\n   var DDown = {ctor: \"DDown\"};\n   var down = DDown;\n   var DUp = {ctor: \"DUp\"};\n   var up = DUp;\n   var Position = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,horizontal: a\n             ,vertical: b\n             ,x: c\n             ,y: d};\n   });\n   var Relative = function (a) {\n      return {ctor: \"Relative\"\n             ,_0: a};\n   };\n   var relative = Relative;\n   var Absolute = function (a) {\n      return {ctor: \"Absolute\"\n             ,_0: a};\n   };\n   var absolute = Absolute;\n   var N = {ctor: \"N\"};\n   var bottomLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var Z = {ctor: \"Z\"};\n   var middle = {_: {}\n                ,horizontal: Z\n                ,vertical: Z\n                ,x: Relative(0.5)\n                ,y: Relative(0.5)};\n   var midLeft = _U.replace([[\"horizontal\"\n                             ,N]\n                            ,[\"x\",Absolute(0)]],\n   middle);\n   var middleAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midBottomAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var P = {ctor: \"P\"};\n   var topLeft = {_: {}\n                 ,horizontal: N\n                 ,vertical: P\n                 ,x: Absolute(0)\n                 ,y: Absolute(0)};\n   var bottomLeft = _U.replace([[\"vertical\"\n                                ,N]],\n   topLeft);\n   var topRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   topLeft);\n   var bottomRight = _U.replace([[\"horizontal\"\n                                 ,P]],\n   bottomLeft);\n   var midRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   midLeft);\n   var midTop = _U.replace([[\"vertical\"\n                            ,P]\n                           ,[\"y\",Absolute(0)]],\n   middle);\n   var midBottom = _U.replace([[\"vertical\"\n                               ,N]],\n   midTop);\n   var topLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var topRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var bottomRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var midRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midTopAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var Tiled = {ctor: \"Tiled\"};\n   var Cropped = function (a) {\n      return {ctor: \"Cropped\"\n             ,_0: a};\n   };\n   var Fitted = {ctor: \"Fitted\"};\n   var Plain = {ctor: \"Plain\"};\n   var Custom = {ctor: \"Custom\"};\n   var RawHtml = {ctor: \"RawHtml\"};\n   var Spacer = {ctor: \"Spacer\"};\n   var Flow = F2(function (a,b) {\n      return {ctor: \"Flow\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Container = F2(function (a,\n   b) {\n      return {ctor: \"Container\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Image = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"Image\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var link = F2(function (href,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"href\"\n                                    ,href]],\n                p)};\n      }();\n   });\n   var tag = F2(function (name,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"tag\"\n                                    ,name]],\n                p)};\n      }();\n   });\n   var color = F2(function (c,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"color\"\n                                    ,$Maybe.Just(c)]],\n                p)};\n      }();\n   });\n   var opacity = F2(function (o,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"opacity\"\n                                    ,o]],\n                p)};\n      }();\n   });\n   var height = F2(function (nh,\n   e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v0 = e.element;\n            switch (_v0.ctor)\n            {case \"Image\":\n               return _U.replace([[\"width\"\n                                  ,$Basics.round($Basics.toFloat(_v0._1) / $Basics.toFloat(_v0._2) * $Basics.toFloat(nh))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"height\"\n                                    ,nh]],\n                p)};\n      }();\n   });\n   var width = F2(function (nw,e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v5 = e.element;\n            switch (_v5.ctor)\n            {case \"Image\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.round($Basics.toFloat(_v5._2) / $Basics.toFloat(_v5._1) * $Basics.toFloat(nw))]],\n                 p);\n               case \"RawHtml\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.snd(A2($Native$Graphics$Element.htmlHeight,\n                                  nw,\n                                  e.element))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"width\"\n                                    ,nw]],\n                props)};\n      }();\n   });\n   var size = F3(function (w,h,e) {\n      return A2(height,\n      h,\n      A2(width,w,e));\n   });\n   var sizeOf = function (e) {\n      return {ctor: \"_Tuple2\"\n             ,_0: e.props.width\n             ,_1: e.props.height};\n   };\n   var heightOf = function (e) {\n      return e.props.height;\n   };\n   var widthOf = function (e) {\n      return e.props.width;\n   };\n   var Element = F2(function (a,\n   b) {\n      return {_: {}\n             ,element: b\n             ,props: a};\n   });\n   var Properties = F9(function (a,\n   b,\n   c,\n   d,\n   e,\n   f,\n   g,\n   h,\n   i) {\n      return {_: {}\n             ,click: i\n             ,color: e\n             ,height: c\n             ,hover: h\n             ,href: f\n             ,id: a\n             ,opacity: d\n             ,tag: g\n             ,width: b};\n   });\n   var newElement = F3(function (w,\n   h,\n   e) {\n      return {_: {}\n             ,element: e\n             ,props: A9(Properties,\n             $Native$Graphics$Element.guid({ctor: \"_Tuple0\"}),\n             w,\n             h,\n             1,\n             $Maybe.Nothing,\n             \"\",\n             \"\",\n             {ctor: \"_Tuple0\"},\n             {ctor: \"_Tuple0\"})};\n   });\n   var image = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Plain,w,h,src));\n   });\n   var fittedImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Fitted,w,h,src));\n   });\n   var croppedImage = F4(function (pos,\n   w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Cropped(pos),w,h,src));\n   });\n   var tiledImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Tiled,w,h,src));\n   });\n   var container = F4(function (w,\n   h,\n   pos,\n   e) {\n      return A3(newElement,\n      w,\n      h,\n      A2(Container,pos,e));\n   });\n   var spacer = F2(function (w,h) {\n      return A3(newElement,\n      w,\n      h,\n      Spacer);\n   });\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,\n   es) {\n      return function () {\n         var newFlow = F2(function (w,\n         h) {\n            return A3(newElement,\n            w,\n            h,\n            A2(Flow,dir,es));\n         });\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return _U.eq(es,\n         _L.fromArray([])) ? empty : function () {\n            switch (dir.ctor)\n            {case \"DDown\":\n               return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));\n               case \"DIn\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DLeft\": return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DOut\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DRight\":\n               return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DUp\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));}\n            _U.badCase($moduleName,\n            \"between lines 280 and 291\");\n         }();\n      }();\n   });\n   var above = F2(function (hi,\n   lo) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var below = F2(function (lo,\n   hi) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var beside = F2(function (lft,\n   rht) {\n      return A3(newElement,\n      widthOf(lft) + widthOf(rht),\n      A2($Basics.max,\n      heightOf(lft),\n      heightOf(rht)),\n      A2(Flow,\n      right,\n      _L.fromArray([lft,rht])));\n   });\n   var layers = function (es) {\n      return function () {\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return A3(newElement,\n         $List.maximum(ws),\n         $List.maximum(hs),\n         A2(Flow,DOut,es));\n      }();\n   };\n   _elm.Graphics.Element.values = {_op: _op\n                                  ,Properties: Properties\n                                  ,Element: Element\n                                  ,empty: empty\n                                  ,widthOf: widthOf\n                                  ,heightOf: heightOf\n                                  ,sizeOf: sizeOf\n                                  ,width: width\n                                  ,height: height\n                                  ,size: size\n                                  ,opacity: opacity\n                                  ,color: color\n                                  ,tag: tag\n                                  ,link: link\n                                  ,newElement: newElement\n                                  ,Image: Image\n                                  ,Container: Container\n                                  ,Flow: Flow\n                                  ,Spacer: Spacer\n                                  ,RawHtml: RawHtml\n                                  ,Custom: Custom\n                                  ,Plain: Plain\n                                  ,Fitted: Fitted\n                                  ,Cropped: Cropped\n                                  ,Tiled: Tiled\n                                  ,image: image\n                                  ,fittedImage: fittedImage\n                                  ,croppedImage: croppedImage\n                                  ,tiledImage: tiledImage\n                                  ,P: P\n                                  ,Z: Z\n                                  ,N: N\n                                  ,Absolute: Absolute\n                                  ,Relative: Relative\n                                  ,Position: Position\n                                  ,container: container\n                                  ,spacer: spacer\n                                  ,DUp: DUp\n                                  ,DDown: DDown\n                                  ,DLeft: DLeft\n                                  ,DRight: DRight\n                                  ,DIn: DIn\n                                  ,DOut: DOut\n                                  ,flow: flow\n                                  ,above: above\n                                  ,below: below\n                                  ,beside: beside\n                                  ,layers: layers\n                                  ,absolute: absolute\n                                  ,relative: relative\n                                  ,middle: middle\n                                  ,topLeft: topLeft\n                                  ,topRight: topRight\n                                  ,bottomLeft: bottomLeft\n                                  ,bottomRight: bottomRight\n                                  ,midLeft: midLeft\n                                  ,midRight: midRight\n                                  ,midTop: midTop\n                                  ,midBottom: midBottom\n                                  ,middleAt: middleAt\n                                  ,topLeftAt: topLeftAt\n                                  ,topRightAt: topRightAt\n                                  ,bottomLeftAt: bottomLeftAt\n                                  ,bottomRightAt: bottomRightAt\n                                  ,midLeftAt: midLeftAt\n                                  ,midRightAt: midRightAt\n                                  ,midTopAt: midTopAt\n                                  ,midBottomAt: midBottomAt\n                                  ,up: up\n                                  ,down: down\n                                  ,left: left\n                                  ,right: right\n                                  ,inward: inward\n                                  ,outward: outward};\n   return _elm.Graphics.Element.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values)\n   return _elm.Html.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node(\"body\");\n   var section = node(\"section\");\n   var nav = node(\"nav\");\n   var article = node(\"article\");\n   var aside = node(\"aside\");\n   var h1 = node(\"h1\");\n   var h2 = node(\"h2\");\n   var h3 = node(\"h3\");\n   var h4 = node(\"h4\");\n   var h5 = node(\"h5\");\n   var h6 = node(\"h6\");\n   var header = node(\"header\");\n   var footer = node(\"footer\");\n   var address = node(\"address\");\n   var main$ = node(\"main\");\n   var p = node(\"p\");\n   var hr = node(\"hr\");\n   var pre = node(\"pre\");\n   var blockquote = node(\"blockquote\");\n   var ol = node(\"ol\");\n   var ul = node(\"ul\");\n   var li = node(\"li\");\n   var dl = node(\"dl\");\n   var dt = node(\"dt\");\n   var dd = node(\"dd\");\n   var figure = node(\"figure\");\n   var figcaption = node(\"figcaption\");\n   var div = node(\"div\");\n   var a = node(\"a\");\n   var em = node(\"em\");\n   var strong = node(\"strong\");\n   var small = node(\"small\");\n   var s = node(\"s\");\n   var cite = node(\"cite\");\n   var q = node(\"q\");\n   var dfn = node(\"dfn\");\n   var abbr = node(\"abbr\");\n   var time = node(\"time\");\n   var code = node(\"code\");\n   var $var = node(\"var\");\n   var samp = node(\"samp\");\n   var kbd = node(\"kbd\");\n   var sub = node(\"sub\");\n   var sup = node(\"sup\");\n   var i = node(\"i\");\n   var b = node(\"b\");\n   var u = node(\"u\");\n   var mark = node(\"mark\");\n   var ruby = node(\"ruby\");\n   var rt = node(\"rt\");\n   var rp = node(\"rp\");\n   var bdi = node(\"bdi\");\n   var bdo = node(\"bdo\");\n   var span = node(\"span\");\n   var br = node(\"br\");\n   var wbr = node(\"wbr\");\n   var ins = node(\"ins\");\n   var del = node(\"del\");\n   var img = node(\"img\");\n   var iframe = node(\"iframe\");\n   var embed = node(\"embed\");\n   var object = node(\"object\");\n   var param = node(\"param\");\n   var video = node(\"video\");\n   var audio = node(\"audio\");\n   var source = node(\"source\");\n   var track = node(\"track\");\n   var canvas = node(\"canvas\");\n   var svg = node(\"svg\");\n   var math = node(\"math\");\n   var table = node(\"table\");\n   var caption = node(\"caption\");\n   var colgroup = node(\"colgroup\");\n   var col = node(\"col\");\n   var tbody = node(\"tbody\");\n   var thead = node(\"thead\");\n   var tfoot = node(\"tfoot\");\n   var tr = node(\"tr\");\n   var td = node(\"td\");\n   var th = node(\"th\");\n   var form = node(\"form\");\n   var fieldset = node(\"fieldset\");\n   var legend = node(\"legend\");\n   var label = node(\"label\");\n   var input = node(\"input\");\n   var button = node(\"button\");\n   var select = node(\"select\");\n   var datalist = node(\"datalist\");\n   var optgroup = node(\"optgroup\");\n   var option = node(\"option\");\n   var textarea = node(\"textarea\");\n   var keygen = node(\"keygen\");\n   var output = node(\"output\");\n   var progress = node(\"progress\");\n   var meter = node(\"meter\");\n   var details = node(\"details\");\n   var summary = node(\"summary\");\n   var menuitem = node(\"menuitem\");\n   var menu = node(\"menu\");\n   _elm.Html.values = {_op: _op\n                      ,node: node\n                      ,text: text\n                      ,toElement: toElement\n                      ,fromElement: fromElement\n                      ,body: body\n                      ,section: section\n                      ,nav: nav\n                      ,article: article\n                      ,aside: aside\n                      ,h1: h1\n                      ,h2: h2\n                      ,h3: h3\n                      ,h4: h4\n                      ,h5: h5\n                      ,h6: h6\n                      ,header: header\n                      ,footer: footer\n                      ,address: address\n                      ,main$: main$\n                      ,p: p\n                      ,hr: hr\n                      ,pre: pre\n                      ,blockquote: blockquote\n                      ,ol: ol\n                      ,ul: ul\n                      ,li: li\n                      ,dl: dl\n                      ,dt: dt\n                      ,dd: dd\n                      ,figure: figure\n                      ,figcaption: figcaption\n                      ,div: div\n                      ,a: a\n                      ,em: em\n                      ,strong: strong\n                      ,small: small\n                      ,s: s\n                      ,cite: cite\n                      ,q: q\n                      ,dfn: dfn\n                      ,abbr: abbr\n                      ,time: time\n                      ,code: code\n                      ,$var: $var\n                      ,samp: samp\n                      ,kbd: kbd\n                      ,sub: sub\n                      ,sup: sup\n                      ,i: i\n                      ,b: b\n                      ,u: u\n                      ,mark: mark\n                      ,ruby: ruby\n                      ,rt: rt\n                      ,rp: rp\n                      ,bdi: bdi\n                      ,bdo: bdo\n                      ,span: span\n                      ,br: br\n                      ,wbr: wbr\n                      ,ins: ins\n                      ,del: del\n                      ,img: img\n                      ,iframe: iframe\n                      ,embed: embed\n                      ,object: object\n                      ,param: param\n                      ,video: video\n                      ,audio: audio\n                      ,source: source\n                      ,track: track\n                      ,canvas: canvas\n                      ,svg: svg\n                      ,math: math\n                      ,table: table\n                      ,caption: caption\n                      ,colgroup: colgroup\n                      ,col: col\n                      ,tbody: tbody\n                      ,thead: thead\n                      ,tfoot: tfoot\n                      ,tr: tr\n                      ,td: td\n                      ,th: th\n                      ,form: form\n                      ,fieldset: fieldset\n                      ,legend: legend\n                      ,label: label\n                      ,input: input\n                      ,button: button\n                      ,select: select\n                      ,datalist: datalist\n                      ,optgroup: optgroup\n                      ,option: option\n                      ,textarea: textarea\n                      ,keygen: keygen\n                      ,output: output\n                      ,progress: progress\n                      ,meter: meter\n                      ,details: details\n                      ,summary: summary\n                      ,menuitem: menuitem\n                      ,menu: menu};\n   return _elm.Html.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values)\n   return _elm.Html.Attributes.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Attributes\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,\n   string) {\n      return A2(property,\n      name,\n      $Json$Encode.string(string));\n   });\n   var $class = function (name) {\n      return A2(stringProperty,\n      \"className\",\n      name);\n   };\n   var id = function (name) {\n      return A2(stringProperty,\n      \"id\",\n      name);\n   };\n   var title = function (name) {\n      return A2(stringProperty,\n      \"title\",\n      name);\n   };\n   var accesskey = function ($char) {\n      return A2(stringProperty,\n      \"accesskey\",\n      $String.fromList(_L.fromArray([$char])));\n   };\n   var contextmenu = function (value) {\n      return A2(stringProperty,\n      \"contextmenu\",\n      value);\n   };\n   var dir = function (value) {\n      return A2(stringProperty,\n      \"dir\",\n      value);\n   };\n   var draggable = function (value) {\n      return A2(stringProperty,\n      \"draggable\",\n      value);\n   };\n   var dropzone = function (value) {\n      return A2(stringProperty,\n      \"dropzone\",\n      value);\n   };\n   var itemprop = function (value) {\n      return A2(stringProperty,\n      \"itemprop\",\n      value);\n   };\n   var lang = function (value) {\n      return A2(stringProperty,\n      \"lang\",\n      value);\n   };\n   var tabindex = function (n) {\n      return A2(stringProperty,\n      \"tabIndex\",\n      $Basics.toString(n));\n   };\n   var charset = function (value) {\n      return A2(stringProperty,\n      \"charset\",\n      value);\n   };\n   var content = function (value) {\n      return A2(stringProperty,\n      \"content\",\n      value);\n   };\n   var httpEquiv = function (value) {\n      return A2(stringProperty,\n      \"httpEquiv\",\n      value);\n   };\n   var language = function (value) {\n      return A2(stringProperty,\n      \"language\",\n      value);\n   };\n   var src = function (value) {\n      return A2(stringProperty,\n      \"src\",\n      value);\n   };\n   var height = function (value) {\n      return A2(stringProperty,\n      \"height\",\n      $Basics.toString(value));\n   };\n   var width = function (value) {\n      return A2(stringProperty,\n      \"width\",\n      $Basics.toString(value));\n   };\n   var alt = function (value) {\n      return A2(stringProperty,\n      \"alt\",\n      value);\n   };\n   var poster = function (value) {\n      return A2(stringProperty,\n      \"poster\",\n      value);\n   };\n   var kind = function (value) {\n      return A2(stringProperty,\n      \"kind\",\n      value);\n   };\n   var srclang = function (value) {\n      return A2(stringProperty,\n      \"srclang\",\n      value);\n   };\n   var sandbox = function (value) {\n      return A2(stringProperty,\n      \"sandbox\",\n      value);\n   };\n   var srcdoc = function (value) {\n      return A2(stringProperty,\n      \"srcdoc\",\n      value);\n   };\n   var type$ = function (value) {\n      return A2(stringProperty,\n      \"type\",\n      value);\n   };\n   var value = function (value) {\n      return A2(stringProperty,\n      \"value\",\n      value);\n   };\n   var placeholder = function (value) {\n      return A2(stringProperty,\n      \"placeholder\",\n      value);\n   };\n   var accept = function (value) {\n      return A2(stringProperty,\n      \"accept\",\n      value);\n   };\n   var acceptCharset = function (value) {\n      return A2(stringProperty,\n      \"acceptCharset\",\n      value);\n   };\n   var action = function (value) {\n      return A2(stringProperty,\n      \"action\",\n      value);\n   };\n   var autocomplete = function (bool) {\n      return A2(stringProperty,\n      \"autocomplete\",\n      bool ? \"on\" : \"off\");\n   };\n   var autosave = function (value) {\n      return A2(stringProperty,\n      \"autosave\",\n      value);\n   };\n   var enctype = function (value) {\n      return A2(stringProperty,\n      \"enctype\",\n      value);\n   };\n   var formaction = function (value) {\n      return A2(stringProperty,\n      \"formaction\",\n      value);\n   };\n   var list = function (value) {\n      return A2(stringProperty,\n      \"list\",\n      value);\n   };\n   var maxlength = function (n) {\n      return A2(stringProperty,\n      \"maxLength\",\n      $Basics.toString(n));\n   };\n   var method = function (value) {\n      return A2(stringProperty,\n      \"method\",\n      value);\n   };\n   var name = function (value) {\n      return A2(stringProperty,\n      \"name\",\n      value);\n   };\n   var pattern = function (value) {\n      return A2(stringProperty,\n      \"pattern\",\n      value);\n   };\n   var size = function (n) {\n      return A2(stringProperty,\n      \"size\",\n      $Basics.toString(n));\n   };\n   var $for = function (value) {\n      return A2(stringProperty,\n      \"htmlFor\",\n      value);\n   };\n   var form = function (value) {\n      return A2(stringProperty,\n      \"form\",\n      value);\n   };\n   var max = function (value) {\n      return A2(stringProperty,\n      \"max\",\n      value);\n   };\n   var min = function (value) {\n      return A2(stringProperty,\n      \"min\",\n      value);\n   };\n   var step = function (n) {\n      return A2(stringProperty,\n      \"step\",\n      $Basics.toString(n));\n   };\n   var cols = function (n) {\n      return A2(stringProperty,\n      \"cols\",\n      $Basics.toString(n));\n   };\n   var rows = function (n) {\n      return A2(stringProperty,\n      \"rows\",\n      $Basics.toString(n));\n   };\n   var wrap = function (value) {\n      return A2(stringProperty,\n      \"wrap\",\n      value);\n   };\n   var ismap = function (value) {\n      return A2(stringProperty,\n      \"ismap\",\n      value);\n   };\n   var usemap = function (value) {\n      return A2(stringProperty,\n      \"usemap\",\n      value);\n   };\n   var shape = function (value) {\n      return A2(stringProperty,\n      \"shape\",\n      value);\n   };\n   var coords = function (value) {\n      return A2(stringProperty,\n      \"coords\",\n      value);\n   };\n   var challenge = function (value) {\n      return A2(stringProperty,\n      \"challenge\",\n      value);\n   };\n   var keytype = function (value) {\n      return A2(stringProperty,\n      \"keytype\",\n      value);\n   };\n   var align = function (value) {\n      return A2(stringProperty,\n      \"align\",\n      value);\n   };\n   var cite = function (value) {\n      return A2(stringProperty,\n      \"cite\",\n      value);\n   };\n   var href = function (value) {\n      return A2(stringProperty,\n      \"href\",\n      value);\n   };\n   var target = function (value) {\n      return A2(stringProperty,\n      \"target\",\n      value);\n   };\n   var downloadAs = function (value) {\n      return A2(stringProperty,\n      \"download\",\n      value);\n   };\n   var hreflang = function (value) {\n      return A2(stringProperty,\n      \"hreflang\",\n      value);\n   };\n   var media = function (value) {\n      return A2(stringProperty,\n      \"media\",\n      value);\n   };\n   var ping = function (value) {\n      return A2(stringProperty,\n      \"ping\",\n      value);\n   };\n   var rel = function (value) {\n      return A2(stringProperty,\n      \"rel\",\n      value);\n   };\n   var datetime = function (value) {\n      return A2(stringProperty,\n      \"datetime\",\n      value);\n   };\n   var pubdate = function (value) {\n      return A2(stringProperty,\n      \"pubdate\",\n      value);\n   };\n   var start = function (n) {\n      return A2(stringProperty,\n      \"start\",\n      $Basics.toString(n));\n   };\n   var colspan = function (value) {\n      return A2(stringProperty,\n      \"colSpan\",\n      value);\n   };\n   var headers = function (value) {\n      return A2(stringProperty,\n      \"headers\",\n      value);\n   };\n   var rowspan = function (value) {\n      return A2(stringProperty,\n      \"rowSpan\",\n      value);\n   };\n   var scope = function (value) {\n      return A2(stringProperty,\n      \"scope\",\n      value);\n   };\n   var manifest = function (value) {\n      return A2(stringProperty,\n      \"manifest\",\n      value);\n   };\n   var boolProperty = F2(function (name,\n   bool) {\n      return A2(property,\n      name,\n      $Json$Encode.bool(bool));\n   });\n   var hidden = function (bool) {\n      return A2(boolProperty,\n      \"hidden\",\n      bool);\n   };\n   var contenteditable = function (bool) {\n      return A2(boolProperty,\n      \"contentEditable\",\n      bool);\n   };\n   var spellcheck = function (bool) {\n      return A2(boolProperty,\n      \"spellcheck\",\n      bool);\n   };\n   var async = function (bool) {\n      return A2(boolProperty,\n      \"async\",\n      bool);\n   };\n   var defer = function (bool) {\n      return A2(boolProperty,\n      \"defer\",\n      bool);\n   };\n   var scoped = function (bool) {\n      return A2(boolProperty,\n      \"scoped\",\n      bool);\n   };\n   var autoplay = function (bool) {\n      return A2(boolProperty,\n      \"autoplay\",\n      bool);\n   };\n   var controls = function (bool) {\n      return A2(boolProperty,\n      \"controls\",\n      bool);\n   };\n   var loop = function (bool) {\n      return A2(boolProperty,\n      \"loop\",\n      bool);\n   };\n   var preload = function (bool) {\n      return A2(boolProperty,\n      \"preload\",\n      bool);\n   };\n   var $default = function (bool) {\n      return A2(boolProperty,\n      \"default\",\n      bool);\n   };\n   var seamless = function (bool) {\n      return A2(boolProperty,\n      \"seamless\",\n      bool);\n   };\n   var checked = function (bool) {\n      return A2(boolProperty,\n      \"checked\",\n      bool);\n   };\n   var selected = function (bool) {\n      return A2(boolProperty,\n      \"selected\",\n      bool);\n   };\n   var autofocus = function (bool) {\n      return A2(boolProperty,\n      \"autofocus\",\n      bool);\n   };\n   var disabled = function (bool) {\n      return A2(boolProperty,\n      \"disabled\",\n      bool);\n   };\n   var multiple = function (bool) {\n      return A2(boolProperty,\n      \"multiple\",\n      bool);\n   };\n   var novalidate = function (bool) {\n      return A2(boolProperty,\n      \"novalidate\",\n      bool);\n   };\n   var readonly = function (bool) {\n      return A2(boolProperty,\n      \"readonly\",\n      bool);\n   };\n   var required = function (bool) {\n      return A2(boolProperty,\n      \"required\",\n      bool);\n   };\n   var download = function (bool) {\n      return A2(boolProperty,\n      \"download\",\n      bool);\n   };\n   var reversed = function (bool) {\n      return A2(boolProperty,\n      \"reversed\",\n      bool);\n   };\n   var style = function (props) {\n      return property(\"style\")($Json$Encode.object($List.map(function (_v0) {\n         return function () {\n            switch (_v0.ctor)\n            {case \"_Tuple2\":\n               return {ctor: \"_Tuple2\"\n                      ,_0: _v0._0\n                      ,_1: $Json$Encode.string(_v0._1)};}\n            _U.badCase($moduleName,\n            \"on line 136, column 35 to 57\");\n         }();\n      })(props)));\n   };\n   var key = function (k) {\n      return A2(stringProperty,\n      \"key\",\n      k);\n   };\n   _elm.Html.Attributes.values = {_op: _op\n                                 ,key: key\n                                 ,style: style\n                                 ,property: property\n                                 ,stringProperty: stringProperty\n                                 ,boolProperty: boolProperty\n                                 ,$class: $class\n                                 ,hidden: hidden\n                                 ,id: id\n                                 ,title: title\n                                 ,accesskey: accesskey\n                                 ,contenteditable: contenteditable\n                                 ,contextmenu: contextmenu\n                                 ,dir: dir\n                                 ,draggable: draggable\n                                 ,dropzone: dropzone\n                                 ,itemprop: itemprop\n                                 ,lang: lang\n                                 ,spellcheck: spellcheck\n                                 ,tabindex: tabindex\n                                 ,async: async\n                                 ,charset: charset\n                                 ,content: content\n                                 ,defer: defer\n                                 ,httpEquiv: httpEquiv\n                                 ,language: language\n                                 ,scoped: scoped\n                                 ,src: src\n                                 ,height: height\n                                 ,width: width\n                                 ,alt: alt\n                                 ,autoplay: autoplay\n                                 ,controls: controls\n                                 ,loop: loop\n                                 ,preload: preload\n                                 ,poster: poster\n                                 ,$default: $default\n                                 ,kind: kind\n                                 ,srclang: srclang\n                                 ,sandbox: sandbox\n                                 ,seamless: seamless\n                                 ,srcdoc: srcdoc\n                                 ,type$: type$\n                                 ,value: value\n                                 ,checked: checked\n                                 ,placeholder: placeholder\n                                 ,selected: selected\n                                 ,accept: accept\n                                 ,acceptCharset: acceptCharset\n                                 ,action: action\n                                 ,autocomplete: autocomplete\n                                 ,autofocus: autofocus\n                                 ,autosave: autosave\n                                 ,disabled: disabled\n                                 ,enctype: enctype\n                                 ,formaction: formaction\n                                 ,list: list\n                                 ,maxlength: maxlength\n                                 ,method: method\n                                 ,multiple: multiple\n                                 ,name: name\n                                 ,novalidate: novalidate\n                                 ,pattern: pattern\n                                 ,readonly: readonly\n                                 ,required: required\n                                 ,size: size\n                                 ,$for: $for\n                                 ,form: form\n                                 ,max: max\n                                 ,min: min\n                                 ,step: step\n                                 ,cols: cols\n                                 ,rows: rows\n                                 ,wrap: wrap\n                                 ,ismap: ismap\n                                 ,usemap: usemap\n                                 ,shape: shape\n                                 ,coords: coords\n                                 ,challenge: challenge\n                                 ,keytype: keytype\n                                 ,align: align\n                                 ,cite: cite\n                                 ,href: href\n                                 ,target: target\n                                 ,download: download\n                                 ,downloadAs: downloadAs\n                                 ,hreflang: hreflang\n                                 ,media: media\n                                 ,ping: ping\n                                 ,rel: rel\n                                 ,datetime: datetime\n                                 ,pubdate: pubdate\n                                 ,reversed: reversed\n                                 ,start: start\n                                 ,colspan: colspan\n                                 ,headers: headers\n                                 ,rowspan: rowspan\n                                 ,scope: scope\n                                 ,manifest: manifest};\n   return _elm.Html.Attributes.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Events = Elm.Html.Events || {};\nElm.Html.Events.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Events = _elm.Html.Events || {};\n   if (_elm.Html.Events.values)\n   return _elm.Html.Events.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Events\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var keyCode = A2($Json$Decode._op[\":=\"],\n   \"keyCode\",\n   $Json$Decode.$int);\n   var targetChecked = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"checked\"]),\n   $Json$Decode.bool);\n   var targetValue = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"value\"]),\n   $Json$Decode.string);\n   var on = $VirtualDom.on;\n   var messageOn = F2(function (name,\n   msg) {\n      return A3(on,\n      name,\n      $Json$Decode.value,\n      $Basics.always(msg));\n   });\n   var onClick = messageOn(\"click\");\n   var onDoubleClick = messageOn(\"dblclick\");\n   var onMouseMove = messageOn(\"mousemove\");\n   var onMouseDown = messageOn(\"mousedown\");\n   var onMouseUp = messageOn(\"mouseup\");\n   var onMouseEnter = messageOn(\"mouseenter\");\n   var onMouseLeave = messageOn(\"mouseleave\");\n   var onMouseOver = messageOn(\"mouseover\");\n   var onMouseOut = messageOn(\"mouseout\");\n   var onBlur = messageOn(\"blur\");\n   var onFocus = messageOn(\"focus\");\n   var onSubmit = messageOn(\"submit\");\n   var onKey = function (name) {\n      return A2(on,name,keyCode);\n   };\n   var onKeyUp = onKey(\"keyup\");\n   var onKeyDown = onKey(\"keydown\");\n   var onKeyPress = onKey(\"keypress\");\n   _elm.Html.Events.values = {_op: _op\n                             ,on: on\n                             ,targetValue: targetValue\n                             ,targetChecked: targetChecked\n                             ,keyCode: keyCode\n                             ,messageOn: messageOn\n                             ,onClick: onClick\n                             ,onDoubleClick: onDoubleClick\n                             ,onMouseMove: onMouseMove\n                             ,onMouseDown: onMouseDown\n                             ,onMouseUp: onMouseUp\n                             ,onMouseEnter: onMouseEnter\n                             ,onMouseLeave: onMouseLeave\n                             ,onMouseOver: onMouseOver\n                             ,onMouseOut: onMouseOut\n                             ,onKey: onKey\n                             ,onKeyUp: onKeyUp\n                             ,onKeyDown: onKeyDown\n                             ,onKeyPress: onKeyPress\n                             ,onBlur: onBlur\n                             ,onFocus: onFocus\n                             ,onSubmit: onSubmit};\n   return _elm.Html.Events.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Lazy = Elm.Html.Lazy || {};\nElm.Html.Lazy.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Lazy = _elm.Html.Lazy || {};\n   if (_elm.Html.Lazy.values)\n   return _elm.Html.Lazy.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Lazy\",\n   $Html = Elm.Html.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var lazy3 = $VirtualDom.lazy3;\n   var lazy2 = $VirtualDom.lazy2;\n   var lazy = $VirtualDom.lazy;\n   _elm.Html.Lazy.values = {_op: _op\n                           ,lazy: lazy\n                           ,lazy2: lazy2\n                           ,lazy3: lazy3};\n   return _elm.Html.Lazy.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values)\n   return _elm.Json.Decode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Decode\",\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[\":=\"] = $Native$Json.decodeField;\n   var at = F2(function (fields,\n   decoder) {\n      return A3($List.foldr,\n      F2(function (x,y) {\n         return A2(_op[\":=\"],x,y);\n      }),\n      decoder,\n      fields);\n   });\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {\n      return A2(map,\n      $Dict.fromList,\n      keyValuePairs(decoder));\n   };\n   var Decoder = {ctor: \"Decoder\"};\n   _elm.Json.Decode.values = {_op: _op\n                             ,Decoder: Decoder\n                             ,map: map\n                             ,decodeString: decodeString\n                             ,at: at\n                             ,object1: object1\n                             ,object2: object2\n                             ,object3: object3\n                             ,object4: object4\n                             ,object5: object5\n                             ,object6: object6\n                             ,object7: object7\n                             ,object8: object8\n                             ,keyValuePairs: keyValuePairs\n                             ,dict: dict\n                             ,oneOf: oneOf\n                             ,string: string\n                             ,$float: $float\n                             ,$int: $int\n                             ,bool: bool\n                             ,list: list\n                             ,array: array\n                             ,$null: $null\n                             ,maybe: maybe\n                             ,value: value\n                             ,decodeValue: decodeValue\n                             ,customDecoder: customDecoder\n                             ,andThen: andThen\n                             ,fail: fail\n                             ,succeed: succeed\n                             ,tuple1: tuple1\n                             ,tuple2: tuple2\n                             ,tuple3: tuple3\n                             ,tuple4: tuple4\n                             ,tuple5: tuple5\n                             ,tuple6: tuple6\n                             ,tuple7: tuple7\n                             ,tuple8: tuple8};\n   return _elm.Json.Decode.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values)\n   return _elm.Json.Encode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Encode\",\n   $Array = Elm.Array.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm);\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: \"Value\"};\n   _elm.Json.Encode.values = {_op: _op\n                             ,Value: Value\n                             ,encode: encode\n                             ,string: string\n                             ,$int: $int\n                             ,$float: $float\n                             ,bool: bool\n                             ,$null: $null\n                             ,object: object\n                             ,array: array\n                             ,list: list};\n   return _elm.Json.Encode.values;\n};\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   \"use strict\";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values)\n   return _elm.List.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"List\",\n   $Basics = Elm.Basics.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$List = Elm.Native.List.make(_elm);\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = $Native$List.sort;\n   var repeat = $Native$List.repeat;\n   var drop = $Native$List.drop;\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var append = $Native$List.append;\n   var any = $Native$List.any;\n   var all = $Native$List.all;\n   var reverse = $Native$List.reverse;\n   var length = $Native$List.length;\n   var filter = $Native$List.filter;\n   var scanl1 = $Native$List.scanl1;\n   var scanl = $Native$List.scanl;\n   var foldr1 = $Native$List.foldr1;\n   var foldl1 = $Native$List.foldl1;\n   var maximum = foldl1($Basics.max);\n   var minimum = foldl1($Basics.min);\n   var foldr = $Native$List.foldr;\n   var concat = function (lists) {\n      return A3(foldr,\n      append,\n      _L.fromArray([]),\n      lists);\n   };\n   var foldl = $Native$List.foldl;\n   var sum = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x + y;\n      }),\n      0,\n      numbers);\n   };\n   var product = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x * y;\n      }),\n      1,\n      numbers);\n   };\n   var indexedMap = F2(function (f,\n   xs) {\n      return A3(map2,\n      f,\n      _L.range(0,length(xs) - 1),\n      xs);\n   });\n   var map = $Native$List.map;\n   var concatMap = F2(function (f,\n   list) {\n      return concat(A2(map,\n      f,\n      list));\n   });\n   var member = $Native$List.member;\n   var isEmpty = function (xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"[]\": return true;}\n         return false;\n      }();\n   };\n   var tail = $Native$List.tail;\n   var head = $Native$List.head;\n   _op[\"::\"] = $Native$List.cons;\n   var maybeCons = F3(function (f,\n   mx,\n   xs) {\n      return function () {\n         var _v1 = f(mx);\n         switch (_v1.ctor)\n         {case \"Just\":\n            return A2(_op[\"::\"],_v1._0,xs);\n            case \"Nothing\": return xs;}\n         _U.badCase($moduleName,\n         \"between lines 162 and 169\");\n      }();\n   });\n   var filterMap = F2(function (f,\n   xs) {\n      return A3(foldr,\n      maybeCons(f),\n      _L.fromArray([]),\n      xs);\n   });\n   var partition = F2(function (pred,\n   list) {\n      return function () {\n         var step = F2(function (x,\n         _v3) {\n            return function () {\n               switch (_v3.ctor)\n               {case \"_Tuple2\":\n                  return pred(x) ? {ctor: \"_Tuple2\"\n                                   ,_0: A2(_op[\"::\"],x,_v3._0)\n                                   ,_1: _v3._1} : {ctor: \"_Tuple2\"\n                                                  ,_0: _v3._0\n                                                  ,_1: A2(_op[\"::\"],x,_v3._1)};}\n               _U.badCase($moduleName,\n               \"between lines 270 and 272\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         list);\n      }();\n   });\n   var unzip = function (pairs) {\n      return function () {\n         var step = F2(function (_v7,\n         _v8) {\n            return function () {\n               switch (_v8.ctor)\n               {case \"_Tuple2\":\n                  return function () {\n                       switch (_v7.ctor)\n                       {case \"_Tuple2\":\n                          return {ctor: \"_Tuple2\"\n                                 ,_0: A2(_op[\"::\"],_v7._0,_v8._0)\n                                 ,_1: A2(_op[\"::\"],\n                                 _v7._1,\n                                 _v8._1)};}\n                       _U.badCase($moduleName,\n                       \"on line 308, column 12 to 28\");\n                    }();}\n               _U.badCase($moduleName,\n               \"on line 308, column 12 to 28\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         pairs);\n      }();\n   };\n   var intersperse = F2(function (sep,\n   xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"::\": return function () {\n                 var step = F2(function (x,\n                 rest) {\n                    return A2(_op[\"::\"],\n                    sep,\n                    A2(_op[\"::\"],x,rest));\n                 });\n                 var spersed = A3(foldr,\n                 step,\n                 _L.fromArray([]),\n                 xs._1);\n                 return A2(_op[\"::\"],\n                 xs._0,\n                 spersed);\n              }();\n            case \"[]\":\n            return _L.fromArray([]);}\n         _U.badCase($moduleName,\n         \"between lines 319 and 330\");\n      }();\n   });\n   _elm.List.values = {_op: _op\n                      ,head: head\n                      ,tail: tail\n                      ,isEmpty: isEmpty\n                      ,member: member\n                      ,map: map\n                      ,indexedMap: indexedMap\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,foldl1: foldl1\n                      ,foldr1: foldr1\n                      ,scanl: scanl\n                      ,scanl1: scanl1\n                      ,filter: filter\n                      ,filterMap: filterMap\n                      ,maybeCons: maybeCons\n                      ,length: length\n                      ,reverse: reverse\n                      ,all: all\n                      ,any: any\n                      ,append: append\n                      ,concat: concat\n                      ,concatMap: concatMap\n                      ,sum: sum\n                      ,product: product\n                      ,maximum: maximum\n                      ,minimum: minimum\n                      ,partition: partition\n                      ,map2: map2\n                      ,map3: map3\n                      ,map4: map4\n                      ,map5: map5\n                      ,unzip: unzip\n                      ,intersperse: intersperse\n                      ,take: take\n                      ,drop: drop\n                      ,repeat: repeat\n                      ,sort: sort\n                      ,sortBy: sortBy\n                      ,sortWith: sortWith};\n   return _elm.List.values;\n};\nElm.LocalChannel = Elm.LocalChannel || {};\nElm.LocalChannel.make = function (_elm) {\n   \"use strict\";\n   _elm.LocalChannel = _elm.LocalChannel || {};\n   if (_elm.LocalChannel.values)\n   return _elm.LocalChannel.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"LocalChannel\",\n   $Signal = Elm.Signal.make(_elm);\n   var send = F2(function (_v0,\n   value) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"LocalChannel\":\n            return _v0._0(value);}\n         _U.badCase($moduleName,\n         \"on line 91, column 3 to 22\");\n      }();\n   });\n   var LocalChannel = function (a) {\n      return {ctor: \"LocalChannel\"\n             ,_0: a};\n   };\n   var create = F2(function (generalize,\n   channel) {\n      return LocalChannel(function (v) {\n         return A2($Signal.send,\n         channel,\n         generalize(v));\n      });\n   });\n   var localize = F2(function (generalize,\n   _v3) {\n      return function () {\n         switch (_v3.ctor)\n         {case \"LocalChannel\":\n            return LocalChannel(function (v) {\n                 return _v3._0(generalize(v));\n              });}\n         _U.badCase($moduleName,\n         \"on line 83, column 3 to 41\");\n      }();\n   });\n   _elm.LocalChannel.values = {_op: _op\n                              ,create: create\n                              ,localize: localize\n                              ,send: send};\n   return _elm.LocalChannel.values;\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   \"use strict\";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values)\n   return _elm.Maybe.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Maybe\";\n   var withDefault = F2(function ($default,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\": return maybe._0;\n            case \"Nothing\":\n            return $default;}\n         _U.badCase($moduleName,\n         \"between lines 45 and 56\");\n      }();\n   });\n   var Nothing = {ctor: \"Nothing\"};\n   var oneOf = function (maybes) {\n      return function () {\n         switch (maybes.ctor)\n         {case \"::\": return function () {\n                 switch (maybes._0.ctor)\n                 {case \"Just\": return maybes._0;\n                    case \"Nothing\":\n                    return oneOf(maybes._1);}\n                 _U.badCase($moduleName,\n                 \"between lines 64 and 73\");\n              }();\n            case \"[]\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 59 and 73\");\n      }();\n   };\n   var andThen = F2(function (maybeValue,\n   callback) {\n      return function () {\n         switch (maybeValue.ctor)\n         {case \"Just\":\n            return callback(maybeValue._0);\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 110 and 112\");\n      }();\n   });\n   var Just = function (a) {\n      return {ctor: \"Just\",_0: a};\n   };\n   var map = F2(function (f,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Just(f(maybe._0));\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 76 and 107\");\n      }();\n   });\n   _elm.Maybe.values = {_op: _op\n                       ,andThen: andThen\n                       ,map: map\n                       ,withDefault: withDefault\n                       ,oneOf: oneOf\n                       ,Just: Just\n                       ,Nothing: Nothing};\n   return _elm.Maybe.values;\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Array = elm.Native.Array || {};\n    if (elm.Native.Array.values) return elm.Native.Array.values;\n    if ('values' in Elm.Native.Array)\n      return elm.Native.Array.values = Elm.Native.Array.values;\n\n    var List = Elm.Native.List.make(elm);\n\n    // A RRB-Tree has two distinct data types.\n    // Leaf -> \"height\"  is always 0\n    //         \"table\"   is an array of elements\n    // Node -> \"height\"  is always greater than 0\n    //         \"table\"   is an array of child nodes\n    //         \"lengths\" is an array of accumulated lengths of the child nodes\n\n    // M is the maximal table size. 32 seems fast. E is the allowed increase\n    // of search steps when concatting to find an index. Lower values will\n    // decrease balancing, but will increase search steps.\n    var M = 32;\n    var E = 2;\n\n    // An empty array.\n    var empty = { ctor:\"_Array\", height:0, table:new Array() };\n\n    function get(i, array) {\n        if (i < 0 || i >= length(array)) {\n            throw new Error(\"Index \" + i + \" is out of range. Check the length of \" +\n                            \"your array first or use getMaybe or getWithDefault.\");\n        }\n        return unsafeGet(i, array);\n    }\n\n    function unsafeGet(i, array) {\n      for (var x = array.height; x > 0; x--) {\n        var slot = i >> (x * 5);\n        while (array.lengths[slot] <= i) {\n          slot++;\n        }\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array = array.table[slot];\n      }\n      return array.table[i];\n    }\n\n    // Sets the value at the index i. Only the nodes leading to i will get\n    // copied and updated.\n    function set(i, item, array) {\n      if (i < 0 || length(array) <= i) {\n        return array;\n      }\n      return unsafeSet(i, item, array);\n    }\n\n    function unsafeSet(i, item, array) {\n      array = nodeCopy(array);\n\n      if (array.height == 0) {\n        array.table[i] = item;\n      } else {\n        var slot = getSlot(i, array);\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array.table[slot] = unsafeSet(i, item, array.table[slot]);\n      }\n      return array;\n    }\n\n    function initialize(len, f) {\n      if (len == 0) { return empty; }\n      var h = Math.floor(Math.log(len)/Math.log(M));\n      return initialize_(f, h, 0, len);\n    }\n\n    function initialize_(f, h, from, to) {\n      if (h == 0) {\n        var table = new Array((to - from) % (M + 1));\n        for (var i = 0; i < table.length; i++) {\n          table[i] = f(from + i);\n        }\n        return { ctor:\"_Array\", height:0, table:table };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = initialize_( f, h - 1, from + (i * step)\n                              , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    function fromList(list) {\n      if (list == List.Nil) { return empty; }\n\n      // Allocate M sized blocks (table) and write list elements to it.\n      var table = new Array(M);\n      var nodes = new Array();\n      var i = 0;\n\n      while (list.ctor !== '[]') {\n        table[i] = list._0;\n        list = list._1;\n        i++;\n\n        // table is full, so we can push a leaf containing it into the\n        // next node.\n        if (i == M) {\n          fromListPush({ ctor:\"_Array\", height:0, table:table }\n                      , nodes);\n          table = new Array(M);\n          i = 0;\n        }\n      }\n\n      // Maybe there is something left on the table.\n      if (i > 0) {\n        fromListPush({ ctor:\"_Array\", height:0, table:table.splice(0,i) }\n                    , nodes);\n      }\n\n      // Go through all of the nodes and eventually push them into higher nodes.\n      for (var h = 0; h < nodes.length - 1; h++) {\n        if (nodes[h].table.length > 0) {\n          fromListPush(nodes[h], nodes);\n        }\n      }\n\n      var head = nodes[nodes.length - 1];\n      if (head.height > 0 && head.table.length == 1) {\n        return head.table[0];\n      } else {\n        return head;\n      }\n    }\n\n    // Push a node into a higher node as a child.\n    function fromListPush(toPush, nodes) {\n      var h = toPush.height;\n\n      // Maybe the node on this height does not exist.\n      if (nodes.length == h) {\n        nodes.push({ ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() });\n      }\n\n      nodes[h].table.push(toPush);\n      var len = length(toPush);\n      if (nodes[h].lengths.length > 0) {\n        len += nodes[h].lengths[nodes[h].lengths.length - 1];\n      }\n      nodes[h].lengths.push(len);\n\n      if (nodes[h].table.length == M) {\n        fromListPush(nodes[h], nodes);\n        nodes[h] = { ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() };\n      }\n    }\n\n    // Pushes an item via push_ to the bottom right of a tree.\n    function push(item, a) {\n      var pushed = push_(item, a);\n      if (pushed !== null) {\n        return pushed;\n      }\n\n      var newTree = create(item, a.height);\n      return siblise(a, newTree);\n    }\n\n    // Recursively tries to push an item to the bottom-right most\n    // tree possible. If there is no space left for the item,\n    // null will be returned.\n    function push_(item, a) {\n      // Handle resursion stop at leaf level.\n      if (a.height == 0) {\n        if (a.table.length < M) {\n          var newA = { ctor:\"_Array\", height:0, table:a.table.slice() };\n          newA.table.push(item);\n          return newA;\n        } else {\n          return null;\n        }\n      }\n\n      // Recursively push\n      var pushed = push_(item, botRight(a));\n\n      // There was space in the bottom right tree, so the slot will\n      // be updated.\n      if (pushed != null) {\n        var newA = nodeCopy(a);\n        newA.table[newA.table.length - 1] = pushed;\n        newA.lengths[newA.lengths.length - 1]++;\n        return newA\n      }\n\n      // When there was no space left, check if there is space left\n      // for a new slot with a tree which contains only the item\n      // at the bottom.\n      if (a.table.length < M) {\n        var newSlot = create(item, a.height - 1);\n        var newA = nodeCopy(a);\n        newA.table.push(newSlot);\n        newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n        return newA\n      } else {\n        return null;\n      }\n    }\n\n    // Converts an array into a list of elements.\n    function toList(a) {\n      return toList_(List.Nil, a);\n    }\n\n    function toList_(list, a) {\n      for (var i = a.table.length - 1; i >= 0; i--) {\n        list = a.height == 0 ? List.Cons(a.table[i], list) : toList_(list, a.table[i]);\n      }\n      return list;\n    }\n\n    // Maps a function over the elements of an array.\n    function map(f, a) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? f(a.table[i]) : map(f, a.table[i]);\n      }\n      return newA;\n    }\n\n    // Maps a function over the elements with their index as first argument.\n    function indexedMap(f, a) {\n      return indexedMap_(f, a, 0);\n    }\n\n    function indexedMap_(f, a, from) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? A2(f, from + i, a.table[i])\n                                      : indexedMap_( f, a.table[i]\n                                                   , i == 0 ? 0 : a.lengths[i - 1]);\n      }\n      return newA;\n    }\n\n    function foldl(f, b, a) {\n      if (a.height == 0) {\n        for (var i = 0; i < a.table.length; i++) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = 0; i < a.table.length; i++) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    function foldr(f, b, a) {\n      if (a.height == 0) {\n        for (var i = a.table.length; i--; ) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = a.table.length; i--; ) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    // TODO: currently, it slices the right, then the left. This can be\n    // optimized.\n    function slice(from, to, a) {\n      if (from < 0) { from += length(a); }\n      if (to < 0)   { to += length(a); }\n      return sliceLeft(from, sliceRight(to, a));\n    }\n\n    function sliceRight(to, a) {\n      if (to == length(a)) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(0, to);\n        return newA;\n      }\n\n      // Slice the right recursively.\n      var right = getSlot(to, a);\n      var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (right == 0) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(0, right)\n                                , lengths:a.lengths.slice(0, right) };\n      if (sliced.table.length > 0) {\n        newA.table[right] = sliced;\n        newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n      }\n      return newA;\n    }\n\n    function sliceLeft(from, a) {\n      if (from == 0) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(from, a.table.length + 1);\n        return newA;\n      }\n\n      // Slice the left recursively.\n      var left = getSlot(from, a);\n      var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (left == a.table.length - 1) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(left, a.table.length + 1)\n                                , lengths:new Array(a.table.length - left) };\n      newA.table[0] = sliced;\n      var len = 0;\n      for (var i = 0; i < newA.table.length; i++) {\n        len += length(newA.table[i]);\n        newA.lengths[i] = len;\n      }\n\n      return newA;\n    }\n\n    // Appends two trees.\n    function append(a,b) {\n      if (a.table.length === 0) {\n        return b;\n      }\n      if (b.table.length === 0) {\n        return a;\n      }\n\n      var c = append_(a, b);\n\n      // Check if both nodes can be crunshed together.\n      if (c[0].table.length + c[1].table.length <= M) {\n        if (c[0].table.length === 0) {\n          return c[1];\n        }\n        if (c[1].table.length === 0) {\n          return c[0];\n        }\n\n        // Adjust .table and .lengths\n        c[0].table = c[0].table.concat(c[1].table);\n        if (c[0].height > 0) {\n          var len = length(c[0]);\n          for (var i = 0; i < c[1].lengths.length; i++) {\n            c[1].lengths[i] += len;\n          }\n          c[0].lengths = c[0].lengths.concat(c[1].lengths);\n        }\n\n        return c[0];\n      }\n\n      if (c[0].height > 0) {\n        var toRemove = calcToRemove(a, b);\n        if (toRemove > E) {\n          c = shuffle(c[0], c[1], toRemove);\n        }\n      }\n\n      return siblise(c[0], c[1]);\n    }\n\n    // Returns an array of two nodes; right and left. One node _may_ be empty.\n    function append_(a, b) {\n      if (a.height === 0 && b.height === 0) {\n        return [a, b];\n      }\n\n      if (a.height !== 1 || b.height !== 1) {\n        if (a.height === b.height) {\n          a = nodeCopy(a);\n          b = nodeCopy(b);\n          var appended = append_(botRight(a), botLeft(b));\n\n          insertRight(a, appended[1]);\n          insertLeft(b, appended[0]);\n        } else if (a.height > b.height) {\n          a = nodeCopy(a);\n          var appended = append_(botRight(a), b);\n\n          insertRight(a, appended[0]);\n          b = parentise(appended[1], appended[1].height + 1);\n        } else {\n          b = nodeCopy(b);\n          var appended = append_(a, botLeft(b));\n\n          var left = appended[0].table.length === 0 ? 0 : 1;\n          var right = left === 0 ? 1 : 0;\n          insertLeft(b, appended[left]);\n          a = parentise(appended[right], appended[right].height + 1);\n        }\n      }\n\n      // Check if balancing is needed and return based on that.\n      if (a.table.length === 0 || b.table.length === 0) {\n        return [a,b];\n      }\n\n      var toRemove = calcToRemove(a, b);\n      if (toRemove <= E) {\n        return [a,b];\n      }\n      return shuffle(a, b, toRemove);\n    }\n\n    // Helperfunctions for append_. Replaces a child node at the side of the parent.\n    function insertRight(parent, node) {\n      var index = parent.table.length - 1;\n      parent.table[index] = node;\n      parent.lengths[index] = length(node)\n      parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n    }\n\n    function insertLeft(parent, node) {\n      if (node.table.length > 0) {\n        parent.table[0] = node;\n        parent.lengths[0] = length(node);\n\n        var len = length(parent.table[0]);\n        for (var i = 1; i < parent.lengths.length; i++) {\n          len += length(parent.table[i]);\n          parent.lengths[i] = len;\n        }\n      } else {\n        parent.table.shift();\n        for (var i = 1; i < parent.lengths.length; i++) {\n          parent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n        }\n        parent.lengths.shift();\n      }\n    }\n\n    // Returns the extra search steps for E. Refer to the paper.\n    function calcToRemove(a, b) {\n      var subLengths = 0;\n      for (var i = 0; i < a.table.length; i++) {\n        subLengths += a.table[i].table.length;\n      }\n      for (var i = 0; i < b.table.length; i++) {\n        subLengths += b.table[i].table.length;\n      }\n\n      var toRemove = a.table.length + b.table.length\n      return toRemove - (Math.floor((subLengths - 1) / M) + 1);\n    }\n\n    // get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n    function get2(a, b, index) {\n      return index < a.length ? a[index] : b[index - a.length];\n    }\n\n    function set2(a, b, index, value) {\n      if (index < a.length) {\n        a[index] = value;\n      } else {\n        b[index - a.length] = value;\n      }\n    }\n\n    function saveSlot(a, b, index, slot) {\n      set2(a.table, b.table, index, slot);\n\n      var l = (index == 0 || index == a.lengths.length) ?\n                0 : get2(a.lengths, a.lengths, index - 1);\n      set2(a.lengths, b.lengths, index, l + length(slot));\n    }\n\n    // Creates a node or leaf with a given length at their arrays for perfomance.\n    // Is only used by shuffle.\n    function createNode(h, length) {\n      if (length < 0) { length = 0; }\n      var a = { ctor:\"_Array\", height:h, table:new Array(length) };\n      if (h > 0) {\n        a.lengths = new Array(length);\n      }\n      return a;\n    }\n\n    // Returns an array of two balanced nodes.\n    function shuffle(a, b, toRemove) {\n      var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n      var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n      // Skip the slots with size M. More precise: copy the slot references\n      // to the new node\n      var read = 0;\n      while (get2(a.table, b.table, read).table.length % M == 0) {\n        set2(newA.table, newB.table, read, get2(a.table, b.table, read));\n        set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n        read++;\n      }\n\n      // Pulling items from left to right, caching in a slot before writing\n      // it into the new nodes.\n      var write = read;\n      var slot = new createNode(a.height - 1, 0);\n      var from = 0;\n\n      // If the current slot is still containing data, then there will be at\n      // least one more write, so we do not break this loop yet.\n      while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove) {\n        // Find out the max possible items for copying.\n        var source = get2(a.table, b.table, read);\n        var to = Math.min(M - slot.table.length, source.table.length)\n\n        // Copy and adjust size table.\n        slot.table = slot.table.concat(source.table.slice(from, to));\n        if (slot.height > 0) {\n          var len = slot.lengths.length;\n          for (var i = len; i < len + to - from; i++) {\n            slot.lengths[i] = length(slot.table[i]);\n            slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n          }\n        }\n\n        from += to;\n\n        // Only proceed to next slots[i] if the current one was\n        // fully copied.\n        if (source.table.length <= to) {\n          read++; from = 0;\n        }\n\n        // Only create a new slot if the current one is filled up.\n        if (slot.table.length == M) {\n          saveSlot(newA, newB, write, slot);\n          slot = createNode(a.height - 1,0);\n          write++;\n        }\n      }\n\n      // Cleanup after the loop. Copy the last slot into the new nodes.\n      if (slot.table.length > 0) {\n        saveSlot(newA, newB, write, slot);\n        write++;\n      }\n\n      // Shift the untouched slots to the left\n      while (read < a.table.length + b.table.length ) {\n        saveSlot(newA, newB, write, get2(a.table, b.table, read));\n        read++; write++;\n      }\n\n      return [newA, newB];\n    }\n\n    // Navigation functions\n    function botRight(a) { return a.table[a.table.length - 1]; }\n    function botLeft(a)  { return a.table[0]; }\n\n    // Copies a node for updating. Note that you should not use this if\n    // only updating only one of \"table\" or \"lengths\" for performance reasons.\n    function nodeCopy(a) {\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice() };\n      if (a.height > 0) { newA.lengths = a.lengths.slice(); }\n      return newA;\n    }\n\n    // Returns how many items are in the tree.\n    function length(array) {\n      if (array.height == 0) {\n        return array.table.length;\n      } else {\n        return array.lengths[array.lengths.length - 1];\n      }\n    }\n\n    // Calculates in which slot of \"table\" the item probably is, then\n    // find the exact slot via forward searching in  \"lengths\". Returns the index.\n    function getSlot(i, a) {\n      var slot = i >> (5 * a.height);\n      while (a.lengths[slot] <= i) {\n        slot++;\n      }\n      return slot;\n    }\n\n    // Recursively creates a tree with a given height containing\n    // only the given item.\n    function create(item, h) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:[item] };\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[create(item, h - 1)]\n                              , lengths:[1] };\n      }\n    }\n\n    // Recursively creates a tree that contains the given tree.\n    function parentise(tree, h) {\n      if (h == tree.height) {\n        return tree;\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[parentise(tree, h - 1)]\n                              , lengths:[length(tree)] };\n      }\n    }\n\n    // Emphasizes blood brotherhood beneath two trees.\n    function siblise(a, b) {\n      return { ctor:\"_Array\", height:a.height + 1\n                            , table:[a, b]\n                            , lengths:[length(a), length(a) + length(b)] };\n    }\n\n    function toJSArray(a) {\n      var jsArray = new Array(length(a));\n      toJSArray_(jsArray, 0, a);\n      return jsArray;\n    }\n\n    function toJSArray_(jsArray, i, a) {\n      for (var t = 0; t < a.table.length; t++) {\n        if (a.height == 0) {\n          jsArray[i + t] = a.table[t];\n        } else {\n          var inc = t == 0 ? 0 : a.lengths[t - 1];\n          toJSArray_(jsArray, i + inc, a.table[t]);\n        }\n      }\n    }\n\n    function fromJSArray(jsArray) {\n      if (jsArray.length == 0) { return empty; }\n      var h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n      return fromJSArray_(jsArray, h, 0, jsArray.length);\n    }\n\n    function fromJSArray_(jsArray, h, from, to) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:jsArray.slice(from, to) };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = fromJSArray_( jsArray, h - 1, from + (i * step)\n                               , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    Elm.Native.Array.values = {\n      empty:empty,\n      fromList:fromList,\n      toList:toList,\n      initialize:F2(initialize),\n      append:F2(append),\n      push:F2(push),\n      slice:F3(slice),\n      get:F2(get),\n      set:F3(set),\n      map:F2(map),\n      indexedMap:F2(indexedMap),\n      foldl:F3(foldl),\n      foldr:F3(foldr),\n      length:length,\n\n      toJSArray:toJSArray,\n      fromJSArray:fromJSArray\n    };\n\n    return elm.Native.Array.values = Elm.Native.Array.values;\n}\n\n\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(elm) {\n  elm.Native = elm.Native || {};\n  elm.Native.Basics = elm.Native.Basics || {};\n  if (elm.Native.Basics.values) return elm.Native.Basics.values;\n\n  var Utils = Elm.Native.Utils.make(elm);\n\n  function div(a, b) {\n      return (a/b)|0;\n  }\n  function rem(a, b) {\n      return a % b;\n  }\n  function mod(a, b) {\n        if (b === 0) {\n            throw new Error(\"Cannot perform mod 0. Division by zero error.\");\n        }\n        var r = a % b;\n        var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r+b) : -mod(-a,-b));\n\n        return m === b ? 0 : m;\n  }\n  function logBase(base, n) {\n      return Math.log(n) / Math.log(base);\n  }\n  function negate(n) {\n      return -n;\n  }\n  function abs(n) {\n      return n < 0 ? -n : n;\n  }\n\n  function min(a, b) {\n      return Utils.cmp(a,b) < 0 ? a : b;\n  }\n  function max(a, b) {\n      return Utils.cmp(a,b) > 0 ? a : b;\n  }\n  function clamp(lo, hi, n) {\n      return Utils.cmp(n,lo) < 0 ? lo : Utils.cmp(n,hi) > 0 ? hi : n;\n  }\n\n  function xor(a, b) {\n      return a !== b;\n  }\n  function not(b) {\n      return !b;\n  }\n  function isInfinite(n) {\n      return n === Infinity || n === -Infinity\n  }\n\n  function truncate(n) {\n      return n|0;\n  }\n\n  function degrees(d) {\n      return d * Math.PI / 180;\n  }\n  function turns(t) {\n      return 2 * Math.PI * t;\n  }\n  function fromPolar(point) {\n      var r = point._0;\n      var t = point._1;\n      return Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n  }\n  function toPolar(point) {\n      var x = point._0;\n      var y = point._1;\n      return Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y,x));\n  }\n\n  var basics = {\n      div: F2(div),\n      rem: F2(rem),\n      mod: F2(mod),\n\n      pi: Math.PI,\n      e: Math.E,\n      cos: Math.cos,\n      sin: Math.sin,\n      tan: Math.tan,\n      acos: Math.acos,\n      asin: Math.asin,\n      atan: Math.atan,\n      atan2: F2(Math.atan2),\n\n      degrees:  degrees,\n      turns:  turns,\n      fromPolar:  fromPolar,\n      toPolar:  toPolar,\n\n      sqrt: Math.sqrt,\n      logBase: F2(logBase),\n      negate: negate,\n      abs: abs,\n      min: F2(min),\n      max: F2(max),\n      clamp: F3(clamp),\n      compare: Utils.compare,\n\n      xor: F2(xor),\n      not: not,\n\n      truncate: truncate,\n      ceiling: Math.ceil,\n      floor: Math.floor,\n      round: Math.round,\n      toFloat: function(x) { return x; },\n      isNaN: isNaN,\n      isInfinite: isInfinite\n  };\n\n  return elm.Native.Basics.values = basics;\n};\n\nElm.Native.Char = {};\nElm.Native.Char.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Char = elm.Native.Char || {};\n    if (elm.Native.Char.values) return elm.Native.Char.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isBetween(lo,hi) { return function(chr) {\n\tvar c = chr.charCodeAt(0);\n\treturn lo <= c && c <= hi;\n    };\n                              }\n    var isDigit = isBetween('0'.charCodeAt(0),'9'.charCodeAt(0));\n    var chk1 = isBetween('a'.charCodeAt(0),'f'.charCodeAt(0));\n    var chk2 = isBetween('A'.charCodeAt(0),'F'.charCodeAt(0));\n\n    return elm.Native.Char.values = {\n        fromCode : function(c) { return String.fromCharCode(c); },\n        toCode   : function(c) { return c.toUpperCase().charCodeAt(0); },\n        toUpper  : function(c) { return Utils.chr(c.toUpperCase()); },\n        toLower  : function(c) { return Utils.chr(c.toLowerCase()); },\n        toLocaleUpper : function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n        toLocaleLower : function(c) { return Utils.chr(c.toLocaleLowerCase()); },\n        isLower    : isBetween('a'.charCodeAt(0),'z'.charCodeAt(0)),\n        isUpper    : isBetween('A'.charCodeAt(0),'Z'.charCodeAt(0)),\n        isDigit    : isDigit,\n        isOctDigit : isBetween('0'.charCodeAt(0),'7'.charCodeAt(0)),\n        isHexDigit : function(c) { return isDigit(c) || chk1(c) || chk2(c); }\n    };\n};\n\nElm.Native.Color = {};\nElm.Native.Color.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Color = elm.Native.Color || {};\n    if (elm.Native.Color.values) return elm.Native.Color.values;\n\n    function toCss(c) {\n        var format = '';\n        var colors = '';\n        if (c.ctor === 'RGBA') {\n            format = 'rgb';\n            colors = c._0 + ', ' + c._1 + ', ' + c._2;\n        } else {\n            format = 'hsl';\n            colors = (c._0 * 180 / Math.PI) + ', ' +\n                     (c._1 * 100) + '%, ' +\n                     (c._2 * 100) + '%';\n        }\n        if (c._3 === 1) {\n            return format + '(' + colors + ')';\n        } else {\n            return format + 'a(' + colors + ', ' + c._3 + ')';\n        }\n    }\n\n    return elm.Native.Color.values = {\n        toCss:toCss\n    };\n\n};\n\nElm.Native.Debug = {};\nElm.Native.Debug.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Debug = elm.Native.Debug || {};\n    if (elm.Native.Debug.values) return elm.Native.Debug.values;\n    if ('values' in Elm.Native.Debug)\n        return elm.Native.Debug.values = Elm.Native.Debug.values;\n\n    var toString = Elm.Native.Show.make(elm).toString;\n    var replace = Elm.Native.Utils.make(elm).replace;\n\n    function log(tag, value) {\n        var msg = tag + ': ' + toString(value);\n        var process = process || {};\n        if (process.stdout) {\n            process.stdout.write(msg);\n        } else {\n            console.log(msg);\n        }\n        return value;\n    }\n\n    function crash(message) {\n        throw new Error(message);\n    }\n\n    function tracePath(debugId, form) {\n        return replace([[\"debugTracePathId\",debugId]], form);\n    }\n\n    function WatchTracker() {\n        this.frames = [{}];\n        this.clear = function() {\n            this.watches = {};\n        };\n        this.pushFrame = function() {\n            var lastFrame = this.frames[this.frames.length - 1];\n            this.frames.push(lastFrame);\n        }\n        this.notify = function(tag, value) {\n            this.frames[this.frames.length - 1][tag] = value;\n        };\n    }\n    var watchTracker = new WatchTracker();\n\n    function watch(tag, value) {\n        watchTracker.notify(tag, value);\n        return value;\n    }\n\n    function watchSummary(tag, f, value) {\n        watchTracker.notify(tag, f(value));\n        return value;\n    }\n\n    Elm.Native.Debug.values = {\n        crash: crash,\n        tracePath: F2(tracePath),\n        log: F2(log),\n        watch: F2(watch),\n        watchSummary:F3(watchSummary),\n        watchTracker: watchTracker\n    };\n    return elm.Native.Debug.values = Elm.Native.Debug.values;\n};\n\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\n// definition\nElm.Native.Graphics.Element.make = function(localRuntime) {\n    'use strict';\n\n    // attempt to short-circuit\n    if ('values' in Elm.Native.Graphics.Element) {\n        return Elm.Native.Graphics.Element.values;\n    }\n\n    var Color = Elm.Native.Color.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function createNode(elementType) {\n        var node = document.createElement(elementType);\n        node.style.padding = \"0\";\n        node.style.margin = \"0\";\n        return node;\n    }\n\n    function setProps(elem, node) {\n        var props = elem.props;\n\n        var element = elem.element;\n        var width = props.width - (element.adjustWidth || 0);\n        var height = props.height - (element.adjustHeight || 0);\n        node.style.width  = (width |0) + 'px';\n        node.style.height = (height|0) + 'px';\n\n        if (props.opacity !== 1) {\n            node.style.opacity = props.opacity;\n        }\n\n        if (props.color.ctor === 'Just') {\n            node.style.backgroundColor = Color.toCss(props.color._0);\n        }\n\n        if (props.tag !== '') {\n            node.id = props.tag;\n        }\n\n        if (props.hover.ctor !== '_Tuple0') {\n            addHover(node, props.hover);\n        }\n\n        if (props.click.ctor !== '_Tuple0') {\n            addClick(node, props.click);\n        }\n\n        if (props.href !== '') {\n            var anchor = createNode('a');\n            anchor.href = props.href;\n            anchor.style.display = 'block';\n            anchor.style.pointerEvents = 'auto';\n            anchor.appendChild(node);\n            node = anchor;\n        }\n\n        return node;\n    }\n\n    function addClick(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_click_handler = handler;\n        function trigger(ev) {\n            e.elm_click_handler(Utils.Tuple0);\n            ev.stopPropagation();\n        }\n        e.elm_click_trigger = trigger;\n        e.addEventListener('click', trigger);\n    }\n\n    function removeClick(e, handler) {\n        if (e.elm_click_trigger) {\n            e.removeEventListener('click', e.elm_click_trigger);\n            e.elm_click_trigger = null;\n            e.elm_click_handler = null;\n        }\n    }\n\n    function addHover(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_hover_handler = handler;\n        e.elm_hover_count = 0;\n\n        function over(evt) {\n            if (e.elm_hover_count++ > 0) return;\n            e.elm_hover_handler(true);\n            evt.stopPropagation();\n        }\n        function out(evt) {\n            if (e.contains(evt.toElement || evt.relatedTarget)) return;\n            e.elm_hover_count = 0;\n            e.elm_hover_handler(false);\n            evt.stopPropagation();\n        }\n        e.elm_hover_over = over;\n        e.elm_hover_out = out;\n        e.addEventListener('mouseover', over);\n        e.addEventListener('mouseout', out);\n    }\n\n    function removeHover(e) {\n        e.elm_hover_handler = null;\n        if (e.elm_hover_over) {\n            e.removeEventListener('mouseover', e.elm_hover_over);\n            e.elm_hover_over = null;\n        }\n        if (e.elm_hover_out) {\n            e.removeEventListener('mouseout', e.elm_hover_out);\n            e.elm_hover_out = null;\n        }\n    }\n\n    function image(props, img) {\n        switch (img._0.ctor) {\n        case 'Plain':   return plainImage(img._3);\n        case 'Fitted':  return fittedImage(props.width, props.height, img._3);\n        case 'Cropped': return croppedImage(img,props.width,props.height,img._3);\n        case 'Tiled':   return tiledImage(img._3);\n        }\n    }\n\n    function plainImage(src) {\n        var img = createNode('img');\n        img.src = src;\n        img.name = src;\n        img.style.display = \"block\";\n        return img;\n    }\n\n    function tiledImage(src) {\n        var div = createNode('div');\n        div.style.backgroundImage = 'url(' + src + ')';\n        return div;\n    }\n\n    function fittedImage(w, h, src) {\n        var div = createNode('div');\n        div.style.background = 'url(' + src + ') no-repeat center';\n        div.style.webkitBackgroundSize = 'cover';\n        div.style.MozBackgroundSize = 'cover';\n        div.style.OBackgroundSize = 'cover';\n        div.style.backgroundSize = 'cover';\n        return div;\n    }\n\n    function croppedImage(elem, w, h, src) {\n        var pos = elem._0._0;\n        var e = createNode('div');\n        e.style.overflow = \"hidden\";\n\n        var img = createNode('img');\n        img.onload = function() {\n            var sw = w / elem._1, sh = h / elem._2;\n            img.style.width = ((this.width * sw)|0) + 'px';\n            img.style.height = ((this.height * sh)|0) + 'px';\n            img.style.marginLeft = ((- pos._0 * sw)|0) + 'px';\n            img.style.marginTop = ((- pos._1 * sh)|0) + 'px';\n        };\n        img.src = src;\n        img.name = src;\n        e.appendChild(img);\n        return e;\n    }\n\n    function goOut(node) {\n        node.style.position = 'absolute';\n        return node;\n    }\n    function goDown(node) {\n        return node;\n    }\n    function goRight(node) {\n        node.style.styleFloat = 'left';\n        node.style.cssFloat = 'left';\n        return node;\n    }\n\n    var directionTable = {\n        DUp    : goDown,\n        DDown  : goDown,\n        DLeft  : goRight,\n        DRight : goRight,\n        DIn    : goOut,\n        DOut   : goOut\n    };\n    function needsReversal(dir) {\n        return dir == 'DUp' || dir == 'DLeft' || dir == 'DIn';\n    }\n\n    function flow(dir,elist) {\n        var array = List.toArray(elist);\n        var container = createNode('div');\n        var goDir = directionTable[dir];\n        if (goDir == goOut) {\n            container.style.pointerEvents = 'none';\n        }\n        if (needsReversal(dir)) {\n            array.reverse();\n        }\n        var len = array.length;\n        for (var i = 0; i < len; ++i) {\n            container.appendChild(goDir(render(array[i])));\n        }\n        return container;\n    }\n\n    function toPos(pos) {\n        switch(pos.ctor) {\n        case \"Absolute\": return  pos._0 + \"px\";\n        case \"Relative\": return (pos._0 * 100) + \"%\";\n        }\n    }\n\n    // must clear right, left, top, bottom, and transform\n    // before calling this function\n    function setPos(pos,elem,e) {\n        var element = elem.element;\n        var props = elem.props;\n        var w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n        var h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n        e.style.position = 'absolute';\n        e.style.margin = 'auto';\n        var transform = '';\n        switch(pos.horizontal.ctor) {\n        case 'P': e.style.right = toPos(pos.x); e.style.removeProperty('left'); break;\n        case 'Z': transform = 'translateX(' + ((-w/2)|0) + 'px) ';\n        case 'N': e.style.left = toPos(pos.x); e.style.removeProperty('right'); break;\n        }\n        switch(pos.vertical.ctor) {\n        case 'N': e.style.bottom = toPos(pos.y); e.style.removeProperty('top'); break;\n        case 'Z': transform += 'translateY(' + ((-h/2)|0) + 'px)';\n        case 'P': e.style.top = toPos(pos.y); e.style.removeProperty('bottom'); break;\n        }\n        if (transform !== '') {\n            addTransform(e.style, transform);\n        }\n        return e;\n    }\n\n    function addTransform(style, transform) {\n        style.transform       = transform;\n        style.msTransform     = transform;\n        style.MozTransform    = transform;\n        style.webkitTransform = transform;\n        style.OTransform      = transform;\n    }\n\n    function container(pos,elem) {\n        var e = render(elem);\n        setPos(pos, elem, e);\n        var div = createNode('div');\n        div.style.position = 'relative';\n        div.style.overflow = 'hidden';\n        div.appendChild(e);\n        return div;\n    }\n\n    function rawHtml(elem) {\n        var html = elem.html;\n        var guid = elem.guid;\n        var align = elem.align;\n\n        var div = createNode('div');\n        div.innerHTML = html;\n        div.style.visibility = \"hidden\";\n        if (align) {\n            div.style.textAlign = align;\n        }\n        div.style.visibility = 'visible';\n        div.style.pointerEvents = 'auto';\n        return div;\n    }\n\n    function render(elem) {\n        return setProps(elem, makeElement(elem));\n    }\n    function makeElement(e) {\n        var elem = e.element;\n        switch(elem.ctor) {\n        case 'Image':     return image(e.props, elem);\n        case 'Flow':      return flow(elem._0.ctor, elem._1);\n        case 'Container': return container(elem._0, elem._1);\n        case 'Spacer':    return createNode('div');\n        case 'RawHtml':   return rawHtml(elem);\n        case 'Custom':    return elem.render(elem.model);\n        }\n    }\n\n    function updateAndReplace(node, curr, next) {\n        var newNode = update(node, curr, next);\n        if (newNode !== node) {\n            node.parentNode.replaceChild(newNode, node);\n        }\n        return newNode;\n    }\n\n    function update(node, curr, next) {\n        var rootNode = node;\n        if (node.tagName === 'A') {\n            node = node.firstChild;\n        }\n        if (curr.props.id === next.props.id) {\n            updateProps(node, curr, next);\n            return rootNode;\n        }\n        if (curr.element.ctor !== next.element.ctor) {\n            return render(next);\n        }\n        var nextE = next.element;\n        var currE = curr.element;\n        switch(nextE.ctor) {\n        case \"Spacer\":\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"RawHtml\":\n            // only markdown blocks have guids, so this must be a text block\n            if (nextE.guid === null) {\n                if(currE.html.valueOf() !== nextE.html.valueOf()) {\n                    node.innerHTML = nextE.html;\n                }\n                updateProps(node, curr, next);\n                return rootNode;\n            }\n            if (nextE.guid !== currE.guid) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Image\":\n            if (nextE._0.ctor === 'Plain') {\n                if (nextE._3 !== currE._3) {\n                    node.src = nextE._3;\n                }\n            } else if (!Utils.eq(nextE,currE) ||\n                       next.props.width !== curr.props.width ||\n                       next.props.height !== curr.props.height) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Flow\":\n            var arr = List.toArray(nextE._1);\n            for (var i = arr.length; i--; ) {\n                arr[i] = arr[i].element.ctor;\n            }\n            if (nextE._0.ctor !== currE._0.ctor) {\n                return render(next);\n            }\n            var nexts = List.toArray(nextE._1);\n            var kids = node.childNodes;\n            if (nexts.length !== kids.length) {\n                return render(next);\n            }\n            var currs = List.toArray(currE._1);\n            var dir = nextE._0.ctor;\n            var goDir = directionTable[dir];\n            var toReverse = needsReversal(dir);\n            var len = kids.length;\n            for (var i = len; i-- ;) {\n                var subNode = kids[toReverse ? len - i - 1 : i];\n                goDir(updateAndReplace(subNode, currs[i], nexts[i]));\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Container\":\n            var subNode = node.firstChild;\n            var newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n            setPos(nextE._0, nextE._1, newSubNode);\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Custom\":\n            if (currE.type === nextE.type) {\n                var updatedNode = nextE.update(node, currE.model, nextE.model);\n                updateProps(updatedNode, curr, next);\n                return updatedNode;\n            } else {\n                return render(next);\n            }\n        }\n    }\n\n    function updateProps(node, curr, next) {\n        var nextProps = next.props;\n        var currProps = curr.props;\n\n        var element = next.element;\n        var width = nextProps.width - (element.adjustWidth || 0);\n        var height = nextProps.height - (element.adjustHeight || 0);\n        if (width !== currProps.width) {\n            node.style.width = (width|0) + 'px';\n        }\n        if (height !== currProps.height) {\n            node.style.height = (height|0) + 'px';\n        }\n\n        if (nextProps.opacity !== currProps.opacity) {\n            node.style.opacity = nextProps.opacity;\n        }\n\n        var nextColor = nextProps.color.ctor === 'Just'\n            ? Color.toCss(nextProps.color._0)\n            : '';\n        if (node.style.backgroundColor !== nextColor) {\n            node.style.backgroundColor = nextColor;\n        }\n\n        if (nextProps.tag !== currProps.tag) {\n            node.id = nextProps.tag;\n        }\n\n        if (nextProps.href !== currProps.href) {\n            if (currProps.href === '') {\n                // add a surrounding href\n                var anchor = createNode('a');\n                anchor.href = nextProps.href;\n                anchor.style.display = 'block';\n                anchor.style.pointerEvents = 'auto';\n\n                node.parentNode.replaceChild(anchor, node);\n                anchor.appendChild(node);\n            } else if (nextProps.href === '') {\n                // remove the surrounding href\n                var anchor = node.parentNode;\n                anchor.parentNode.replaceChild(node, anchor);\n            } else {\n                // just update the link\n                node.parentNode.href = nextProps.href;\n            }\n        }\n\n        // update click and hover handlers\n        var removed = false;\n\n        // update hover handlers\n        if (currProps.hover.ctor === '_Tuple0') {\n            if (nextProps.hover.ctor !== '_Tuple0') {\n                addHover(node, nextProps.hover);\n            }\n        }\n        else {\n            if (nextProps.hover.ctor === '_Tuple0') {\n                removed = true;\n                removeHover(node);\n            }\n            else {\n                node.elm_hover_handler = nextProps.hover;\n            }\n        }\n\n        // update click handlers\n        if (currProps.click.ctor === '_Tuple0') {\n            if (nextProps.click.ctor !== '_Tuple0') {\n                addClick(node, nextProps.click);\n            }\n        }\n        else {\n            if (nextProps.click.ctor === '_Tuple0') {\n                removed = true;\n                removeClick(node);\n            } else {\n                node.elm_click_handler = nextProps.click;\n            }\n        }\n\n        // stop capturing clicks if\n        if (removed\n            && nextProps.hover.ctor === '_Tuple0'\n            && nextProps.click.ctor === '_Tuple0')\n        {\n            node.style.pointerEvents = 'none';\n        }\n    }\n\n\n    function htmlHeight(width, rawHtml) {\n        // create dummy node\n        var temp = document.createElement('div');\n        temp.innerHTML = rawHtml.html;\n        if (width > 0) {\n            temp.style.width = width + \"px\";\n        }\n        temp.style.visibility = \"hidden\";\n        temp.style.styleFloat = \"left\";\n        temp.style.cssFloat   = \"left\";\n\n        document.body.appendChild(temp);\n\n        // get dimensions\n        var style = window.getComputedStyle(temp, null);\n        var w = Math.ceil(style.getPropertyValue(\"width\").slice(0,-2) - 0);\n        var h = Math.ceil(style.getPropertyValue(\"height\").slice(0,-2) - 0);\n        document.body.removeChild(temp);\n        return Utils.Tuple2(w,h);\n    }\n\n\n    return Elm.Native.Graphics.Element.values = {\n        render: render,\n        update: update,\n        updateAndReplace: updateAndReplace,\n\n        createNode: createNode,\n        addTransform: addTransform,\n        htmlHeight: F2(htmlHeight),\n        guid: Utils.guid\n    };\n\n};\n\nElm.Native.Json = {};\nElm.Native.Json.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Json = localRuntime.Native.Json || {};\n    if (localRuntime.Native.Json.values) {\n        return localRuntime.Native.Json.values;\n    }\n\n    var ElmArray = Elm.Native.Array.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Maybe = Elm.Maybe.make(localRuntime);\n    var Result = Elm.Result.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function crash(expected, actual) {\n        throw new Error(\n            'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n        );\n    }\n\n\n    // PRIMITIVE VALUES\n\n    function decodeNull(successValue) {\n        return function(value) {\n            if (value === null) {\n                return successValue;\n            }\n            crash('null', value);\n        };\n    }\n\n\n    function decodeString(value) {\n        if (typeof value === 'string' || value instanceof String) {\n            return value;\n        }\n        crash('a String', value);\n    }\n\n\n    function decodeFloat(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        crash('a Float', value);\n    }\n\n\n    function decodeInt(value) {\n        if (typeof value === 'number' && (value|0) === value) {\n            return value;\n        }\n        crash('an Int', value);\n    }\n\n\n    function decodeBool(value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        crash('a Bool', value);\n    }\n\n\n    // ARRAY\n\n    function decodeArray(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var array = new Array(len);\n                for (var i = len; i-- ; ) {\n                    array[i] = decoder(value[i]);\n                }\n                return ElmArray.fromJSArray(array);\n            }\n            crash('an Array', value);\n        };\n    }\n\n\n    // LIST\n\n    function decodeList(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var list = List.Nil;\n                for (var i = len; i-- ; ) {\n                    list = List.Cons( decoder(value[i]), list );\n                }\n                return list;\n            }\n            crash('a List', value);\n        };\n    }\n\n\n    // MAYBE\n\n    function decodeMaybe(decoder) {\n        return function(value) {\n            try {\n                return Maybe.Just(decoder(value));\n            } catch(e) {\n                return Maybe.Nothing;\n            }\n        };\n    }\n\n\n    // FIELDS\n\n    function decodeField(field, decoder) {\n        return function(value) {\n            var subValue = value[field];\n            if (subValue !== undefined) {\n                return decoder(subValue);\n            }\n            crash(\"an object with field '\" + field + \"'\", value);\n        };\n    }\n\n\n    // OBJECTS\n\n    function decodeKeyValuePairs(decoder) {\n        return function(value) {\n            var isObject =\n                typeof value === 'object'\n                    && value !== null\n                    && !(value instanceof Array);\n\n            if (isObject) {\n                var keyValuePairs = List.Nil;\n                for (var key in value) {\n                    var elmValue = decoder(value[key]);\n                    var pair = Utils.Tuple2(key, elmValue);\n                    keyValuePairs = List.Cons(pair, keyValuePairs);\n                }\n                return keyValuePairs;\n            }\n\n            crash(\"an object\", value);\n        };\n    }\n\n    function decodeObject1(f, d1) {\n        return function(value) {\n            return f(d1(value));\n        };\n    }\n\n    function decodeObject2(f, d1, d2) {\n        return function(value) {\n            return A2( f, d1(value), d2(value) );\n        };\n    }\n\n    function decodeObject3(f, d1, d2, d3) {\n        return function(value) {\n            return A3( f, d1(value), d2(value), d3(value) );\n        };\n    }\n\n    function decodeObject4(f, d1, d2, d3, d4) {\n        return function(value) {\n            return A4( f, d1(value), d2(value), d3(value), d4(value) );\n        };\n    }\n\n    function decodeObject5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            return A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n        };\n    }\n\n    function decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            return A6( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value)\n            );\n        };\n    }\n\n    function decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            return A7( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value)\n            );\n        };\n    }\n\n    function decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            return A8( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value),\n                d8(value)\n            );\n        };\n    }\n\n\n    // TUPLES\n\n    function decodeTuple1(f, d1) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 1 ) {\n                crash('a Tuple of length 1', value);\n            }\n            return f( d1(value[0]) );\n        };\n    }\n\n    function decodeTuple2(f, d1, d2) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 2 ) {\n                crash('a Tuple of length 2', value);\n            }\n            return A2( f, d1(value[0]), d2(value[1]) );\n        };\n    }\n\n    function decodeTuple3(f, d1, d2, d3) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 3 ) {\n                crash('a Tuple of length 3', value);\n            }\n            return A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n        };\n    }\n\n\n    function decodeTuple4(f, d1, d2, d3, d4) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 4 ) {\n                crash('a Tuple of length 4', value);\n            }\n            return A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n        };\n    }\n\n\n    function decodeTuple5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 5 ) {\n                crash('a Tuple of length 5', value);\n            }\n            return A5( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4])\n            );\n        };\n    }\n\n\n    function decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 6 ) {\n                crash('a Tuple of length 6', value);\n            }\n            return A6( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5])\n            );\n        };\n    }\n\n    function decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 7 ) {\n                crash('a Tuple of length 7', value);\n            }\n            return A7( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6])\n            );\n        };\n    }\n\n\n    function decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 8 ) {\n                crash('a Tuple of length 8', value);\n            }\n            return A8( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6]),\n                d8(value[7])\n            );\n        };\n    }\n\n\n    // CUSTOM DECODERS\n\n    function decodeValue(value) {\n        return value;\n    }\n\n    function runDecoderValue(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function customDecoder(decoder, callback) {\n        return function(value) {\n            var result = callback(decoder(value));\n            if (result.ctor === 'Err') {\n                throw new Error('custom decoder failed: ' + result._0);\n            }\n            return result._0;\n        }\n    }\n\n    function andThen(decode, callback) {\n        return function(value) {\n            var result = decode(value);\n            return callback(result)(value);\n        }\n    }\n\n    function fail(msg) {\n        return function(value) {\n            throw new Error(msg);\n        }\n    }\n\n    function succeed(successValue) {\n        return function(value) {\n            return successValue;\n        }\n    }\n\n\n    // ONE OF MANY\n\n    function oneOf(decoders) {\n        return function(value) {\n            var errors = [];\n            var temp = decoders;\n            while (temp.ctor !== '[]') {\n                try {\n                    return temp._0(value);\n                } catch(e) {\n                    errors.push(e.message);\n                }\n                temp = temp._1;\n            }\n            throw new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n        }\n    }\n\n    function get(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n\n    // ENCODE / DECODE\n\n    function runDecoderString(decoder, string) {\n        try {\n            return Result.Ok(decoder(JSON.parse(string)));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function encode(indentLevel, value) {\n        return JSON.stringify(value, null, indentLevel);\n    }\n\n    function identity(value) {\n        return value;\n    }\n\n    function encodeObject(keyValuePairs) {\n        var obj = {};\n        while (keyValuePairs.ctor !== '[]') {\n            var pair = keyValuePairs._0;\n            obj[pair._0] = pair._1;\n            keyValuePairs = keyValuePairs._1;\n        }\n        return obj;\n    }\n\n    return localRuntime.Native.Json.values = {\n        encode: F2(encode),\n        runDecoderString: F2(runDecoderString),\n        runDecoderValue: F2(runDecoderValue),\n\n        get: F2(get),\n        oneOf: oneOf,\n\n        decodeNull: decodeNull,\n        decodeInt: decodeInt,\n        decodeFloat: decodeFloat,\n        decodeString: decodeString,\n        decodeBool: decodeBool,\n\n        decodeMaybe: decodeMaybe,\n\n        decodeList: decodeList,\n        decodeArray: decodeArray,\n\n        decodeField: F2(decodeField),\n\n        decodeObject1: F2(decodeObject1),\n        decodeObject2: F3(decodeObject2),\n        decodeObject3: F4(decodeObject3),\n        decodeObject4: F5(decodeObject4),\n        decodeObject5: F6(decodeObject5),\n        decodeObject6: F7(decodeObject6),\n        decodeObject7: F8(decodeObject7),\n        decodeObject8: F9(decodeObject8),\n        decodeKeyValuePairs: decodeKeyValuePairs,\n\n        decodeTuple1: F2(decodeTuple1),\n        decodeTuple2: F3(decodeTuple2),\n        decodeTuple3: F4(decodeTuple3),\n        decodeTuple4: F5(decodeTuple4),\n        decodeTuple5: F6(decodeTuple5),\n        decodeTuple6: F7(decodeTuple6),\n        decodeTuple7: F8(decodeTuple7),\n        decodeTuple8: F9(decodeTuple8),\n\n        andThen: F2(andThen),\n        decodeValue: decodeValue,\n        customDecoder: F2(customDecoder),\n        fail: fail,\n        succeed: succeed,\n\n        identity: identity,\n        encodeNull: null,\n        encodeArray: ElmArray.toJSArray,\n        encodeList: List.toArray,\n        encodeObject: encodeObject\n\n    };\n\n};\n\nElm.Native.List = {};\nElm.Native.List.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.List = elm.Native.List || {};\n    if (elm.Native.List.values) return elm.Native.List.values;\n    if ('values' in Elm.Native.List)\n        return elm.Native.List.values = Elm.Native.List.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var Nil = Utils.Nil;\n    var Cons = Utils.Cons;\n\n    function throwError(f) {\n        throw new Error(\"Function '\" + f + \"' expects a non-empty list!\");\n    }\n\n    function toArray(xs) {\n        var out = [];\n        while (xs.ctor !== '[]') {\n            out.push(xs._0);\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function fromArray(arr) {\n        var out = Nil;\n        for (var i = arr.length; i--; ) {\n            out = Cons(arr[i], out);\n        }\n        return out;\n    }\n\n    function range(lo,hi) {\n        var lst = Nil;\n        if (lo <= hi) {\n            do { lst = Cons(hi,lst) } while (hi-->lo);\n        }\n        return lst\n    }\n\n    function head(v) {\n        return v.ctor === '[]' ? throwError('head') : v._0;\n    }\n    function tail(v) {\n        return v.ctor === '[]' ? throwError('tail') : v._1;\n    }\n\n    function last(xs) {\n        if (xs.ctor === '[]') { throwError('last'); }\n        var out = xs._0;\n        while (xs.ctor !== '[]') {\n            out = xs._0;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function map(f, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            arr.push(f(xs._0));\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    // f defined similarly for both foldl and foldr (NB: different from Haskell)\n    // ie, foldl : (a -> b -> b) -> b -> [a] -> b\n    function foldl(f, b, xs) {\n        var acc = b;\n        while (xs.ctor !== '[]') {\n            acc = A2(f, xs._0, acc);\n            xs = xs._1;\n        }\n        return acc;\n    }\n\n    function foldr(f, b, xs) {\n        var arr = toArray(xs);\n        var acc = b;\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function foldl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('foldl1') : foldl(f, xs._0, xs._1);\n    }\n\n    function foldr1(f, xs) {\n        if (xs.ctor === '[]') { throwError('foldr1'); }\n        var arr = toArray(xs);\n        var acc = arr.pop();\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function scanl(f, b, xs) {\n        var arr = toArray(xs);\n        arr.unshift(b);\n        var len = arr.length;\n        for (var i = 1; i < len; ++i) {\n            arr[i] = A2(f, arr[i], arr[i-1]);\n        }\n        return fromArray(arr);\n    }\n\n    function scanl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('scanl1') : scanl(f, xs._0, xs._1);\n    }\n\n    function filter(pred, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) { arr.push(xs._0); }\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function length(xs) {\n        var out = 0;\n        while (xs.ctor !== '[]') {\n            out += 1;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function member(x, xs) {\n        while (xs.ctor !== '[]') {\n            if (Utils.eq(x,xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function reverse(xs) {\n        return fromArray(toArray(xs).reverse());\n    }\n\n    function append(xs, ys) {\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    function all(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (!pred(xs._0)) return false;\n            xs = xs._1;\n        }\n        return true;\n    }\n\n    function any(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function map2(f, xs, ys) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]') {\n            arr.push(A2(f, xs._0, ys._0));\n            xs = xs._1;\n            ys = ys._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map3(f, xs, ys, zs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]') {\n            arr.push(A3(f, xs._0, ys._0, zs._0));\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map4(f, ws, xs, ys, zs) {\n        var arr = [];\n        while (   ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map5(f, vs, ws, xs, ys, zs) {\n        var arr = [];\n        while (   vs.ctor !== '[]'\n               && ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n            vs = vs._1;\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function sort(xs) {\n        return fromArray(toArray(xs).sort(Utils.cmp));\n    }\n\n    function sortBy(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            return Utils.cmp(f(a), f(b));\n        }));\n    }\n\n    function sortWith(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            var ord = f(a)(b).ctor;\n            return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n        }));\n    }\n\n    function nth(xs, n) {\n        return toArray(xs)[n];\n    }\n\n    function take(n, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && n > 0) {\n            arr.push(xs._0);\n            xs = xs._1;\n            --n;\n        }\n        return fromArray(arr);\n    }\n\n    function drop(n, xs) {\n        while (xs.ctor !== '[]' && n > 0) {\n            xs = xs._1;\n            --n;\n        }\n        return xs;\n    }\n\n    function repeat(n, x) {\n        var arr = [];\n        var pattern = [x];\n        while (n > 0) {\n            if (n & 1) arr = arr.concat(pattern);\n            n >>= 1, pattern = pattern.concat(pattern);\n        }\n        return fromArray(arr);\n    }\n\n\n    Elm.Native.List.values = {\n        Nil:Nil,\n        Cons:Cons,\n        cons:F2(Cons),\n        toArray:toArray,\n        fromArray:fromArray,\n        range:range,\n        append: F2(append),\n\n        head:head,\n        tail:tail,\n        last:last,\n\n        map:F2(map),\n        foldl:F3(foldl),\n        foldr:F3(foldr),\n\n        foldl1:F2(foldl1),\n        foldr1:F2(foldr1),\n        scanl:F3(scanl),\n        scanl1:F2(scanl1),\n        filter:F2(filter),\n        length:length,\n        member:F2(member),\n        reverse:reverse,\n\n        all:F2(all),\n        any:F2(any),\n        map2:F3(map2),\n        map3:F4(map3),\n        map4:F5(map4),\n        map5:F6(map5),\n        sort:sort,\n        sortBy:F2(sortBy),\n        sortWith:F2(sortWith),\n        nth:F2(nth),\n        take:F2(take),\n        drop:F2(drop),\n        repeat:F2(repeat)\n    };\n    return elm.Native.List.values = Elm.Native.List.values;\n\n};\n\nElm.Native.Ports = {};\nElm.Native.Ports.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Ports = localRuntime.Native.Ports || {};\n    if (localRuntime.Native.Ports.values) {\n        return localRuntime.Native.Ports.values;\n    }\n\n    var Signal;\n\n    function incomingSignal(converter) {\n        converter.isSignal = true;\n        return converter;\n    }\n\n    function outgoingSignal(converter) {\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        return function(signal) {\n            var subscribers = []\n            function subscribe(handler) {\n                subscribers.push(handler);\n            }\n            function unsubscribe(handler) {\n                subscribers.pop(subscribers.indexOf(handler));\n            }\n            A2( Signal.map, function(value) {\n                var val = converter(value);\n                var len = subscribers.length;\n                for (var i = 0; i < len; ++i) {\n                    subscribers[i](val);\n                }\n            }, signal);\n            return { subscribe:subscribe, unsubscribe:unsubscribe };\n        }\n    }\n\n    function portIn(name, converter) {\n        var jsValue = localRuntime.ports.incoming[name];\n        if (jsValue === undefined) {\n            throw new Error(\"Initialization Error: port '\" + name +\n                            \"' was not given an input!\");\n        }\n        localRuntime.ports.uses[name] += 1;\n        try {\n            var elmValue = converter(jsValue);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n\n        // just return a static value if it is not a signal\n        if (!converter.isSignal) {\n            return elmValue;\n        }\n\n        // create a signal if necessary\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        var signal = Signal.constant(elmValue);\n        function send(jsValue) {\n            try {\n                var elmValue = converter(jsValue);\n            } catch(e) {\n                throw new Error(\"Error sending to port '\" + name + \"': \\n\" + e.message);\n            }\n            setTimeout(function() {\n                localRuntime.notify(signal.id, elmValue);\n            }, 0);\n        }\n        localRuntime.ports.outgoing[name] = { send:send };\n        return signal;\n    }\n\n    function portOut(name, converter, value) {\n        try {\n            localRuntime.ports.outgoing[name] = converter(value);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n        return value;\n    }\n\n    return localRuntime.Native.Ports.values = {\n        incomingSignal: incomingSignal,\n        outgoingSignal: outgoingSignal,\n        portOut: portOut,\n        portIn: portIn\n    };\n};\n\n\n\nif (!Elm.fullscreen) {\n\n    (function() {\n        'use strict';\n\n        var Display = { FULLSCREEN: 0, COMPONENT: 1, NONE: 2 };\n\n        Elm.fullscreen = function(module, ports) {\n            var container = document.createElement('div');\n            document.body.appendChild(container);\n            return init(Display.FULLSCREEN, container, module, ports || {});\n        };\n\n        Elm.embed = function(module, container, ports) {\n            var tag = container.tagName;\n            if (tag !== 'DIV') {\n                throw new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n            } else if (container.hasChildNodes()) {\n                throw new Error('Elm.node must be given an empty DIV. No children allowed!');\n            }\n            return init(Display.COMPONENT, container, module, ports || {});\n        };\n\n        Elm.worker = function(module, ports) {\n            return init(Display.NONE, {}, module, ports || {});\n        };\n\n        function init(display, container, module, ports, moduleToReplace) {\n            // defining state needed for an instance of the Elm RTS\n            var inputs = [];\n\n            /* OFFSET\n             * Elm's time traveling debugger lets you interrupt the smooth flow of time\n             * by pausing and continuing program execution. To ensure the user sees a\n             * program that moves smoothly through the pause/continue time gap,\n             * we need to adjsut the value of Date.now().\n             */\n            var timer = function() {\n                var inducedDelay = 0;\n\n                var now = function() {\n                    return Date.now() - inducedDelay;\n                };\n\n                var addDelay = function(d) {\n                    inducedDelay += d;\n                    return inducedDelay;\n                };\n\n                return {\n                    now : now,\n                    addDelay : addDelay\n                }\n            }();\n\n            var updateInProgress = false;\n            function notify(id, v) {\n                if (updateInProgress) {\n                    throw new Error(\n                        'The notify function has been called synchronously!\\n' +\n                        'This can lead to frames being dropped.\\n' +\n                        'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n');\n                }\n                updateInProgress = true;\n                var timestep = timer.now();\n                for (var i = inputs.length; i--; ) {\n                    inputs[i].recv(timestep, id, v);\n                }\n                updateInProgress = false;\n            }\n            function setTimeout(func, delay) {\n                window.setTimeout(func, delay);\n            }\n\n            var listeners = [];\n            function addListener(relevantInputs, domNode, eventName, func) {\n                domNode.addEventListener(eventName, func);\n                var listener = {\n                    relevantInputs: relevantInputs,\n                    domNode: domNode,\n                    eventName: eventName,\n                    func: func\n                };\n                listeners.push(listener);\n            }\n\n            var portUses = {}\n            for (var key in ports) {\n                portUses[key] = 0;\n            }\n            // create the actual RTS. Any impure modules will attach themselves to this\n            // object. This permits many Elm programs to be embedded per document.\n            var elm = {\n                notify: notify,\n                setTimeout: setTimeout,\n                node: container,\n                addListener: addListener,\n                inputs: inputs,\n                timer: timer,\n                ports: { incoming:ports, outgoing:{}, uses:portUses },\n\n                isFullscreen: function() { return display === Display.FULLSCREEN; },\n                isEmbed: function() { return display === Display.COMPONENT; },\n                isWorker: function() { return display === Display.NONE; }\n            };\n\n            function swap(newModule) {\n                removeListeners(listeners);\n                var div = document.createElement('div');\n                var newElm = init(display, div, newModule, ports, elm);\n                inputs = [];\n                // elm.swap = newElm.swap;\n                return newElm;\n            }\n\n            function dispose() {\n                removeListeners(listeners);\n                inputs = [];\n            }\n\n            var Module = {};\n            try {\n                Module = module.make(elm);\n                checkPorts(elm);\n            } catch(e) {\n                var code = document.createElement('code');\n\n                var lines = e.message.split('\\n');\n                code.appendChild(document.createTextNode(lines[0]));\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createElement('br'));\n                for (var i = 1; i < lines.length; ++i) {\n                    code.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i]));\n                    code.appendChild(document.createElement('br'));\n                }\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createTextNode(\"Open the developer console for more details.\"));\n\n                container.appendChild(code);\n                throw e;\n            }\n            inputs = filterDeadInputs(inputs);\n            filterListeners(inputs, listeners);\n            addReceivers(elm.ports.outgoing);\n            if (display !== Display.NONE) {\n                var graphicsNode = initGraphics(elm, Module);\n            }\n            if (typeof moduleToReplace !== 'undefined') {\n                hotSwap(moduleToReplace, elm);\n\n                // rerender scene if graphics are enabled.\n                if (typeof graphicsNode !== 'undefined') {\n                    graphicsNode.recv(0, true, 0);\n                }\n            }\n\n            return {\n                swap:swap,\n                ports:elm.ports.outgoing,\n                dispose:dispose\n            };\n        };\n\n        function checkPorts(elm) {\n            var portUses = elm.ports.uses;\n            for (var key in portUses) {\n                var uses = portUses[key]\n                if (uses === 0) {\n                    throw new Error(\n                        \"Initialization Error: provided port '\" + key +\n                        \"' to a module that does not take it as in input.\\n\" +\n                        \"Remove '\" + key + \"' from the module initialization code.\");\n                } else if (uses > 1) {\n                    throw new Error(\n                        \"Initialization Error: port '\" + key +\n                        \"' has been declared multiple times in the Elm code.\\n\" +\n                        \"Remove declarations until there is exactly one.\");\n                }\n            }\n        }\n\n\n        //// FILTER SIGNALS ////\n\n        // TODO: move this code into the signal module and create a function\n        // Signal.initializeGraph that actually instantiates everything.\n\n        function filterListeners(inputs, listeners) {\n            loop:\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                for (var j = inputs.length; j--; ) {\n                    if (listener.relevantInputs.indexOf(inputs[j].id) >= 0) {\n                        continue loop;\n                    }\n                }\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        function removeListeners(listeners) {\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        // add receivers for built-in ports if they are defined\n        function addReceivers(ports) {\n            if ('log' in ports) {\n                ports.log.subscribe(function(v) { console.log(v) });\n            }\n            if ('stdout' in ports) {\n                var process = process || {};\n                var handler = process.stdout\n                    ? function(v) { process.stdout.write(v); }\n                    : function(v) { console.log(v); };\n                ports.stdout.subscribe(handler);\n            }\n            if ('stderr' in ports) {\n                var process = process || {};\n                var handler = process.stderr\n                    ? function(v) { process.stderr.write(v); }\n                    : function(v) { console.log('Error:' + v); };\n                ports.stderr.subscribe(handler);\n            }\n            if ('title' in ports) {\n                if (typeof ports.title === 'string') {\n                    document.title = ports.title;\n                } else {\n                    ports.title.subscribe(function(v) { document.title = v; });\n                }\n            }\n            if ('redirect' in ports) {\n                ports.redirect.subscribe(function(v) {\n                    if (v.length > 0) window.location = v;\n                });\n            }\n            if ('favicon' in ports) {\n                if (typeof ports.favicon === 'string') {\n                    changeFavicon(ports.favicon);\n                } else {\n                    ports.favicon.subscribe(changeFavicon);\n                }\n            }\n            function changeFavicon(src) {\n                var link = document.createElement('link');\n                var oldLink = document.getElementById('elm-favicon');\n                link.id = 'elm-favicon';\n                link.rel = 'shortcut icon';\n                link.href = src;\n                if (oldLink) {\n                    document.head.removeChild(oldLink);\n                }\n                document.head.appendChild(link);\n            }\n        }\n\n\n        function filterDeadInputs(inputs) {\n            var temp = [];\n            for (var i = inputs.length; i--; ) {\n                if (isAlive(inputs[i])) temp.push(inputs[i]);\n            }\n            return temp;\n        }\n\n\n        function isAlive(input) {\n            if (!('defaultNumberOfKids' in input)) return true;\n            var len = input.kids.length;\n            if (len === 0) return false;\n            if (len > input.defaultNumberOfKids) return true;\n            var alive = false;\n            for (var i = len; i--; ) {\n                alive = alive || isAlive(input.kids[i]);\n            }\n            return alive;\n        }\n\n\n        ////  RENDERING  ////\n\n        function initGraphics(elm, Module) {\n            if (!('main' in Module)) {\n                throw new Error(\"'main' is missing! What do I display?!\");\n            }\n\n            var signalGraph = Module.main;\n\n            // make sure the signal graph is actually a signal & extract the visual model\n            var Signal = Elm.Signal.make(elm);\n            if (!('recv' in signalGraph)) {\n                signalGraph = Signal.constant(signalGraph);\n            }\n            var initialScene = signalGraph.value;\n\n            // Add the initialScene to the DOM\n            var Element = Elm.Native.Graphics.Element.make(elm);\n            elm.node.appendChild(Element.render(initialScene));\n\n            var _requestAnimationFrame =\n                typeof requestAnimationFrame !== 'undefined'\n                    ? requestAnimationFrame\n                    : function(cb) { setTimeout(cb, 1000/60); }\n                    ;\n\n            // domUpdate is called whenever the main Signal changes.\n            //\n            // domUpdate and drawCallback implement a small state machine in order\n            // to schedule only 1 draw per animation frame. This enforces that\n            // once draw has been called, it will not be called again until the\n            // next frame.\n            //\n            // drawCallback is scheduled whenever\n            // 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n            // 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n            //\n            // Invariants:\n            // 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n            // 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n            //    scheduled drawCallback.\n            var NO_REQUEST = 0;\n            var PENDING_REQUEST = 1;\n            var EXTRA_REQUEST = 2;\n            var state = NO_REQUEST;\n            var savedScene = initialScene;\n            var scheduledScene = initialScene;\n\n            function domUpdate(newScene) {\n                scheduledScene = newScene;\n\n                switch (state) {\n                    case NO_REQUEST:\n                        _requestAnimationFrame(drawCallback);\n                        state = PENDING_REQUEST;\n                        return;\n                    case PENDING_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                    case EXTRA_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                }\n            }\n\n            function drawCallback() {\n                switch (state) {\n                    case NO_REQUEST:\n                        // This state should not be possible. How can there be no\n                        // request, yet somehow we are actively fulfilling a\n                        // request?\n                        throw new Error(\n                            \"Unexpected draw callback.\\n\" +\n                            \"Please report this to <https://github.com/elm-lang/core/issues>.\"\n                        );\n\n                    case PENDING_REQUEST:\n                        // At this point, we do not *know* that another frame is\n                        // needed, but we make an extra request to rAF just in\n                        // case. It's possible to drop a frame if rAF is called\n                        // too late, so we just do it preemptively.\n                        _requestAnimationFrame(drawCallback);\n                        state = EXTRA_REQUEST;\n\n                        // There's also stuff we definitely need to draw.\n                        draw();\n                        return;\n\n                    case EXTRA_REQUEST:\n                        // Turns out the extra request was not needed, so we will\n                        // stop calling rAF. No reason to call it all the time if\n                        // no one needs it.\n                        state = NO_REQUEST;\n                        return;\n                }\n            }\n\n            function draw() {\n                Element.updateAndReplace(elm.node.firstChild, savedScene, scheduledScene);\n                if (elm.Native.Window) {\n                    elm.Native.Window.values.resizeIfNeeded();\n                }\n                savedScene = scheduledScene;\n            }\n\n            var renderer = A2(Signal.map, domUpdate, signalGraph);\n\n            // must check for resize after 'renderer' is created so\n            // that changes show up.\n            if (elm.Native.Window) {\n                elm.Native.Window.values.resizeIfNeeded();\n            }\n\n            return renderer;\n        }\n\n        //// HOT SWAPPING ////\n\n        // Returns boolean indicating if the swap was successful.\n        // Requires that the two signal graphs have exactly the same\n        // structure.\n        function hotSwap(from, to) {\n            function similar(nodeOld,nodeNew) {\n                var idOkay = nodeOld.id === nodeNew.id;\n                var lengthOkay = nodeOld.kids.length === nodeNew.kids.length;\n                return idOkay && lengthOkay;\n            }\n            function swap(nodeOld,nodeNew) {\n                nodeNew.value = nodeOld.value;\n                return true;\n            }\n            var canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n            if (canSwap) {\n                depthFirstTraversals(swap, from.inputs, to.inputs);\n            }\n            from.node.parentNode.replaceChild(to.node, from.node);\n\n            return canSwap;\n        }\n\n        // Returns false if the node operation f ever fails.\n        function depthFirstTraversals(f, queueOld, queueNew) {\n            if (queueOld.length !== queueNew.length) return false;\n            queueOld = queueOld.slice(0);\n            queueNew = queueNew.slice(0);\n\n            var seen = [];\n            while (queueOld.length > 0 && queueNew.length > 0) {\n                var nodeOld = queueOld.pop();\n                var nodeNew = queueNew.pop();\n                if (seen.indexOf(nodeOld.id) < 0) {\n                    if (!f(nodeOld, nodeNew)) return false;\n                    queueOld = queueOld.concat(nodeOld.kids);\n                    queueNew = queueNew.concat(nodeNew.kids);\n                    seen.push(nodeOld.id);\n                }\n            }\n            return true;\n        }\n    }());\n\n    function F2(fun) {\n        function wrapper(a) { return function(b) { return fun(a,b) } }\n        wrapper.arity = 2;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F3(fun) {\n        function wrapper(a) {\n            return function(b) { return function(c) { return fun(a,b,c) }}\n        }\n        wrapper.arity = 3;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F4(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return fun(a,b,c,d) }}}\n        }\n        wrapper.arity = 4;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F5(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return fun(a,b,c,d,e) }}}}\n        }\n        wrapper.arity = 5;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F6(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return fun(a,b,c,d,e,f) }}}}}\n        }\n        wrapper.arity = 6;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F7(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return fun(a,b,c,d,e,f,g) }}}}}}\n        }\n        wrapper.arity = 7;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F8(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) {\n            return fun(a,b,c,d,e,f,g,h)}}}}}}}\n        }\n        wrapper.arity = 8;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F9(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) { return function(i) {\n            return fun(a,b,c,d,e,f,g,h,i) }}}}}}}}\n        }\n        wrapper.arity = 9;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function A2(fun,a,b) {\n        return fun.arity === 2\n            ? fun.func(a,b)\n            : fun(a)(b);\n    }\n    function A3(fun,a,b,c) {\n        return fun.arity === 3\n            ? fun.func(a,b,c)\n            : fun(a)(b)(c);\n    }\n    function A4(fun,a,b,c,d) {\n        return fun.arity === 4\n            ? fun.func(a,b,c,d)\n            : fun(a)(b)(c)(d);\n    }\n    function A5(fun,a,b,c,d,e) {\n        return fun.arity === 5\n            ? fun.func(a,b,c,d,e)\n            : fun(a)(b)(c)(d)(e);\n    }\n    function A6(fun,a,b,c,d,e,f) {\n        return fun.arity === 6\n            ? fun.func(a,b,c,d,e,f)\n            : fun(a)(b)(c)(d)(e)(f);\n    }\n    function A7(fun,a,b,c,d,e,f,g) {\n        return fun.arity === 7\n            ? fun.func(a,b,c,d,e,f,g)\n            : fun(a)(b)(c)(d)(e)(f)(g);\n    }\n    function A8(fun,a,b,c,d,e,f,g,h) {\n        return fun.arity === 8\n            ? fun.func(a,b,c,d,e,f,g,h)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h);\n    }\n    function A9(fun,a,b,c,d,e,f,g,h,i) {\n        return fun.arity === 9\n            ? fun.func(a,b,c,d,e,f,g,h,i)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n    }\n}\nElm.Native.Show = {};\nElm.Native.Show.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Show = elm.Native.Show || {};\n    if (elm.Native.Show.values) return elm.Native.Show.values;\n\n    var _Array;\n    var Dict;\n    var List;\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var toString = function(v) {\n        var type = typeof v;\n        if (type === \"function\") {\n            var name = v.func ? v.func.name : v.name;\n            return '<function' + (name === '' ? '' : ': ') + name + '>';\n        }\n        else if (type === \"boolean\") {\n            return v ? \"True\" : \"False\";\n        }\n        else if (type === \"number\") {\n            return v + \"\";\n        }\n        else if ((v instanceof String) && v.isChar) {\n            return \"'\" + addSlashes(v) + \"'\";\n        }\n        else if (type === \"string\") {\n            return '\"' + addSlashes(v) + '\"';\n        }\n        else if (type === \"object\" && '_' in v && probablyPublic(v)) {\n            var output = [];\n            for (var k in v._) {\n                for (var i = v._[k].length; i--; ) {\n                    output.push(k + \" = \" + toString(v._[k][i]));\n                }\n            }\n            for (var k in v) {\n                if (k === '_') continue;\n                output.push(k + \" = \" + toString(v[k]));\n            }\n            if (output.length === 0) {\n                return \"{}\";\n            }\n            return \"{ \" + output.join(\", \") + \" }\";\n        }\n        else if (type === \"object\" && 'ctor' in v) {\n            if (v.ctor.substring(0,6) === \"_Tuple\") {\n                var output = [];\n                for (var k in v) {\n                    if (k === 'ctor') continue;\n                    output.push(toString(v[k]));\n                }\n                return \"(\" + output.join(\",\") + \")\";\n            }\n            else if (v.ctor === \"_Array\") {\n                if (!_Array) {\n                    _Array = Elm.Array.make(elm);\n                }\n                var list = _Array.toList(v);\n                return \"Array.fromList \" + toString(list);\n            }\n            else if (v.ctor === \"::\") {\n                var output = '[' + toString(v._0);\n                v = v._1;\n                while (v.ctor === \"::\") {\n                    output += \",\" + toString(v._0);\n                    v = v._1;\n                }\n                return output + ']';\n            }\n            else if (v.ctor === \"[]\") {\n                return \"[]\";\n            }\n            else if (v.ctor === \"RBNode\" || v.ctor === \"RBEmpty\") {\n                if (!Dict) {\n                    Dict = Elm.Dict.make(elm);\n                }\n                if (!List) {\n                    List = Elm.List.make(elm);\n                }\n                var list = Dict.toList(v);\n                var name = \"Dict\";\n                if (list.ctor === \"::\" && list._0._1.ctor === \"_Tuple0\") {\n                    name = \"Set\";\n                    list = A2(List.map, function(x){return x._0}, list);\n                }\n                return name + \".fromList \" + toString(list);\n            }\n            else {\n                var output = \"\";\n                for (var i in v) {\n                    if (i === 'ctor') continue;\n                    var str = toString(v[i]);\n                    var parenless = str[0] === '{' || str[0] === '<' || str.indexOf(' ') < 0;\n                    output += ' ' + (parenless ? str : '(' + str + ')');\n                }\n                return v.ctor + output;\n            }\n        }\n        if (type === 'object' && 'recv' in v) {\n            return '<signal>';\n        }\n        return \"<internal structure>\";\n    };\n\n    function addSlashes(str) {\n        return str.replace(/\\\\/g, '\\\\\\\\')\n                  .replace(/\\n/g, '\\\\n')\n                  .replace(/\\t/g, '\\\\t')\n                  .replace(/\\r/g, '\\\\r')\n                  .replace(/\\v/g, '\\\\v')\n                  .replace(/\\0/g, '\\\\0')\n                  .replace(/\\'/g, \"\\\\'\")\n                  .replace(/\\\"/g, '\\\\\"');\n    }\n\n    function probablyPublic(v) {\n        var keys = Object.keys(v);\n        var len = keys.length;\n        if (len === 3\n            && 'props' in v\n            && 'element' in v)\n        {\n            return false;\n        }\n        else if (len === 5\n            && 'horizontal' in v\n            && 'vertical' in v\n            && 'x' in v\n            && 'y' in v)\n        {\n            return false;\n        }\n        else if (len === 7\n            && 'theta' in v\n            && 'scale' in v\n            && 'x' in v\n            && 'y' in v\n            && 'alpha' in v\n            && 'form' in v)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    return elm.Native.Show.values = {\n        toString: toString\n    };\n};\n\n\nElm.Native.Signal = {};\nElm.Native.Signal.make = function(localRuntime) {\n\n  localRuntime.Native = localRuntime.Native || {};\n  localRuntime.Native.Signal = localRuntime.Native.Signal || {};\n  if (localRuntime.Native.Signal.values) {\n      return localRuntime.Native.Signal.values;\n  }\n\n  var Utils = Elm.Native.Utils.make(localRuntime);\n\n  function broadcastToKids(node, timestep, changed) {\n    var kids = node.kids;\n    for (var i = kids.length; i--; ) {\n      kids[i].recv(timestep, changed, node.id);\n    }\n  }\n\n  function Input(base) {\n    this.id = Utils.guid();\n    this.value = base;\n    this.kids = [];\n    this.defaultNumberOfKids = 0;\n    this.recv = function(timestep, eid, v) {\n      var changed = eid === this.id;\n      if (changed) {\n        this.value = v;\n      }\n      broadcastToKids(this, timestep, changed);\n      return changed;\n    };\n    localRuntime.inputs.push(this);\n  }\n\n  function LiftN(update, args) {\n    this.id = Utils.guid();\n    this.value = update();\n    this.kids = [];\n\n    var n = args.length;\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      ++count;\n      if (changed) { isChanged = true; }\n      if (count == n) {\n        if (isChanged) { this.value = update(); }\n        broadcastToKids(this, timestep, isChanged);\n        isChanged = false;\n        count = 0;\n      }\n    };\n    for (var i = n; i--; ) { args[i].kids.push(this); }\n  }\n\n  function map(func, a) {\n    function update() { return func(a.value); }\n    return new LiftN(update, [a]);\n  }\n  function map2(func, a, b) {\n    function update() { return A2( func, a.value, b.value ); }\n    return new LiftN(update, [a,b]);\n  }\n  function map3(func, a, b, c) {\n    function update() { return A3( func, a.value, b.value, c.value ); }\n    return new LiftN(update, [a,b,c]);\n  }\n  function map4(func, a, b, c, d) {\n    function update() { return A4( func, a.value, b.value, c.value, d.value ); }\n    return new LiftN(update, [a,b,c,d]);\n  }\n  function map5(func, a, b, c, d, e) {\n    function update() { return A5( func, a.value, b.value, c.value, d.value, e.value ); }\n    return new LiftN(update, [a,b,c,d,e]);\n  }\n\n  function Foldp(step, state, input) {\n    this.id = Utils.guid();\n    this.value = state;\n    this.kids = [];\n\n    this.recv = function(timestep, changed, parentID) {\n      if (changed) {\n          this.value = A2( step, input.value, this.value );\n      }\n      broadcastToKids(this, timestep, changed);\n    };\n    input.kids.push(this);\n  }\n\n  function foldp(step, state, input) {\n      return new Foldp(step, state, input);\n  }\n\n  function DropIf(pred,base,input) {\n    this.id = Utils.guid();\n    this.value = pred(input.value) ? base : input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !pred(input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function DropRepeats(input) {\n    this.id = Utils.guid();\n    this.value = input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !Utils.eq(this.value,input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function timestamp(a) {\n    function update() { return Utils.Tuple2(localRuntime.timer.now(), a.value); }\n    return new LiftN(update, [a]);\n  }\n\n  function SampleOn(s1,s2) {\n    this.id = Utils.guid();\n    this.value = s2.value;\n    this.kids = [];\n\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      if (parentID === s1.id) isChanged = changed;\n      ++count;\n      if (count == 2) {\n        if (isChanged) { this.value = s2.value; }\n        broadcastToKids(this, timestep, isChanged);\n        count = 0;\n        isChanged = false;\n      }\n    };\n    s1.kids.push(this);\n    s2.kids.push(this);\n  }\n\n  function sampleOn(s1,s2) { return new SampleOn(s1,s2); }\n\n  function delay(t,s) {\n      var delayed = new Input(s.value);\n      var firstEvent = true;\n      function update(v) {\n        if (firstEvent) {\n            firstEvent = false; return;\n        }\n        setTimeout(function() {\n            localRuntime.notify(delayed.id, v);\n        }, t);\n      }\n      function first(a,b) { return a; }\n      return new SampleOn(delayed, map2(F2(first), delayed, map(update,s)));\n  }\n\n  function Merge(s1,s2) {\n      this.id = Utils.guid();\n      this.value = s1.value;\n      this.kids = [];\n\n      var next = null;\n      var count = 0;\n      var isChanged = false;\n\n      this.recv = function(timestep, changed, parentID) {\n        ++count;\n        if (changed) {\n            isChanged = true;\n            if (parentID == s2.id && next === null) { next = s2.value; }\n            if (parentID == s1.id) { next = s1.value; }\n        }\n\n        if (count == 2) {\n            if (isChanged) { this.value = next; next = null; }\n            broadcastToKids(this, timestep, isChanged);\n            isChanged = false;\n            count = 0;\n        }\n      };\n      s1.kids.push(this);\n      s2.kids.push(this);\n  }\n\n  function merge(s1,s2) {\n      return new Merge(s1,s2);\n  }\n\n\n    // SIGNAL INPUTS\n\n    function input(initialValue) {\n        return new Input(initialValue);\n    }\n\n    function send(input, value) {\n        return function() {\n            localRuntime.notify(input.id, value);\n        };\n    }\n\n    function subscribe(input) {\n        return input;\n    }\n\n\n  return localRuntime.Native.Signal.values = {\n    constant : function(v) { return new Input(v); },\n    map  : F2(map ),\n    map2 : F3(map2),\n    map3 : F4(map3),\n    map4 : F5(map4),\n    map5 : F6(map5),\n    foldp : F3(foldp),\n    delay : F2(delay),\n    merge : F2(merge),\n    keepIf : F3(function(pred,base,sig) {\n      return new DropIf(function(x) {return !pred(x);},base,sig); }),\n    dropIf : F3(function(pred,base,sig) { return new DropIf(pred,base,sig); }),\n    dropRepeats : function(s) { return new DropRepeats(s);},\n    sampleOn : F2(sampleOn),\n    timestamp : timestamp,\n    input: input,\n    send: F2(send),\n    subscribe: subscribe\n  };\n};\n\nElm.Native.String = {};\nElm.Native.String.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.String = elm.Native.String || {};\n    if (elm.Native.String.values) return elm.Native.String.values;\n    if ('values' in Elm.Native.String) {\n        return elm.Native.String.values = Elm.Native.String.values;\n    }\n\n    var Char = Elm.Char.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Maybe = Elm.Maybe.make(elm);\n    var Result = Elm.Result.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isEmpty(str) {\n        return str.length === 0;\n    }\n    function cons(chr,str) {\n        return chr + str;\n    }\n    function uncons(str) {\n        var hd;\n        return (hd = str[0])\n            ? Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)))\n            : Maybe.Nothing;\n    }\n    function append(a,b) {\n        return a + b;\n    }\n    function concat(strs) {\n        return List.toArray(strs).join('');\n    }\n    function length(str) {\n        return str.length;\n    }\n    function map(f,str) {\n        var out = str.split('');\n        for (var i = out.length; i--; ) {\n            out[i] = f(Utils.chr(out[i]));\n        }\n        return out.join('');\n    }\n    function filter(pred,str) {\n        return str.split('').map(Utils.chr).filter(pred).join('');\n    }\n    function reverse(str) {\n        return str.split('').reverse().join('');\n    }\n    function foldl(f,b,str) {\n        var len = str.length;\n        for (var i = 0; i < len; ++i) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n    function foldr(f,b,str) {\n        for (var i = str.length; i--; ) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n\n    function split(sep, str) {\n        return List.fromArray(str.split(sep));\n    }\n    function join(sep, strs) {\n        return List.toArray(strs).join(sep);\n    }\n    function repeat(n, str) {\n        var result = '';\n        while (n > 0) {\n            if (n & 1) result += str;\n            n >>= 1, str += str;\n        }\n        return result;\n    }\n\n    function slice(start, end, str) {\n        return str.slice(start,end);\n    }\n    function left(n, str) {\n        return n < 1 ? \"\" : str.slice(0,n);\n    }\n    function right(n, str) {\n        return n < 1 ? \"\" : str.slice(-n);\n    }\n    function dropLeft(n, str) {\n        return n < 1 ? str : str.slice(n);\n    }\n    function dropRight(n, str) {\n        return n < 1 ? str : str.slice(0,-n);\n    }\n\n    function pad(n,chr,str) {\n        var half = (n - str.length) / 2;\n        return repeat(Math.ceil(half),chr) + str + repeat(half|0,chr);\n    }\n    function padRight(n,chr,str) {\n        return str + repeat(n - str.length, chr);\n    }\n    function padLeft(n,chr,str) {\n        return repeat(n - str.length, chr) + str;\n    }\n\n    function trim(str) {\n        return str.trim();\n    }\n    function trimLeft(str) {\n        return str.trimLeft();\n    }\n    function trimRight(str) {\n        return str.trimRight();\n    }\n\n    function words(str) {\n        return List.fromArray(str.trim().split(/\\s+/g));\n    }\n    function lines(str) {\n        return List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n    }\n\n    function toUpper(str) {\n        return str.toUpperCase();\n    }\n    function toLower(str) {\n        return str.toLowerCase();\n    }\n\n    function any(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (pred(Utils.chr(str[i]))) return true;\n        }\n        return false;\n    }\n    function all(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (!pred(Utils.chr(str[i]))) return false;\n        }\n        return true;\n    }\n\n    function contains(sub, str) {\n        return str.indexOf(sub) > -1;\n    }\n    function startsWith(sub, str) {\n        return str.indexOf(sub) === 0;\n    }\n    function endsWith(sub, str) {\n        return str.length >= sub.length &&\n               str.lastIndexOf(sub) === str.length - sub.length;\n    }\n    function indexes(sub, str) {\n        var subLen = sub.length;\n        var i = 0;\n        var is = [];\n        while ((i = str.indexOf(sub, i)) > -1) {\n            is.push(i);\n            i = i + subLen;\n        }\n        return List.fromArray(is);\n    }\n\n    function toInt(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n            start = 1;\n        }\n        for (var i = start; i < len; ++i) {\n            if (!Char.isDigit(s[i])) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n        }\n        return Result.Ok(parseInt(s, 10));\n    }\n\n    function toFloat(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n            }\n            start = 1;\n        }\n        var dotCount = 0;\n        for (var i = start; i < len; ++i) {\n            if (Char.isDigit(s[i])) {\n                continue;\n            }\n            if (s[i] === '.') {\n                dotCount += 1;\n                if (dotCount <= 1) {\n                    continue;\n                }\n            }\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        return Result.Ok(parseFloat(s));\n    }\n\n    function toList(str) {\n        return List.fromArray(str.split('').map(Utils.chr));\n    }\n    function fromList(chars) {\n        return List.toArray(chars).join('');\n    }\n\n    return Elm.Native.String.values = {\n        isEmpty: isEmpty,\n        cons: F2(cons),\n        uncons: uncons,\n        append: F2(append),\n        concat: concat,\n        length: length,\n        map: F2(map),\n        filter: F2(filter),\n        reverse: reverse,\n        foldl: F3(foldl),\n        foldr: F3(foldr),\n\n        split: F2(split),\n        join: F2(join),\n        repeat: F2(repeat),\n\n        slice: F3(slice),\n        left: F2(left),\n        right: F2(right),\n        dropLeft: F2(dropLeft),\n        dropRight: F2(dropRight),\n\n        pad: F3(pad),\n        padLeft: F3(padLeft),\n        padRight: F3(padRight),\n\n        trim: trim,\n        trimLeft: trimLeft,\n        trimRight: trimRight,\n\n        words: words,\n        lines: lines,\n\n        toUpper: toUpper,\n        toLower: toLower,\n\n        any: F2(any),\n        all: F2(all),\n\n        contains: F2(contains),\n        startsWith: F2(startsWith),\n        endsWith: F2(endsWith),\n        indexes: F2(indexes),\n\n        toInt: toInt,\n        toFloat: toFloat,\n        toList: toList,\n        fromList: fromList\n    };\n};\n\nElm.Native = Elm.Native || {};\nElm.Native.Utils = {};\nElm.Native.Utils.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Utils = localRuntime.Native.Utils || {};\n    if (localRuntime.Native.Utils.values) {\n        return localRuntime.Native.Utils.values;\n    }\n\n    function eq(l,r) {\n        var stack = [{'x': l, 'y': r}]\n        while (stack.length > 0) {\n            var front = stack.pop();\n            var x = front.x;\n            var y = front.y;\n            if (x === y) continue;\n            if (typeof x === \"object\") {\n                var c = 0;\n                for (var i in x) {\n                    ++c;\n                    if (i in y) {\n                        if (i !== 'ctor') {\n                            stack.push({ 'x': x[i], 'y': y[i] });\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n                if ('ctor' in x) {\n                    stack.push({'x': x.ctor, 'y': y.ctor});\n                }\n                if (c !== Object.keys(y).length) {\n                    return false;\n                };\n            } else if (typeof x === 'function') {\n                throw new Error('Equality error: general function equality is ' +\n                                'undecidable, and therefore, unsupported');\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // code in Generate/JavaScript.hs depends on the particular\n    // integer values assigned to LT, EQ, and GT\n    var LT = -1, EQ = 0, GT = 1, ord = ['LT','EQ','GT'];\n    function compare(x,y) { return { ctor: ord[cmp(x,y)+1] } }\n    function cmp(x,y) {\n        var ord;\n        if (typeof x !== 'object'){\n            return x === y ? EQ : x < y ? LT : GT;\n        }\n        else if (x.isChar){\n            var a = x.toString();\n            var b = y.toString();\n            return a === b ? EQ : a < b ? LT : GT;\n        }\n        else if (x.ctor === \"::\" || x.ctor === \"[]\") {\n            while (true) {\n                if (x.ctor === \"[]\" && y.ctor === \"[]\") return EQ;\n                if (x.ctor !== y.ctor) return x.ctor === '[]' ? LT : GT;\n                ord = cmp(x._0, y._0);\n                if (ord !== EQ) return ord;\n                x = x._1;\n                y = y._1;\n            }\n        }\n        else if (x.ctor.slice(0,6) === '_Tuple') {\n            var n = x.ctor.slice(6) - 0;\n            var err = 'cannot compare tuples with more than 6 elements.';\n            if (n === 0) return EQ;\n            if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n            if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n            if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n            if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n            if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n            if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n            if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n            return EQ;\n        }\n        else {\n            throw new Error('Comparison error: comparison is only defined on ints, ' +\n                            'floats, times, chars, strings, lists of comparable values, ' +\n                            'and tuples of comparable values.');\n        }\n    }\n\n\n    var Tuple0 = { ctor: \"_Tuple0\" };\n    function Tuple2(x,y) {\n        return {\n            ctor: \"_Tuple2\",\n            _0: x,\n            _1: y\n        };\n    }\n\n    function chr(c) {\n        var x = new String(c);\n        x.isChar = true;\n        return x;\n    }\n\n    function txt(str) {\n        var t = new String(str);\n        t.text = true;\n        return t;\n    }\n\n    function makeText(text) {\n        var style = '';\n        var href = '';\n        while (true) {\n            if (text.style) {\n                style += text.style;\n                text = text.text;\n                continue;\n            }\n            if (text.href) {\n                href = text.href;\n                text = text.text;\n                continue;\n            }\n            if (href) {\n                text = '<a href=\"' + href + '\">' + text + '</a>';\n            }\n            if (style) {\n                text = '<span style=\"' + style + '\">' + text + '</span>';\n            }\n            return text;\n        }\n    }\n\n    var count = 0;\n    function guid(_) {\n        return count++\n    }\n\n    function copy(oldRecord) {\n        var newRecord = {};\n        for (var key in oldRecord) {\n            var value = key === '_'\n                ? copy(oldRecord._)\n                : oldRecord[key]\n                ;\n            newRecord[key] = value;\n        }\n        return newRecord;\n    }\n\n    function remove(key, oldRecord) {\n        var record = copy(oldRecord);\n        if (key in record._) {\n            record[key] = record._[key][0];\n            record._[key] = record._[key].slice(1);\n            if (record._[key].length === 0) {\n                delete record._[key];\n            }\n        } else {\n            delete record[key];\n        }\n        return record;\n    }\n\n    function replace(keyValuePairs, oldRecord) {\n        var record = copy(oldRecord);\n        for (var i = keyValuePairs.length; i--; ) {\n            var pair = keyValuePairs[i];\n            record[pair[0]] = pair[1];\n        }\n        return record;\n    }\n\n    function insert(key, value, oldRecord) {\n        var newRecord = copy(oldRecord);\n        if (key in newRecord) {\n            var values = newRecord._[key];\n            var copiedValues = values ? values.slice(0) : [];\n            newRecord._[key] = [newRecord[key]].concat(copiedValues);\n        }\n        newRecord[key] = value;\n        return newRecord;\n    }\n\n    function getXY(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n\n        if (localRuntime.isEmbed()) {\n            var rect = localRuntime.node.getBoundingClientRect();\n            var relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n            var rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n            // TODO: figure out if there is a way to avoid rounding here\n            posx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n            posy = posy - Math.round(rely) - localRuntime.node.clientTop;\n        }\n        return Tuple2(posx, posy);\n    }\n\n\n    //// LIST STUFF ////\n\n    var Nil = { ctor:'[]' };\n\n    function Cons(hd,tl) {\n        return {\n            ctor: \"::\",\n            _0: hd,\n            _1: tl\n        };\n    }\n\n    function append(xs,ys) {\n        // append Text\n        if (xs.text || ys.text) {\n            return txt(makeText(xs) + makeText(ys));\n        }\n\n        // append Strings\n        if (typeof xs === \"string\") {\n            return xs + ys;\n        }\n\n        // append Lists\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    //// RUNTIME ERRORS ////\n\n    function indent(lines) {\n        return '\\n' + lines.join('\\n');\n    }\n\n    function badCase(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in case-expression.',\n            'Make sure your patterns cover every case!'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n    function badIf(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in multi-way-if expression.',\n            'It is best to use \\'otherwise\\' as the last branch of multi-way-if.'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n\n    function badPort(expected, received) {\n        var msg = indent([\n            'Expecting ' + expected + ' but was given ',\n            JSON.stringify(received)\n        ]);\n        throw new Error('Runtime error when sending values through a port.' + msg);\n    }\n\n\n    return localRuntime.Native.Utils.values = {\n        eq:eq,\n        cmp:cmp,\n        compare:F2(compare),\n        Tuple0:Tuple0,\n        Tuple2:Tuple2,\n        chr:chr,\n        txt:txt,\n        makeText:makeText,\n        copy: copy,\n        remove: remove,\n        replace: replace,\n        insert: insert,\n        guid: guid,\n        getXY: getXY,\n\n        Nil: Nil,\n        Cons: Cons,\n        append: F2(append),\n\n        badCase: badCase,\n        badIf: badIf,\n        badPort: badPort\n    };\n};\n\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = createHash\n\nfunction createHash(elem) {\n    var attributes = elem.attributes\n    var hash = {}\n\n    if (attributes === null || attributes === undefined) {\n        return hash\n    }\n\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i]\n\n        if (attr.name.substr(0,5) !== \"data-\") {\n            continue\n        }\n\n        hash[attr.name.substr(5)] = attr.value\n    }\n\n    return hash\n}\n\n},{}],2:[function(require,module,exports){\nvar createStore = require(\"weakmap-shim/create-store\")\nvar Individual = require(\"individual\")\n\nvar createHash = require(\"./create-hash.js\")\n\nvar hashStore = Individual(\"__DATA_SET_WEAKMAP@3\", createStore())\n\nmodule.exports = DataSet\n\nfunction DataSet(elem) {\n    var store = hashStore(elem)\n\n    if (!store.hash) {\n        store.hash = createHash(elem)\n    }\n\n    return store.hash\n}\n\n},{\"./create-hash.js\":1,\"individual\":3,\"weakmap-shim/create-store\":4}],3:[function(require,module,exports){\n(function (global){\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual\n\nfunction Individual(key, value) {\n    if (root[key]) {\n        return root[key]\n    }\n\n    Object.defineProperty(root, key, {\n        value: value\n        , configurable: true\n    })\n\n    return value\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\nvar hiddenStore = require('./hidden-store.js');\n\nmodule.exports = createStore;\n\nfunction createStore() {\n    var key = {};\n\n    return function (obj) {\n        if (typeof obj !== 'object' || obj === null) {\n            throw new Error('Weakmap-shim: Key must be object')\n        }\n\n        var store = obj.valueOf(key);\n        return store && store.identity === key ?\n            store : hiddenStore(obj, key);\n    };\n}\n\n},{\"./hidden-store.js\":5}],5:[function(require,module,exports){\nmodule.exports = hiddenStore;\n\nfunction hiddenStore(obj, key) {\n    var store = { identity: key };\n    var valueOf = obj.valueOf;\n\n    Object.defineProperty(obj, \"valueOf\", {\n        value: function (value) {\n            return value !== key ?\n                valueOf.apply(this, arguments) : store;\n        },\n        writable: true\n    });\n\n    return store;\n}\n\n},{}],6:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = addEvent\n\nfunction addEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        ds[type] = handler\n    } else if (Array.isArray(events)) {\n        if (events.indexOf(handler) === -1) {\n            events.push(handler)\n        }\n    } else if (events !== handler) {\n        ds[type] = [events, handler]\n    }\n}\n\n},{\"data-set\":2}],7:[function(require,module,exports){\nvar globalDocument = require(\"global/document\")\nvar DataSet = require(\"data-set\")\nvar createStore = require(\"weakmap-shim/create-store\")\n\nvar addEvent = require(\"./add-event.js\")\nvar removeEvent = require(\"./remove-event.js\")\nvar ProxyEvent = require(\"./proxy-event.js\")\n\nvar HANDLER_STORE = createStore()\n\nmodule.exports = DOMDelegator\n\nfunction DOMDelegator(document) {\n    document = document || globalDocument\n\n    this.target = document.documentElement\n    this.events = {}\n    this.rawEventListeners = {}\n    this.globalListeners = {}\n}\n\nDOMDelegator.prototype.addEventListener = addEvent\nDOMDelegator.prototype.removeEventListener = removeEvent\n\nDOMDelegator.prototype.allocateHandle =\n    function allocateHandle(func) {\n        var handle = new Handle()\n\n        HANDLER_STORE(handle).func = func;\n\n        return handle\n    }\n\nDOMDelegator.prototype.transformHandle =\n    function transformHandle(handle, lambda) {\n        var func = HANDLER_STORE(handle).func\n\n        return this.allocateHandle(function (ev) {\n            var result = lambda(ev)\n            if (result) {\n                func(result)\n            }\n        })\n    }\n\nDOMDelegator.prototype.addGlobalEventListener =\n    function addGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n        if (listeners.indexOf(fn) === -1) {\n            listeners.push(fn)\n        }\n\n        this.globalListeners[eventName] = listeners;\n    }\n\nDOMDelegator.prototype.removeGlobalEventListener =\n    function removeGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n\n        var index = listeners.indexOf(fn)\n        if (index !== -1) {\n            listeners.splice(index, 1)\n        }\n    }\n\nDOMDelegator.prototype.listenTo = function listenTo(eventName) {\n    if (this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = true\n\n    var listener = this.rawEventListeners[eventName]\n    if (!listener) {\n        listener = this.rawEventListeners[eventName] =\n            createHandler(eventName, this)\n    }\n\n    this.target.addEventListener(eventName, listener, true)\n}\n\nDOMDelegator.prototype.unlistenTo = function unlistenTo(eventName) {\n    if (!this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = false\n    var listener = this.rawEventListeners[eventName]\n\n    if (!listener) {\n        throw new Error(\"dom-delegator#unlistenTo: cannot \" +\n            \"unlisten to \" + eventName)\n    }\n\n    this.target.removeEventListener(eventName, listener, true)\n}\n\nfunction createHandler(eventName, delegator) {\n    var globalListeners = delegator.globalListeners;\n    var delegatorTarget = delegator.target;\n\n    return handler\n\n    function handler(ev) {\n        var globalHandlers = globalListeners[eventName] || []\n\n        if (globalHandlers.length > 0) {\n            var globalEvent = new ProxyEvent(ev);\n            globalEvent.currentTarget = delegatorTarget;\n            callListeners(globalHandlers, globalEvent)\n        }\n\n        findAndInvokeListeners(ev.target, ev, eventName)\n    }\n}\n\nfunction findAndInvokeListeners(elem, ev, eventName) {\n    var listener = getListener(elem, eventName)\n\n    if (listener && listener.handlers.length > 0) {\n        var listenerEvent = new ProxyEvent(ev);\n        listenerEvent.currentTarget = listener.currentTarget\n        callListeners(listener.handlers, listenerEvent)\n\n        if (listenerEvent._bubbles) {\n            var nextTarget = listener.currentTarget.parentNode\n            findAndInvokeListeners(nextTarget, ev, eventName)\n        }\n    }\n}\n\nfunction getListener(target, type) {\n    // terminate recursion if parent is `null`\n    if (target === null) {\n        return null\n    }\n\n    var ds = DataSet(target)\n    // fetch list of handler fns for this event\n    var handler = ds[type]\n    var allHandler = ds.event\n\n    if (!handler && !allHandler) {\n        return getListener(target.parentNode, type)\n    }\n\n    var handlers = [].concat(handler || [], allHandler || [])\n    return new Listener(target, handlers)\n}\n\nfunction callListeners(handlers, ev) {\n    handlers.forEach(function (handler) {\n        if (typeof handler === \"function\") {\n            handler(ev)\n        } else if (typeof handler.handleEvent === \"function\") {\n            handler.handleEvent(ev)\n        } else if (handler.type === \"dom-delegator-handle\") {\n            HANDLER_STORE(handler).func(ev)\n        } else {\n            throw new Error(\"dom-delegator: unknown handler \" +\n                \"found: \" + JSON.stringify(handlers));\n        }\n    })\n}\n\nfunction Listener(target, handlers) {\n    this.currentTarget = target\n    this.handlers = handlers\n}\n\nfunction Handle() {\n    this.type = \"dom-delegator-handle\"\n}\n\n},{\"./add-event.js\":6,\"./proxy-event.js\":15,\"./remove-event.js\":16,\"data-set\":2,\"global/document\":10,\"weakmap-shim/create-store\":13}],8:[function(require,module,exports){\nvar Individual = require(\"individual\")\nvar cuid = require(\"cuid\")\nvar globalDocument = require(\"global/document\")\n\nvar DOMDelegator = require(\"./dom-delegator.js\")\n\nvar delegatorCache = Individual(\"__DOM_DELEGATOR_CACHE@9\", {\n    delegators: {}\n})\nvar commonEvents = [\n    \"blur\", \"change\", \"click\",  \"contextmenu\", \"dblclick\",\n    \"error\",\"focus\", \"focusin\", \"focusout\", \"input\", \"keydown\",\n    \"keypress\", \"keyup\", \"load\", \"mousedown\", \"mouseup\",\n    \"resize\", \"scroll\", \"select\", \"submit\", \"touchcancel\",\n    \"touchend\", \"touchstart\", \"unload\"\n]\n\n/*  Delegator is a thin wrapper around a singleton `DOMDelegator`\n        instance.\n\n    Only one DOMDelegator should exist because we do not want\n        duplicate event listeners bound to the DOM.\n\n    `Delegator` will also `listenTo()` all events unless\n        every caller opts out of it\n*/\nmodule.exports = Delegator\n\nfunction Delegator(opts) {\n    opts = opts || {}\n    var document = opts.document || globalDocument\n\n    var cacheKey = document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"]\n\n    if (!cacheKey) {\n        cacheKey =\n            document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"] = cuid()\n    }\n\n    var delegator = delegatorCache.delegators[cacheKey]\n\n    if (!delegator) {\n        delegator = delegatorCache.delegators[cacheKey] =\n            new DOMDelegator(document)\n    }\n\n    if (opts.defaultEvents !== false) {\n        for (var i = 0; i < commonEvents.length; i++) {\n            delegator.listenTo(commonEvents[i])\n        }\n    }\n\n    return delegator\n}\n\n\n\n},{\"./dom-delegator.js\":7,\"cuid\":9,\"global/document\":10,\"individual\":11}],9:[function(require,module,exports){\n/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\n/*global window, navigator, document, require, process, module */\n(function (app) {\n  'use strict';\n  var namespace = 'cuid',\n    c = 0,\n    blockSize = 4,\n    base = 36,\n    discreteValues = Math.pow(base, blockSize),\n\n    pad = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length-size);\n    },\n\n    randomBlock = function randomBlock() {\n      return pad((Math.random() *\n            discreteValues << 0)\n            .toString(base), blockSize);\n    },\n\n    safeCounter = function () {\n      c = (c < discreteValues) ? c : 0;\n      c++; // this is not subliminal\n      return c - 1;\n    },\n\n    api = function cuid() {\n      // Starting with a lowercase letter makes\n      // it HTML element ID friendly.\n      var letter = 'c', // hard-coded allows for sequential access\n\n        // timestamp\n        // warning: this exposes the exact date and time\n        // that the uid was created.\n        timestamp = (new Date().getTime()).toString(base),\n\n        // Prevent same-machine collisions.\n        counter,\n\n        // A few chars to generate distinct ids for different\n        // clients (so different computers are far less\n        // likely to generate the same id)\n        fingerprint = api.fingerprint(),\n\n        // Grab some more chars from Math.random()\n        random = randomBlock() + randomBlock();\n\n        counter = pad(safeCounter().toString(base), blockSize);\n\n      return  (letter + timestamp + counter + fingerprint + random);\n    };\n\n  api.slug = function slug() {\n    var date = new Date().getTime().toString(36),\n      counter,\n      print = api.fingerprint().slice(0,1) +\n        api.fingerprint().slice(-1),\n      random = randomBlock().slice(-2);\n\n      counter = safeCounter().toString(36).slice(-4);\n\n    return date.slice(-2) +\n      counter + print + random;\n  };\n\n  api.globalCount = function globalCount() {\n    // We want to cache the results of this\n    var cache = (function calc() {\n        var i,\n          count = 0;\n\n        for (i in window) {\n          count++;\n        }\n\n        return count;\n      }());\n\n    api.globalCount = function () { return cache; };\n    return cache;\n  };\n\n  api.fingerprint = function browserPrint() {\n    return pad((navigator.mimeTypes.length +\n      navigator.userAgent.length).toString(36) +\n      api.globalCount().toString(36), 4);\n  };\n\n  // don't change anything from here down.\n  if (app.register) {\n    app.register(namespace, api);\n  } else if (typeof module !== 'undefined') {\n    module.exports = api;\n  } else {\n    app[namespace] = api;\n  }\n\n}(this.applitude || this));\n\n},{}],10:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":40}],11:[function(require,module,exports){\nmodule.exports=require(3)\n},{}],12:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],13:[function(require,module,exports){\nmodule.exports=require(4)\n},{\"./hidden-store.js\":14}],14:[function(require,module,exports){\nmodule.exports=require(5)\n},{}],15:[function(require,module,exports){\nvar inherits = require(\"inherits\")\n\nvar ALL_PROPS = [\n    \"altKey\", \"bubbles\", \"cancelable\", \"ctrlKey\",\n    \"eventPhase\", \"metaKey\", \"relatedTarget\", \"shiftKey\",\n    \"target\", \"timeStamp\", \"type\", \"view\", \"which\"\n]\nvar KEY_PROPS = [\"char\", \"charCode\", \"key\", \"keyCode\"]\nvar MOUSE_PROPS = [\n    \"button\", \"buttons\", \"clientX\", \"clientY\", \"layerX\",\n    \"layerY\", \"offsetX\", \"offsetY\", \"pageX\", \"pageY\",\n    \"screenX\", \"screenY\", \"toElement\"\n]\n\nvar rkeyEvent = /^key|input/\nvar rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/\n\nmodule.exports = ProxyEvent\n\nfunction ProxyEvent(ev) {\n    if (!(this instanceof ProxyEvent)) {\n        return new ProxyEvent(ev)\n    }\n\n    if (rkeyEvent.test(ev.type)) {\n        return new KeyEvent(ev)\n    } else if (rmouseEvent.test(ev.type)) {\n        return new MouseEvent(ev)\n    }\n\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    this._rawEvent = ev\n    this._bubbles = false;\n}\n\nProxyEvent.prototype.preventDefault = function () {\n    this._rawEvent.preventDefault()\n}\n\nProxyEvent.prototype.startPropagation = function () {\n    this._bubbles = true;\n}\n\nfunction MouseEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < MOUSE_PROPS.length; j++) {\n        var mousePropKey = MOUSE_PROPS[j]\n        this[mousePropKey] = ev[mousePropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(MouseEvent, ProxyEvent)\n\nfunction KeyEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < KEY_PROPS.length; j++) {\n        var keyPropKey = KEY_PROPS[j]\n        this[keyPropKey] = ev[keyPropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(KeyEvent, ProxyEvent)\n\n},{\"inherits\":12}],16:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = removeEvent\n\nfunction removeEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        return\n    } else if (Array.isArray(events)) {\n        var index = events.indexOf(handler)\n        if (index !== -1) {\n            events.splice(index, 1)\n        }\n    } else if (events === handler) {\n        ds[type] = null\n    }\n}\n\n},{\"data-set\":2}],17:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"vtree/is-vhook\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, props, previous, propName);\n        } else if (isHook(propValue)) {\n            propValue.hook(node,\n                propName,\n                previous ? previous[propName] : undefined)\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else if (propValue !== undefined) {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, props, previous, propName) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{\"is-object\":21,\"vtree/is-vhook\":29}],18:[function(require,module,exports){\nvar document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"vtree/is-vnode\")\nvar isVText = require(\"vtree/is-vtext\")\nvar isWidget = require(\"vtree/is-widget\")\nvar handleThunk = require(\"vtree/handle-thunk\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{\"./apply-properties\":17,\"global/document\":20,\"vtree/handle-thunk\":27,\"vtree/is-vnode\":30,\"vtree/is-vtext\":31,\"vtree/is-widget\":32}],19:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],20:[function(require,module,exports){\nmodule.exports=require(10)\n},{\"min-document\":40}],21:[function(require,module,exports){\nmodule.exports = isObject\n\nfunction isObject(x) {\n    return typeof x === \"object\" && x !== null\n}\n\n},{}],22:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n\n},{}],23:[function(require,module,exports){\nvar applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"vtree/is-widget\")\nvar VPatch = require(\"vtree/vpatch\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    if (updateWidget(leftVNode, widget)) {\n        return widget.update(leftVNode, domNode) || domNode\n    }\n\n    var parentNode = domNode.parentNode\n    var newWidget = render(widget, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newWidget, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newWidget\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, bIndex) {\n    var children = []\n    var childNodes = domNode.childNodes\n    var len = childNodes.length\n    var i\n    var reverseIndex = bIndex.reverse\n\n    for (i = 0; i < len; i++) {\n        children.push(domNode.childNodes[i])\n    }\n\n    var insertOffset = 0\n    var move\n    var node\n    var insertNode\n    for (i = 0; i < len; i++) {\n        move = bIndex[i]\n        if (move !== undefined && move !== i) {\n            // the element currently at this index will be moved later so increase the insert offset\n            if (reverseIndex[i] > i) {\n                insertOffset++\n            }\n\n            node = children[move]\n            insertNode = childNodes[i + insertOffset] || null\n            if (node !== insertNode) {\n                domNode.insertBefore(node, insertNode)\n            }\n\n            // the moved element came from the front of the array so reduce the insert offset\n            if (move < i) {\n                insertOffset--\n            }\n        }\n\n        // element at this index is scheduled to be removed so increase insert offset\n        if (i in bIndex.removes) {\n            insertOffset++\n        }\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        console.log(oldRoot)\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{\"./apply-properties\":17,\"./create-element\":18,\"./update-widget\":25,\"vtree/is-widget\":32,\"vtree/vpatch\":37}],24:[function(require,module,exports){\nvar document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{\"./dom-index\":19,\"./patch-op\":23,\"global/document\":20,\"x-is-array\":22}],25:[function(require,module,exports){\nvar isWidget = require(\"vtree/is-widget\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{\"vtree/is-widget\":32}],26:[function(require,module,exports){\nvar isArray = require(\"x-is-array\")\nvar isObject = require(\"is-object\")\n\nvar VPatch = require(\"./vpatch\")\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar handleThunk = require(\"./handle-thunk\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        if (isThunk(a) || isThunk(b)) {\n            thunks(a, b, patch, index)\n        } else {\n            hooks(b, patch, index)\n        }\n        return\n    }\n\n    var apply = patch[index]\n\n    if (b == null) {\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n        destroyWidgets(a, patch, index)\n    } else if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties, b.hooks)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                destroyWidgets(a, patch, index)\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            destroyWidgets(a, patch, index)\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            destroyWidgets(a, patch, index)\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n\n        if (!isWidget(a)) {\n            destroyWidgets(a, patch, index)\n        }\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n}\n\nfunction diffProps(a, b, hooks) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (hooks && aKey in hooks) {\n            diff = diff || {}\n            diff[aKey] = bValue\n        } else {\n            if (isObject(aValue) && isObject(bValue)) {\n                if (getPrototype(bValue) !== getPrototype(aValue)) {\n                    diff = diff || {}\n                    diff[aKey] = bValue\n                } else {\n                    var objectDiff = diffProps(aValue, bValue)\n                    if (objectDiff) {\n                        diff = diff || {}\n                        diff[aKey] = objectDiff\n                    }\n                }\n            } else if (aValue !== bValue) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            }\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var bChildren = reorder(aChildren, b.children)\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else if (!rightNode) {\n            if (leftNode) {\n                // Excess nodes in a need to be removed\n                patch[index] = new VPatch(VPatch.REMOVE, leftNode, null)\n                destroyWidgets(leftNode, patch, index)\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (bChildren.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, bChildren.moves))\n    }\n\n    return apply\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = new VPatch(VPatch.REMOVE, vNode, null)\n        }\n    } else if (isVNode(vNode) && vNode.hasWidgets) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b);\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// Execute hooks when two nodes are identical\nfunction hooks(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = new VPatch(VPatch.PROPS, vNode.hooks, vNode.hooks)\n        }\n\n        if (vNode.descendantHooks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                hooks(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    }\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n\n    var bKeys = keyIndex(bChildren)\n\n    if (!bKeys) {\n        return bChildren\n    }\n\n    var aKeys = keyIndex(aChildren)\n\n    if (!aKeys) {\n        return bChildren\n    }\n\n    var bMatch = {}, aMatch = {}\n\n    for (var key in bKeys) {\n        bMatch[bKeys[key]] = aKeys[key]\n    }\n\n    for (var key in aKeys) {\n        aMatch[aKeys[key]] = bKeys[key]\n    }\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n    var shuffle = []\n    var freeIndex = 0\n    var i = 0\n    var moveIndex = 0\n    var moves = {}\n    var removes = moves.removes = {}\n    var reverse = moves.reverse = {}\n    var hasMoves = false\n\n    while (freeIndex < len) {\n        var move = aMatch[i]\n        if (move !== undefined) {\n            shuffle[i] = bChildren[move]\n            if (move !== moveIndex) {\n                moves[move] = moveIndex\n                reverse[moveIndex] = move\n                hasMoves = true\n            }\n            moveIndex++\n        } else if (i in aMatch) {\n            shuffle[i] = undefined\n            removes[i] = moveIndex++\n            hasMoves = true\n        } else {\n            while (bMatch[freeIndex] !== undefined) {\n                freeIndex++\n            }\n\n            if (freeIndex < len) {\n                var freeChild = bChildren[freeIndex]\n                if (freeChild) {\n                    shuffle[i] = freeChild\n                    if (freeIndex !== moveIndex) {\n                        hasMoves = true\n                        moves[freeIndex] = moveIndex\n                        reverse[moveIndex] = freeIndex\n                    }\n                    moveIndex++\n                }\n                freeIndex++\n            }\n        }\n        i++\n    }\n\n    if (hasMoves) {\n        shuffle.moves = moves\n    }\n\n    return shuffle\n}\n\nfunction keyIndex(children) {\n    var i, keys\n\n    for (i = 0; i < children.length; i++) {\n        var child = children[i]\n\n        if (child.key !== undefined) {\n            keys = keys || {}\n            keys[child.key] = i\n        }\n    }\n\n    return keys\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{\"./handle-thunk\":27,\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32,\"./vpatch\":37,\"is-object\":33,\"x-is-array\":34}],27:[function(require,module,exports){\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n\n},{\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32}],28:[function(require,module,exports){\nmodule.exports = isThunk\n\nfunction isThunk(t) {\n    return t && t.type === \"Thunk\"\n}\n\n},{}],29:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook && typeof hook.hook === \"function\" &&\n        !hook.hasOwnProperty(\"hook\")\n}\n\n},{}],30:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n\n},{\"./version\":35}],31:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n\n},{\"./version\":35}],32:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n\n},{}],33:[function(require,module,exports){\nmodule.exports=require(21)\n},{}],34:[function(require,module,exports){\nmodule.exports=require(22)\n},{}],35:[function(require,module,exports){\nmodule.exports = \"1\"\n\n},{}],36:[function(require,module,exports){\nvar version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property)) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n\n},{\"./is-vhook\":29,\"./is-vnode\":30,\"./is-widget\":32,\"./version\":35}],37:[function(require,module,exports){\nvar version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n\n},{\"./version\":35}],38:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n\n},{\"./version\":35}],39:[function(require,module,exports){\n\nvar VNode = require('vtree/vnode');\nvar VText = require('vtree/vtext');\nvar diff = require('vtree/diff');\nvar patch = require('vdom/patch');\nvar createElement = require('vdom/create-element');\nvar DataSet = require(\"data-set\");\nvar Delegator = require(\"dom-delegator\");\nvar isHook = require(\"vtree/is-vhook\");\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.VirtualDom = elm.Native.VirtualDom || {};\n    if (elm.Native.VirtualDom.values) {\n        return elm.Native.VirtualDom.values;\n    }\n\n    // This manages event listeners. Somehow...\n    var delegator = Delegator();\n\n    var NativeElement = Elm.Native.Graphics.Element.make(elm);\n    var Element = Elm.Graphics.Element.make(elm);\n    var Json = Elm.Native.Json.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function listToObject(list) {\n        var object = {};\n        while (list.ctor !== '[]') {\n            var entry = list._0;\n            object[entry.key] = entry.value;\n            list = list._1;\n        }\n        return object;\n    }\n\n    function node(name, propertyList, contents) {\n        var props = listToObject(propertyList);\n\n        var key, namespace;\n        // support keys\n        if (props.key !== undefined) {\n            key = props.key;\n            props.key = undefined;\n        }\n\n        // support namespace\n        if (props.namespace !== undefined) {\n            namespace = props.namespace;\n            props.namespace = undefined;\n        }\n\n        // ensure that setting text of an input does not move the cursor\n        var useSoftSet =\n            name === 'input'\n            && props.value !== undefined\n            && !isHook(props.value);\n\n        if (useSoftSet) {\n            props.value = SoftSetHook(props.value);\n        }\n\n        return new VNode(name, props, List.toArray(contents), key, namespace);\n    }\n\n    function property(key, value) {\n        return {\n            key: key,\n            value: value\n        };\n    }\n\n    function on(name, decoder, createMessage) {\n        function eventHandler(event) {\n            var value = A2(Json.runDecoderValue, decoder, event);\n            if (value.ctor === 'Ok') {\n                createMessage(value._0)();\n            }\n        }\n        return property(name, DataSetHook(eventHandler));\n    }\n\n    function DataSetHook(value) {\n        if (!(this instanceof DataSetHook)) {\n            return new DataSetHook(value);\n        }\n\n        this.value = value;\n    }\n\n    DataSetHook.prototype.hook = function (node, propertyName) {\n        var ds = DataSet(node);\n        ds[propertyName] = this.value;\n    };\n\n\n    function SoftSetHook(value) {\n      if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n      }\n\n      this.value = value;\n    }\n\n    SoftSetHook.prototype.hook = function (node, propertyName) {\n      if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n      }\n    };\n\n    function text(string) {\n        return new VText(string);\n    }\n\n    function fromElement(element) {\n        return {\n            type: \"Widget\",\n\n            element: element,\n\n            init: function () {\n                return NativeElement.render(element);\n            },\n\n            update: function (previous, node) {\n                return NativeElement.update(node, previous.element, element);\n            }\n        };\n    }\n\n    function toElement(width, height, html) {\n        return A3(Element.newElement, width, height,\n                  { ctor: 'Custom'\n                  , type: 'evancz/elm-html'\n                  , render: render\n                  , update: update\n                  , model: html\n                  });\n    }\n\n    function render(model) {\n        var element = NativeElement.createNode('div');\n        element.appendChild(createElement(model));\n        return element;\n    }\n\n    function update(node, oldModel, newModel) {\n        var patches = diff(oldModel, newModel);\n        var newNode = patch(node.firstChild, patches)\n        if (newNode !== node.firstChild) {\n            node.replaceChild(newNode, node.firstChild)\n        }\n        return node;\n    }\n\n    function lazyRef(fn, a) {\n        function thunk() {\n            return fn(a);\n        }\n        return new Thunk(fn, [a], thunk);\n    }\n\n    function lazyRef2(fn, a, b) {\n        function thunk() {\n            return A2(fn, a, b);\n        }\n        return new Thunk(fn, [a,b], thunk);\n    }\n\n    function lazyRef3(fn, a, b, c) {\n        function thunk() {\n            return A3(fn, a, b, c);\n        }\n        return new Thunk(fn, [a,b,c], thunk);\n    }\n\n    function Thunk(fn, args, thunk) {\n        this.fn = fn;\n        this.args = args;\n        this.vnode = null;\n        this.key = undefined;\n        this.thunk = thunk;\n    }\n\n    Thunk.prototype.type = \"Thunk\";\n    Thunk.prototype.update = updateThunk;\n    Thunk.prototype.render = renderThunk;\n\n    function shouldUpdate(current, previous) {\n        if (current.fn !== previous.fn) {\n            return true;\n        }\n\n        // if it's the same function, we know the number of args must match\n        var cargs = current.args;\n        var pargs = previous.args;\n\n        for (var i = cargs.length; i--; ) {\n            if (cargs[i] !== pargs[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function updateThunk(previous, domNode) {\n        if (!shouldUpdate(this, previous)) {\n            this.vnode = previous.vnode;\n            return;\n        }\n\n        if (!this.vnode) {\n            this.vnode = this.thunk();\n        }\n\n        var patches = diff(previous.vnode, this.vnode);\n        patch(domNode, patches);\n    }\n\n    function renderThunk() {\n        return this.thunk();\n    }\n\n    return Elm.Native.VirtualDom.values = {\n        node: F3(node),\n        text: text,\n        on: F3(on),\n\n        property: F2(property),\n\n        lazy: F2(lazyRef),\n        lazy2: F3(lazyRef2),\n        lazy3: F4(lazyRef3),\n\n        toElement: F3(toElement),\n        fromElement: fromElement\n    };\n};\n\n},{\"data-set\":2,\"dom-delegator\":8,\"vdom/create-element\":18,\"vdom/patch\":24,\"vtree/diff\":26,\"vtree/is-vhook\":29,\"vtree/vnode\":36,\"vtree/vtext\":38}],40:[function(require,module,exports){\n\n},{}]},{},[39]);\n\nElm.Native = Elm.Native || {};\nElm.Native.Window = {};\nElm.Native.Window.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Window = localRuntime.Native.Window || {};\n    if (localRuntime.Native.Window.values) {\n        return localRuntime.Native.Window.values;\n    }\n\n    var Signal = Elm.Signal.make(localRuntime);\n    var NS = Elm.Native.Signal.make(localRuntime);\n    var Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\n    function getWidth() {\n        return localRuntime.node.clientWidth;\n    }\n    function getHeight() {\n        if (localRuntime.isFullscreen()) {\n            return window.innerHeight;\n        }\n        return localRuntime.node.clientHeight;\n    }\n\n    var dimensions = NS.input(Tuple2(getWidth(), getHeight()));\n    dimensions.defaultNumberOfKids = 2;\n\n    // Do not move width and height into Elm. By setting the default number of kids,\n    // the resize listener can be detached.\n    var width  = A2(Signal.map, function(p){return p._0;}, dimensions);\n    width.defaultNumberOfKids = 0;\n\n    var height = A2(Signal.map, function(p){return p._1;}, dimensions);\n    height.defaultNumberOfKids = 0;\n\n    function resizeIfNeeded() {\n        // Do not trigger event if the dimensions have not changed.\n        // This should be most of the time.\n        var w = getWidth();\n        var h = getHeight();\n        if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n\n        setTimeout(function () {\n            // Check again to see if the dimensions have changed.\n            // It is conceivable that the dimensions have changed\n            // again while some other event was being processed.\n            var w = getWidth();\n            var h = getHeight();\n            if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n            localRuntime.notify(dimensions.id, Tuple2(w,h));\n        }, 0);\n    }\n    localRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\n    return localRuntime.Native.Window.values = {\n        dimensions: dimensions,\n        width: width,\n        height: height,\n        resizeIfNeeded: resizeIfNeeded\n    };\n\n};\n\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   \"use strict\";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values)\n   return _elm.Result.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Result\",\n   $Maybe = Elm.Maybe.make(_elm);\n   var toMaybe = function (result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return $Maybe.Nothing;\n            case \"Ok\":\n            return $Maybe.Just(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 110 and 123\");\n      }();\n   };\n   var Err = function (a) {\n      return {ctor: \"Err\",_0: a};\n   };\n   var andThen = F2(function (result,\n   callback) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return callback(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 72 and 91\");\n      }();\n   });\n   var Ok = function (a) {\n      return {ctor: \"Ok\",_0: a};\n   };\n   var map = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return Ok(f(result._0));}\n         _U.badCase($moduleName,\n         \"between lines 32 and 69\");\n      }();\n   });\n   var formatError = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(f(result._0));\n            case \"Ok\":\n            return Ok(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 94 and 107\");\n      }();\n   });\n   var fromMaybe = F2(function (err,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Ok(maybe._0);\n            case \"Nothing\":\n            return Err(err);}\n         _U.badCase($moduleName,\n         \"between lines 126 and 128\");\n      }();\n   });\n   _elm.Result.values = {_op: _op\n                        ,Ok: Ok\n                        ,Err: Err\n                        ,map: map\n                        ,andThen: andThen\n                        ,formatError: formatError\n                        ,toMaybe: toMaybe\n                        ,fromMaybe: fromMaybe};\n   return _elm.Result.values;\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values)\n   return _elm.Signal.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Signal\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm);\n   var subscribe = $Native$Signal.subscribe;\n   var send = $Native$Signal.send;\n   var channel = $Native$Signal.input;\n   var Message = {ctor: \"Message\"};\n   var Channel = {ctor: \"Channel\"};\n   _op[\"~\"] = F2(function (sf,s) {\n      return A3($Native$Signal.map2,\n      F2(function (f,x) {\n         return f(x);\n      }),\n      sf,\n      s);\n   });\n   _op[\"<~\"] = F2(function (f,s) {\n      return A2($Native$Signal.map,\n      f,\n      s);\n   });\n   var sampleOn = $Native$Signal.sampleOn;\n   var dropRepeats = $Native$Signal.dropRepeats;\n   var dropIf = $Native$Signal.dropIf;\n   var keepIf = $Native$Signal.keepIf;\n   var keepWhen = F3(function (bs,\n   def,\n   sig) {\n      return A2(_op[\"<~\"],\n      $Basics.snd,\n      A3(keepIf,\n      $Basics.fst,\n      {ctor: \"_Tuple2\"\n      ,_0: false\n      ,_1: def},\n      A2(_op[\"~\"],\n      A2(_op[\"<~\"],\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      A2(sampleOn,sig,bs)),\n      sig)));\n   });\n   var dropWhen = function (bs) {\n      return keepWhen(A2(_op[\"<~\"],\n      $Basics.not,\n      bs));\n   };\n   var merge = $Native$Signal.merge;\n   var mergeMany = function (signals) {\n      return A2($List.foldr1,\n      merge,\n      signals);\n   };\n   var foldp = $Native$Signal.foldp;\n   var map5 = $Native$Signal.map5;\n   var map4 = $Native$Signal.map4;\n   var map3 = $Native$Signal.map3;\n   var map2 = $Native$Signal.map2;\n   var map = $Native$Signal.map;\n   var constant = $Native$Signal.constant;\n   var Signal = {ctor: \"Signal\"};\n   _elm.Signal.values = {_op: _op\n                        ,Signal: Signal\n                        ,constant: constant\n                        ,map: map\n                        ,map2: map2\n                        ,map3: map3\n                        ,map4: map4\n                        ,map5: map5\n                        ,foldp: foldp\n                        ,merge: merge\n                        ,mergeMany: mergeMany\n                        ,keepIf: keepIf\n                        ,dropIf: dropIf\n                        ,keepWhen: keepWhen\n                        ,dropWhen: dropWhen\n                        ,dropRepeats: dropRepeats\n                        ,sampleOn: sampleOn\n                        ,Channel: Channel\n                        ,Message: Message\n                        ,channel: channel\n                        ,send: send\n                        ,subscribe: subscribe};\n   return _elm.Signal.values;\n};\nElm.String = Elm.String || {};\nElm.String.make = function (_elm) {\n   \"use strict\";\n   _elm.String = _elm.String || {};\n   if (_elm.String.values)\n   return _elm.String.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"String\",\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$String = Elm.Native.String.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var fromList = $Native$String.fromList;\n   var toList = $Native$String.toList;\n   var toFloat = $Native$String.toFloat;\n   var toInt = $Native$String.toInt;\n   var indices = $Native$String.indexes;\n   var indexes = $Native$String.indexes;\n   var endsWith = $Native$String.endsWith;\n   var startsWith = $Native$String.startsWith;\n   var contains = $Native$String.contains;\n   var all = $Native$String.all;\n   var any = $Native$String.any;\n   var toLower = $Native$String.toLower;\n   var toUpper = $Native$String.toUpper;\n   var lines = $Native$String.lines;\n   var words = $Native$String.words;\n   var trimRight = $Native$String.trimRight;\n   var trimLeft = $Native$String.trimLeft;\n   var trim = $Native$String.trim;\n   var padRight = $Native$String.padRight;\n   var padLeft = $Native$String.padLeft;\n   var pad = $Native$String.pad;\n   var dropRight = $Native$String.dropRight;\n   var dropLeft = $Native$String.dropLeft;\n   var right = $Native$String.right;\n   var left = $Native$String.left;\n   var slice = $Native$String.slice;\n   var repeat = $Native$String.repeat;\n   var join = $Native$String.join;\n   var split = $Native$String.split;\n   var foldr = $Native$String.foldr;\n   var foldl = $Native$String.foldl;\n   var reverse = $Native$String.reverse;\n   var filter = $Native$String.filter;\n   var map = $Native$String.map;\n   var length = $Native$String.length;\n   var concat = $Native$String.concat;\n   var append = $Native$String.append;\n   var uncons = $Native$String.uncons;\n   var cons = $Native$String.cons;\n   var fromChar = function ($char) {\n      return A2(cons,$char,\"\");\n   };\n   var isEmpty = $Native$String.isEmpty;\n   _elm.String.values = {_op: _op\n                        ,isEmpty: isEmpty\n                        ,cons: cons\n                        ,fromChar: fromChar\n                        ,uncons: uncons\n                        ,append: append\n                        ,concat: concat\n                        ,length: length\n                        ,map: map\n                        ,filter: filter\n                        ,reverse: reverse\n                        ,foldl: foldl\n                        ,foldr: foldr\n                        ,split: split\n                        ,join: join\n                        ,repeat: repeat\n                        ,slice: slice\n                        ,left: left\n                        ,right: right\n                        ,dropLeft: dropLeft\n                        ,dropRight: dropRight\n                        ,pad: pad\n                        ,padLeft: padLeft\n                        ,padRight: padRight\n                        ,trim: trim\n                        ,trimLeft: trimLeft\n                        ,trimRight: trimRight\n                        ,words: words\n                        ,lines: lines\n                        ,toUpper: toUpper\n                        ,toLower: toLower\n                        ,any: any\n                        ,all: all\n                        ,contains: contains\n                        ,startsWith: startsWith\n                        ,endsWith: endsWith\n                        ,indexes: indexes\n                        ,indices: indices\n                        ,toInt: toInt\n                        ,toFloat: toFloat\n                        ,toList: toList\n                        ,fromList: fromList};\n   return _elm.String.values;\n};\nElm.Task = Elm.Task || {};\nElm.Task.make = function (_elm) {\n   \"use strict\";\n   _elm.Task = _elm.Task || {};\n   if (_elm.Task.values)\n   return _elm.Task.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Task\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm);\n   var onFinish = F2(function (enterMessage,\n   escapeMessage) {\n      return function () {\n         var select = function (key) {\n            return function () {\n               switch (key)\n               {case 13:\n                  return $Result.Ok(enterMessage);\n                  case 27:\n                  return $Result.Ok(escapeMessage);}\n               return $Result.Err(\"Not a \\'finish\\' key, such as ENTER or ESCAPE\");\n            }();\n         };\n         return A3($Html$Events.on,\n         \"keydown\",\n         A2($Json$Decode.customDecoder,\n         $Html$Events.keyCode,\n         select),\n         $Basics.identity);\n      }();\n   });\n   var update = F2(function (update,\n   task) {\n      return function () {\n         switch (update.ctor)\n         {case \"Cancel\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Nothing]],\n              task));\n            case \"Commit\":\n            return function () {\n                 var _v4 = task.edits;\n                 switch (_v4.ctor)\n                 {case \"Just\":\n                    return function () {\n                         var description = $String.trim(_v4._0);\n                         return $String.isEmpty(description) ? $Maybe.Nothing : $Maybe.Just(_U.replace([[\"edits\"\n                                                                                                        ,$Maybe.Nothing]\n                                                                                                       ,[\"description\"\n                                                                                                        ,description]],\n                         task));\n                      }();\n                    case \"Nothing\":\n                    return $Maybe.Just(task);}\n                 _U.badCase($moduleName,\n                 \"between lines 56 and 69\");\n              }();\n            case \"Completed\":\n            return $Maybe.Just(_U.replace([[\"completed\"\n                                           ,update._0]],\n              task));\n            case \"Delete\":\n            return $Maybe.Nothing;\n            case \"Edit\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(update._0)]],\n              task));\n            case \"Focus\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(task.description)]],\n              task));}\n         _U.badCase($moduleName,\n         \"between lines 45 and 73\");\n      }();\n   });\n   var Delete = {ctor: \"Delete\"};\n   var Completed = function (a) {\n      return {ctor: \"Completed\"\n             ,_0: a};\n   };\n   var Commit = {ctor: \"Commit\"};\n   var Cancel = {ctor: \"Cancel\"};\n   var Edit = function (a) {\n      return {ctor: \"Edit\",_0: a};\n   };\n   var Focus = {ctor: \"Focus\"};\n   var view = F2(function (channel,\n   task) {\n      return function () {\n         var description = A2($Maybe.withDefault,\n         task.description,\n         task.edits);\n         var className = A2($Basics._op[\"++\"],\n         task.completed ? \"completed \" : \"\",\n         function () {\n            var _v6 = task.edits;\n            switch (_v6.ctor)\n            {case \"Just\": return \"editing\";\n               case \"Nothing\": return \"\";}\n            _U.badCase($moduleName,\n            \"between lines 82 and 86\");\n         }());\n         return A2($Html.li,\n         _L.fromArray([$Html$Attributes.$class(className)]),\n         _L.fromArray([A2($Html.div,\n                      _L.fromArray([$Html$Attributes.$class(\"view\")]),\n                      _L.fromArray([A2($Html.input,\n                                   _L.fromArray([$Html$Attributes.$class(\"toggle\")\n                                                ,$Html$Attributes.type$(\"checkbox\")\n                                                ,$Html$Attributes.checked(task.completed)\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Completed($Basics.not(task.completed))}))]),\n                                   _L.fromArray([]))\n                                   ,A2($Html.label,\n                                   _L.fromArray([$Html$Events.onDoubleClick(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Focus}))]),\n                                   _L.fromArray([$Html.text(description)]))\n                                   ,A2($Html.button,\n                                   _L.fromArray([$Html$Attributes.$class(\"destroy\")\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Delete}))]),\n                                   _L.fromArray([]))]))\n                      ,A2($Html.input,\n                      _L.fromArray([$Html$Attributes.$class(\"edit\")\n                                   ,$Html$Attributes.value(description)\n                                   ,$Html$Attributes.name(\"title\")\n                                   ,$Html$Attributes.id(A2($Basics._op[\"++\"],\n                                   \"todo-\",\n                                   $Basics.toString(task.id)))\n                                   ,A3($Html$Events.on,\n                                   \"input\",\n                                   $Html$Events.targetValue,\n                                   function (desc) {\n                                      return A2($LocalChannel.send,\n                                      channel,\n                                      {ctor: \"_Tuple2\"\n                                      ,_0: task.id\n                                      ,_1: Edit(desc)});\n                                   })\n                                   ,$Html$Events.onBlur(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}))\n                                   ,A2(onFinish,\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}),\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Cancel}))]),\n                      _L.fromArray([]))]));\n      }();\n   });\n   var init = F2(function (desc,\n   id) {\n      return {_: {}\n             ,completed: false\n             ,description: desc\n             ,edits: $Maybe.Nothing\n             ,id: id};\n   });\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,completed: b\n             ,description: a\n             ,edits: c\n             ,id: d};\n   });\n   _elm.Task.values = {_op: _op\n                      ,Model: Model\n                      ,init: init\n                      ,Focus: Focus\n                      ,Edit: Edit\n                      ,Cancel: Cancel\n                      ,Commit: Commit\n                      ,Completed: Completed\n                      ,Delete: Delete\n                      ,update: update\n                      ,view: view\n                      ,onFinish: onFinish};\n   return _elm.Task.values;\n};\nElm.Todo = Elm.Todo || {};\nElm.Todo.make = function (_elm) {\n   \"use strict\";\n   _elm.Todo = _elm.Todo || {};\n   if (_elm.Todo.values)\n   return _elm.Todo.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Todo\",\n   $Basics = Elm.Basics.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Html$Lazy = Elm.Html.Lazy.make(_elm),\n   $List = Elm.List.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm),\n   $Task = Elm.Task.make(_elm),\n   $Window = Elm.Window.make(_elm);\n   var route = _P.portIn(\"route\",\n   _P.incomingSignal(function (v) {\n      return typeof v === \"string\" || typeof v === \"object\" && v instanceof String ? v : _U.badPort(\"a string\",\n      v);\n   }));\n   var savedModel = _P.portIn(\"savedModel\",\n   function (v) {\n      return v === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v === \"object\" && \"tasks\" in v && \"field\" in v && \"uid\" in v && \"visibility\" in v ? {_: {}\n                                                                                                                                                                              ,tasks: typeof v.tasks === \"object\" && v.tasks instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.tasks.map(function (v) {\n                                                                                                                                                                                 return typeof v === \"object\" && \"description\" in v && \"completed\" in v && \"edits\" in v && \"id\" in v ? {_: {}\n                                                                                                                                                                                                                                                                                       ,description: typeof v.description === \"string\" || typeof v.description === \"object\" && v.description instanceof String ? v.description : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.description)\n                                                                                                                                                                                                                                                                                       ,completed: typeof v.completed === \"boolean\" ? v.completed : _U.badPort(\"a boolean (true or false)\",\n                                                                                                                                                                                                                                                                                       v.completed)\n                                                                                                                                                                                                                                                                                       ,edits: v.edits === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v.edits === \"string\" || typeof v.edits === \"object\" && v.edits instanceof String ? v.edits : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.edits))\n                                                                                                                                                                                                                                                                                       ,id: typeof v.id === \"number\" ? v.id : _U.badPort(\"a number\",\n                                                                                                                                                                                                                                                                                       v.id)} : _U.badPort(\"an object with fields \\'description\\', \\'completed\\', \\'edits\\', \\'id\\'\",\n                                                                                                                                                                                 v);\n                                                                                                                                                                              })) : _U.badPort(\"an array\",\n                                                                                                                                                                              v.tasks)\n                                                                                                                                                                              ,field: typeof v.field === \"string\" || typeof v.field === \"object\" && v.field instanceof String ? v.field : _U.badPort(\"a string\",\n                                                                                                                                                                              v.field)\n                                                                                                                                                                              ,uid: typeof v.uid === \"number\" ? v.uid : _U.badPort(\"a number\",\n                                                                                                                                                                              v.uid)\n                                                                                                                                                                              ,visibility: typeof v.visibility === \"string\" || typeof v.visibility === \"object\" && v.visibility instanceof String ? v.visibility : _U.badPort(\"a string\",\n                                                                                                                                                                              v.visibility)} : _U.badPort(\"an object with fields \\'tasks\\', \\'field\\', \\'uid\\', \\'visibility\\'\",\n      v));\n   });\n   var infoFooter = A2($Html.footer,\n   _L.fromArray([$Html$Attributes.id(\"info\")]),\n   _L.fromArray([A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Double-click to edit a todo\")]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Written by \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"https://github.com/evancz\")]),\n                             _L.fromArray([$Html.text(\"Evan Czaplicki\")]))]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Part of \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"http://todomvc.com\")]),\n                             _L.fromArray([$Html.text(\"TodoMVC\")]))]))]));\n   var update = F2(function (action,\n   state) {\n      return function () {\n         switch (action.ctor)\n         {case \"Add\":\n            return function () {\n                 var description = $String.trim(state.field);\n                 return $String.isEmpty(description) ? state : _U.replace([[\"uid\"\n                                                                           ,state.uid + 1]\n                                                                          ,[\"field\"\n                                                                           ,\"\"]\n                                                                          ,[\"tasks\"\n                                                                           ,A2($Basics._op[\"++\"],\n                                                                           state.tasks,\n                                                                           _L.fromArray([A2($Task.init,\n                                                                           description,\n                                                                           state.uid)]))]],\n                 state);\n              }();\n            case \"ChangeVisibility\":\n            return _U.replace([[\"visibility\"\n                               ,action._0]],\n              state);\n            case \"CheckAll\":\n            return function () {\n                 var updateTask = function (t) {\n                    return _U.replace([[\"completed\"\n                                       ,action._0]],\n                    t);\n                 };\n                 return _U.replace([[\"tasks\"\n                                    ,A2($List.map,\n                                    updateTask,\n                                    state.tasks)]],\n                 state);\n              }();\n            case \"DeleteComplete\":\n            return _U.replace([[\"tasks\"\n                               ,A2($List.filter,\n                               function ($) {\n                                  return $Basics.not(function (_) {\n                                     return _.completed;\n                                  }($));\n                               },\n                               state.tasks)]],\n              state);\n            case \"NoOp\": return state;\n            case \"UpdateField\":\n            return _U.replace([[\"field\"\n                               ,action._0]],\n              state);\n            case \"UpdateTask\":\n            switch (action._0.ctor)\n              {case \"_Tuple2\":\n                 return function () {\n                      var updateTask = function (t) {\n                         return _U.eq(t.id,\n                         action._0._0) ? A2($Task.update,\n                         action._0._1,\n                         t) : $Maybe.Just(t);\n                      };\n                      return _U.replace([[\"tasks\"\n                                         ,A2($List.filterMap,\n                                         updateTask,\n                                         state.tasks)]],\n                      state);\n                   }();}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 71 and 100\");\n      }();\n   });\n   var ChangeVisibility = function (a) {\n      return {ctor: \"ChangeVisibility\"\n             ,_0: a};\n   };\n   var CheckAll = function (a) {\n      return {ctor: \"CheckAll\"\n             ,_0: a};\n   };\n   var DeleteComplete = {ctor: \"DeleteComplete\"};\n   var UpdateTask = function (a) {\n      return {ctor: \"UpdateTask\"\n             ,_0: a};\n   };\n   var Add = {ctor: \"Add\"};\n   var UpdateField = function (a) {\n      return {ctor: \"UpdateField\"\n             ,_0: a};\n   };\n   var NoOp = {ctor: \"NoOp\"};\n   var actions = $Signal.channel(NoOp);\n   var taskEntry = function (task) {\n      return A2($Html.header,\n      _L.fromArray([$Html$Attributes.id(\"header\")]),\n      _L.fromArray([A2($Html.h1,\n                   _L.fromArray([]),\n                   _L.fromArray([$Html.text(\"todos\")]))\n                   ,A2($Html.input,\n                   _L.fromArray([$Html$Attributes.id(\"new-todo\")\n                                ,$Html$Attributes.placeholder(\"What needs to be done?\")\n                                ,$Html$Attributes.autofocus(true)\n                                ,$Html$Attributes.value(task)\n                                ,$Html$Attributes.name(\"newTodo\")\n                                ,A3($Html$Events.on,\n                                \"input\",\n                                $Html$Events.targetValue,\n                                function ($) {\n                                   return $Signal.send(actions)(UpdateField($));\n                                })\n                                ,A2($Task.onFinish,\n                                A2($Signal.send,actions,Add),\n                                A2($Signal.send,\n                                actions,\n                                NoOp))]),\n                   _L.fromArray([]))]));\n   };\n   var visibilitySwap = F3(function (uri,\n   visibility,\n   actualVisibility) {\n      return function () {\n         var className = _U.eq(visibility,\n         actualVisibility) ? \"selected\" : \"\";\n         return A2($Html.li,\n         _L.fromArray([$Html$Events.onClick(A2($Signal.send,\n         actions,\n         ChangeVisibility(visibility)))]),\n         _L.fromArray([A2($Html.a,\n         _L.fromArray([$Html$Attributes.$class(className)\n                      ,$Html$Attributes.href(uri)]),\n         _L.fromArray([$Html.text(visibility)]))]));\n      }();\n   });\n   var controls = F2(function (visibility,\n   tasks) {\n      return function () {\n         var tasksCompleted = $List.length(A2($List.filter,\n         function (_) {\n            return _.completed;\n         },\n         tasks));\n         var tasksLeft = $List.length(tasks) - tasksCompleted;\n         var item_ = _U.eq(tasksLeft,\n         1) ? \" item\" : \" items\";\n         return A2($Html.footer,\n         _L.fromArray([$Html$Attributes.id(\"footer\")\n                      ,$Html$Attributes.hidden($List.isEmpty(tasks))]),\n         _L.fromArray([A2($Html.span,\n                      _L.fromArray([$Html$Attributes.id(\"todo-count\")]),\n                      _L.fromArray([A2($Html.strong,\n                                   _L.fromArray([]),\n                                   _L.fromArray([$Html.text($Basics.toString(tasksLeft))]))\n                                   ,$Html.text(A2($Basics._op[\"++\"],\n                                   item_,\n                                   \" left\"))]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"filters\")]),\n                      _L.fromArray([A3(visibilitySwap,\n                                   \"#/\",\n                                   \"All\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/active\",\n                                   \"Active\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/completed\",\n                                   \"Completed\",\n                                   visibility)]))\n                      ,A2($Html.button,\n                      _L.fromArray([$Html$Attributes.$class(\"clear-completed\")\n                                   ,$Html$Attributes.id(\"clear-completed\")\n                                   ,$Html$Attributes.hidden(_U.eq(tasksCompleted,\n                                   0))\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   DeleteComplete))]),\n                      _L.fromArray([$Html.text(A2($Basics._op[\"++\"],\n                      \"Clear completed (\",\n                      A2($Basics._op[\"++\"],\n                      $Basics.toString(tasksCompleted),\n                      \")\")))]))]));\n      }();\n   });\n   var allActions = A2($Signal.merge,\n   $Signal.subscribe(actions),\n   A2($Signal.map,\n   ChangeVisibility,\n   route));\n   var taskActions = A2($LocalChannel.create,\n   UpdateTask,\n   actions);\n   var taskList = F2(function (visibility,\n   tasks) {\n      return function () {\n         var cssVisibility = $List.isEmpty(tasks) ? \"hidden\" : \"visible\";\n         var allCompleted = A2($List.all,\n         function (_) {\n            return _.completed;\n         },\n         tasks);\n         var isVisible = function (todo) {\n            return function () {\n               switch (visibility)\n               {case \"Active\":\n                  return $Basics.not(todo.completed);\n                  case \"All\": return true;\n                  case \"Completed\":\n                  return todo.completed;}\n               _U.badCase($moduleName,\n               \"between lines 140 and 145\");\n            }();\n         };\n         return A2($Html.section,\n         _L.fromArray([$Html$Attributes.id(\"main\")\n                      ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                            ,_0: \"visibility\"\n                                                            ,_1: cssVisibility}]))]),\n         _L.fromArray([A2($Html.input,\n                      _L.fromArray([$Html$Attributes.id(\"toggle-all\")\n                                   ,$Html$Attributes.type$(\"checkbox\")\n                                   ,$Html$Attributes.name(\"toggle\")\n                                   ,$Html$Attributes.checked(allCompleted)\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   CheckAll($Basics.not(allCompleted))))]),\n                      _L.fromArray([]))\n                      ,A2($Html.label,\n                      _L.fromArray([$Html$Attributes.$for(\"toggle-all\")]),\n                      _L.fromArray([$Html.text(\"Mark all as complete\")]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"todo-list\")]),\n                      A2($List.map,\n                      $Task.view(taskActions),\n                      A2($List.filter,\n                      isVisible,\n                      tasks)))]));\n      }();\n   });\n   var view = function (state) {\n      return A2($Html.div,\n      _L.fromArray([$Html$Attributes.$class(\"todomvc-wrapper\")\n                   ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                         ,_0: \"visibility\"\n                                                         ,_1: \"hidden\"}]))]),\n      _L.fromArray([A2($Html.section,\n                   _L.fromArray([$Html$Attributes.id(\"todoapp\")]),\n                   _L.fromArray([A2($Html$Lazy.lazy,\n                                taskEntry,\n                                state.field)\n                                ,A3($Html$Lazy.lazy2,\n                                taskList,\n                                state.visibility,\n                                state.tasks)\n                                ,A3($Html$Lazy.lazy2,\n                                controls,\n                                state.visibility,\n                                state.tasks)]))\n                   ,infoFooter]));\n   };\n   var scene = F2(function (model,\n   _v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\":\n            return A4($Graphics$Element.container,\n              _v8._0,\n              _v8._1,\n              $Graphics$Element.midTop,\n              A3($Html.toElement,\n              550,\n              _v8._1,\n              view(model)));}\n         _U.badCase($moduleName,\n         \"on line 231, column 5 to 54\");\n      }();\n   });\n   var focus = _P.portOut(\"focus\",\n   _P.outgoingSignal(function (v) {\n      return v.ctor === \"Nothing\" ? null : v._0;\n   }),\n   function () {\n      var toSelector = function (action) {\n         return function () {\n            switch (action.ctor)\n            {case \"UpdateTask\":\n               switch (action._0.ctor)\n                 {case \"_Tuple2\":\n                    switch (action._0._1.ctor)\n                      {case \"Focus\":\n                         return $Maybe.Just(action._0._0);}\n                      break;}\n                 break;}\n            return $Maybe.Nothing;\n         }();\n      };\n      return A2($Signal.map,\n      toSelector,\n      $Signal.subscribe(actions));\n   }());\n   var emptyModel = {_: {}\n                    ,field: \"\"\n                    ,tasks: _L.fromArray([])\n                    ,uid: 0\n                    ,visibility: \"All\"};\n   var initialModel = A2($Maybe.withDefault,\n   emptyModel,\n   savedModel);\n   var model = A3($Signal.foldp,\n   update,\n   initialModel,\n   allActions);\n   var main = A3($Signal.map2,\n   scene,\n   model,\n   $Window.dimensions);\n   var save = _P.portOut(\"save\",\n   _P.outgoingSignal(function (v) {\n      return {tasks: Elm.Native.List.make(_elm).toArray(v.tasks).map(function (v) {\n                return {description: v.description\n                       ,completed: v.completed\n                       ,edits: v.edits.ctor === \"Nothing\" ? null : v.edits._0\n                       ,id: v.id};\n             })\n             ,field: v.field\n             ,uid: v.uid\n             ,visibility: v.visibility};\n   }),\n   model);\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,field: b\n             ,tasks: a\n             ,uid: c\n             ,visibility: d};\n   });\n   _elm.Todo.values = {_op: _op\n                      ,Model: Model\n                      ,emptyModel: emptyModel\n                      ,NoOp: NoOp\n                      ,UpdateField: UpdateField\n                      ,Add: Add\n                      ,UpdateTask: UpdateTask\n                      ,DeleteComplete: DeleteComplete\n                      ,CheckAll: CheckAll\n                      ,ChangeVisibility: ChangeVisibility\n                      ,update: update\n                      ,view: view\n                      ,taskEntry: taskEntry\n                      ,taskList: taskList\n                      ,controls: controls\n                      ,visibilitySwap: visibilitySwap\n                      ,infoFooter: infoFooter\n                      ,main: main\n                      ,scene: scene\n                      ,model: model\n                      ,initialModel: initialModel\n                      ,allActions: allActions\n                      ,actions: actions\n                      ,taskActions: taskActions};\n   return _elm.Todo.values;\n};\nElm.VirtualDom = Elm.VirtualDom || {};\nElm.VirtualDom.make = function (_elm) {\n   \"use strict\";\n   _elm.VirtualDom = _elm.VirtualDom || {};\n   if (_elm.VirtualDom.values)\n   return _elm.VirtualDom.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"VirtualDom\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var lazy3 = $Native$VirtualDom.lazy3;\n   var lazy2 = $Native$VirtualDom.lazy2;\n   var lazy = $Native$VirtualDom.lazy;\n   var on = $Native$VirtualDom.on;\n   var property = $Native$VirtualDom.property;\n   var Property = {ctor: \"Property\"};\n   var fromElement = $Native$VirtualDom.fromElement;\n   var toElement = $Native$VirtualDom.toElement;\n   var text = $Native$VirtualDom.text;\n   var node = $Native$VirtualDom.node;\n   var Node = {ctor: \"Node\"};\n   _elm.VirtualDom.values = {_op: _op\n                            ,Node: Node\n                            ,node: node\n                            ,text: text\n                            ,toElement: toElement\n                            ,fromElement: fromElement\n                            ,Property: Property\n                            ,property: property\n                            ,on: on\n                            ,lazy: lazy\n                            ,lazy2: lazy2\n                            ,lazy3: lazy3};\n   return _elm.VirtualDom.values;\n};\nElm.Window = Elm.Window || {};\nElm.Window.make = function (_elm) {\n   \"use strict\";\n   _elm.Window = _elm.Window || {};\n   if (_elm.Window.values)\n   return _elm.Window.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Window\",\n   $Native$Window = Elm.Native.Window.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var height = $Native$Window.height;\n   var width = $Native$Window.width;\n   var dimensions = $Native$Window.dimensions;\n   _elm.Window.values = {_op: _op\n                        ,dimensions: dimensions\n                        ,width: width\n                        ,height: height};\n   return _elm.Window.values;\n};\n","date":"2016-05-28T18:20:23.000Z","updated":"2016-05-28T17:26:27.000Z","path":"elmtodo/elm.js","layout":"false","title":"","comments":1,"_id":"cip0ngbtm000nx9ltwbcynquv","content":"var Elm = Elm || { Native: {} };\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   \"use strict\";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values)\n   return _elm.Array.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Array\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,\n   array) {\n      return _U.cmp(0,\n      i) < 1 && _U.cmp(i,\n      $Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,\n      i,\n      array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,\n   arr) {\n      return function () {\n         var update = F2(function (x,\n         xs) {\n            return isOkay(x) ? A2($Native$Array.push,\n            x,\n            xs) : xs;\n         });\n         return A3($Native$Array.foldl,\n         update,\n         $Native$Array.empty,\n         arr);\n      }();\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      _L.range(0,\n      $Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {\n      return A2(initialize,\n      n,\n      $Basics.always(e));\n   });\n   var Array = {ctor: \"Array\"};\n   _elm.Array.values = {_op: _op\n                       ,Array: Array\n                       ,initialize: initialize\n                       ,repeat: repeat\n                       ,fromList: fromList\n                       ,toList: toList\n                       ,toIndexedList: toIndexedList\n                       ,map: map\n                       ,indexedMap: indexedMap\n                       ,foldl: foldl\n                       ,foldr: foldr\n                       ,filter: filter\n                       ,empty: empty\n                       ,push: push\n                       ,get: get\n                       ,set: set\n                       ,slice: slice\n                       ,length: length\n                       ,append: append};\n   return _elm.Array.values;\n};\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   \"use strict\";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values)\n   return _elm.Basics.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Basics\",\n   $Native$Basics = Elm.Native.Basics.make(_elm),\n   $Native$Show = Elm.Native.Show.make(_elm),\n   $Native$Utils = Elm.Native.Utils.make(_elm);\n   var uncurry = F2(function (f,\n   _v0) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"_Tuple2\": return A2(f,\n              _v0._0,\n              _v0._1);}\n         _U.badCase($moduleName,\n         \"on line 458, column 19 to 24\");\n      }();\n   });\n   var curry = F3(function (f,\n   a,\n   b) {\n      return f({ctor: \"_Tuple2\"\n               ,_0: a\n               ,_1: b});\n   });\n   var flip = F3(function (f,b,a) {\n      return A2(f,a,b);\n   });\n   var snd = function (_v4) {\n      return function () {\n         switch (_v4.ctor)\n         {case \"_Tuple2\": return _v4._1;}\n         _U.badCase($moduleName,\n         \"on line 442, column 13 to 14\");\n      }();\n   };\n   var fst = function (_v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\": return _v8._0;}\n         _U.badCase($moduleName,\n         \"on line 438, column 13 to 14\");\n      }();\n   };\n   var always = F2(function (a,\n   _v12) {\n      return function () {\n         return a;\n      }();\n   });\n   var identity = function (x) {\n      return x;\n   };\n   _op[\"<|\"] ==\"\" f2(function=\"\" (f,x)=\"\" {=\"\" return=\"\" f(x);=\"\" });=\"\" _op[\"|=\"\">\"] = F2(function (x,f) {\n      return f(x);\n   });\n   _op[\">>\"] = F3(function (f,\n   g,\n   x) {\n      return g(f(x));\n   });\n   _op[\"<<\"] ==\"\" f3(function=\"\" (g,=\"\" f,=\"\" x)=\"\" {=\"\" return=\"\" g(f(x));=\"\" });=\"\" _op[\"++\"]=\"$Native$Utils.append;\" var=\"\" tostring=\"$Native$Show.toString;\" isinfinite=\"$Native$Basics.isInfinite;\" isnan=\"$Native$Basics.isNaN;\" tofloat=\"$Native$Basics.toFloat;\" ceiling=\"$Native$Basics.ceiling;\" floor=\"$Native$Basics.floor;\" truncate=\"$Native$Basics.truncate;\" round=\"$Native$Basics.round;\" otherwise=\"true;\" not=\"$Native$Basics.not;\" xor=\"$Native$Basics.xor;\" _op[\"||\"]=\"$Native$Basics.or;\" _op[\"&&\"]=\"$Native$Basics.and;\" max=\"$Native$Basics.max;\" min=\"$Native$Basics.min;\" gt=\"{ctor:\" \"gt\"};=\"\" eq=\"{ctor:\" \"eq\"};=\"\" lt=\"{ctor:\" \"lt\"};=\"\" compare=\"$Native$Basics.compare;\" _op[\"=\"\">=\"] = $Native$Basics.ge;\n   _op[\"<=\"] ==\"\" $native$basics.le;=\"\" _op[\"=\"\">\"] = $Native$Basics.gt;\n   _op[\"<\"] 0=\"\" 2=\"\" 4=\"\" 56=\"\" 70=\"\" 87=\"\" 96=\"\" 100=\"\" 105=\"\" 115=\"\" 126=\"\" 131=\"\" 140=\"\" 141=\"\" 175=\"\" 387=\"\" 399=\"\" 410=\"\" ==\"\" $native$basics.lt;=\"\" _op[\"=\"\" =\"]=\"$Native$Basics.neq;\" $native$basics.eq;=\"\" var=\"\" e=\"$Native$Basics.e;\" pi=\"$Native$Basics.pi;\" clamp=\"$Native$Basics.clamp;\" logbase=\"$Native$Basics.logBase;\" abs=\"$Native$Basics.abs;\" negate=\"$Native$Basics.negate;\" sqrt=\"$Native$Basics.sqrt;\" atan2=\"$Native$Basics.atan2;\" atan=\"$Native$Basics.atan;\" asin=\"$Native$Basics.asin;\" acos=\"$Native$Basics.acos;\" tan=\"$Native$Basics.tan;\" sin=\"$Native$Basics.sin;\" cos=\"$Native$Basics.cos;\" _op[\"^\"]=\"$Native$Basics.exp;\" _op[\"%\"]=\"$Native$Basics.mod;\" rem=\"$Native$Basics.rem;\" \"]=\"$Native$Basics.div;\" _op[\"*\"]=\"$Native$Basics.mul;\" _op[\"-\"]=\"$Native$Basics.sub;\" _op[\"+\"]=\"$Native$Basics.add;\" topolar=\"$Native$Basics.toPolar;\" frompolar=\"$Native$Basics.fromPolar;\" turns=\"$Native$Basics.turns;\" degrees=\"$Native$Basics.degrees;\" radians=\"function\" (t)=\"\" {=\"\" return=\"\" t;=\"\" };=\"\" _elm.basics.values=\"{_op:\" _op=\"\" ,radians:=\"\" ,degrees:=\"\" ,turns:=\"\" ,frompolar:=\"\" ,topolar:=\"\" ,rem:=\"\" ,cos:=\"\" ,sin:=\"\" ,tan:=\"\" ,acos:=\"\" ,asin:=\"\" ,atan:=\"\" ,atan2:=\"\" ,sqrt:=\"\" ,negate:=\"\" ,abs:=\"\" ,logbase:=\"\" ,clamp:=\"\" ,pi:=\"\" ,e:=\"\" ,compare:=\"\" compare=\"\" ,lt:=\"\" lt=\"\" ,eq:=\"\" eq=\"\" ,gt:=\"\" gt=\"\" ,min:=\"\" min=\"\" ,max:=\"\" max=\"\" ,xor:=\"\" xor=\"\" ,not:=\"\" not=\"\" ,otherwise:=\"\" otherwise=\"\" ,round:=\"\" round=\"\" ,truncate:=\"\" truncate=\"\" ,floor:=\"\" floor=\"\" ,ceiling:=\"\" ceiling=\"\" ,tofloat:=\"\" tofloat=\"\" ,isnan:=\"\" isnan=\"\" ,isinfinite:=\"\" isinfinite=\"\" ,tostring:=\"\" tostring=\"\" ,identity:=\"\" identity=\"\" ,always:=\"\" always=\"\" ,fst:=\"\" fst=\"\" ,snd:=\"\" snd=\"\" ,flip:=\"\" flip=\"\" ,curry:=\"\" curry=\"\" ,uncurry:=\"\" uncurry};=\"\" _elm.basics.values;=\"\" elm.char=\"Elm.Char\" ||=\"\" {};=\"\" elm.char.make=\"function\" (_elm)=\"\" \"use=\"\" strict\";=\"\" _elm.char=\"_elm.Char\" if=\"\" (_elm.char.values)=\"\" _elm.char.values;=\"\" _n=\"Elm.Native,\" _u=\"_N.Utils.make(_elm),\" _l=\"_N.List.make(_elm),\" _p=\"_N.Ports.make(_elm),\" $modulename=\"Char\" ,=\"\" $native$char=\"Elm.Native.Char.make(_elm);\" fromcode=\"$Native$Char.fromCode;\" tocode=\"$Native$Char.toCode;\" tolocalelower=\"$Native$Char.toLocaleLower;\" tolocaleupper=\"$Native$Char.toLocaleUpper;\" tolower=\"$Native$Char.toLower;\" toupper=\"$Native$Char.toUpper;\" ishexdigit=\"$Native$Char.isHexDigit;\" isoctdigit=\"$Native$Char.isOctDigit;\" isdigit=\"$Native$Char.isDigit;\" islower=\"$Native$Char.isLower;\" isupper=\"$Native$Char.isUpper;\" _elm.char.values=\"{_op:\" ,isupper:=\"\" ,islower:=\"\" ,isdigit:=\"\" ,isoctdigit:=\"\" ,ishexdigit:=\"\" ,toupper:=\"\" ,tolower:=\"\" ,tolocaleupper:=\"\" ,tolocalelower:=\"\" ,tocode:=\"\" ,fromcode:=\"\" fromcode};=\"\" elm.color=\"Elm.Color\" elm.color.make=\"function\" _elm.color=\"_elm.Color\" (_elm.color.values)=\"\" _elm.color.values;=\"\" $basics=\"Elm.Basics.make(_elm);\" radial=\"F5(function\" (a,=\"\" b,=\"\" c,=\"\" d,=\"\" e)=\"\" {ctor:=\"\" \"radial\"=\"\" ,_0:=\"\" a=\"\" ,_1:=\"\" b=\"\" ,_2:=\"\" c=\"\" ,_3:=\"\" d=\"\" ,_4:=\"\" e};=\"\" });=\"\" linear=\"F3(function\" c)=\"\" \"linear\"=\"\" c};=\"\" fmod=\"F2(function\" (f,n)=\"\" function=\"\" ()=\"\" integer=\"$Basics.floor(f);\" $basics.tofloat(a2($basics._op[\"%\"],=\"\" integer,=\"\" n))=\"\" +=\"\" f=\"\" -=\"\" $basics.tofloat(integer);=\"\" }();=\"\" rgbtohsl=\"F3(function\" (red,=\"\" green,=\"\" blue)=\"\" 255;=\"\" g=\"$Basics.toFloat(green)\" r=\"$Basics.toFloat(red)\" cmax=\"A2($Basics.max,\" a2($basics.max,r,g),=\"\" b);=\"\" cmin=\"A2($Basics.min,\" a2($basics.min,r,g),=\"\" cmin;=\"\" lightness=\"(cMax\" cmin)=\"\" 2;=\"\" saturation=\"_U.eq(lightness,\" 0)=\"\" ?=\"\" :=\"\" (1=\"\" $basics.abs(2=\"\" *=\"\" 1));=\"\" hue=\"$Basics.degrees(60)\" (_u.eq(cmax,=\"\" r)=\"\" a2(fmod,=\"\" (g=\"\" b)=\"\" 6)=\"\" _u.eq(cmax,=\"\" g)=\"\" (b=\"\" (r=\"\" _u.badif($modulename,=\"\" \"between=\"\" lines=\"\" and=\"\" 143\"));=\"\" \"_tuple3\"=\"\" lightness};=\"\" hsltorgb=\"F3(function\" (hue,=\"\" saturation,=\"\" lightness)=\"\" hue$=\"hue\" $basics.degrees(60);=\"\" chroma=\"(1\" 1))=\"\" saturation;=\"\" x=\"chroma\" $basics.abs(a2(fmod,=\"\" hue$,=\"\" 2)=\"\" $=\"_U.cmp(hue$,\" <=\"\" 0}=\"\" _u.cmp(hue$,=\"\" 1)=\"\" 3)=\"\" x}=\"\" 4)=\"\" chroma}=\"\" 5)=\"\" 0},=\"\" m=\"lightness\" m};=\"\" torgb=\"function\" (color)=\"\" switch=\"\" (color.ctor)=\"\" {case=\"\" \"hsla\":=\"\" color._0,=\"\" color._1,=\"\" color._2),=\"\" {_:=\"\" {}=\"\" ,alpha:=\"\" color._3=\"\" ,blue:=\"\" $basics.round(255=\"\" ,green:=\"\" ,red:=\"\" r)};=\"\" case=\"\" \"rgba\":=\"\" color._2=\"\" color._1=\"\" color._0};}=\"\" _u.badcase($modulename,=\"\" 123\");=\"\" tohsl=\"function\" ,hue:=\"\" color._0=\"\" ,lightness:=\"\" ,saturation:=\"\" color._1};=\"\" h=\"$._0,\" s=\"$._1,\" l=\"$._2;\" s};=\"\" }();}=\"\" 112\");=\"\" hsla=\"F4(function\" d)=\"\" \"hsla\"=\"\" d};=\"\" lightness,=\"\" alpha)=\"\" a4(hsla,=\"\" $basics.turns($basics.tofloat($basics.floor(hue=\"\" (2=\"\" $basics.pi)))),=\"\" alpha);=\"\" hsl=\"F3(function\" hue,=\"\" 1);=\"\" complement=\"function\" $basics.degrees(180),=\"\" color._2,=\"\" color._3);=\"\" s,=\"\" l,=\"\" 102\");=\"\" grayscale=\"function\" (p)=\"\" a4(hsla,0,0,1=\"\" p,1);=\"\" greyscale=\"function\" rgba=\"F4(function\" \"rgba\"=\"\" rgb=\"F3(function\" (r,g,b)=\"\" a4(rgba,r,g,b,1);=\"\" lightred=\"A4(RGBA,\" 239,=\"\" 41,=\"\" red=\"A4(RGBA,204,0,0,1);\" darkred=\"A4(RGBA,\" 164,=\"\" 0,=\"\" lightorange=\"A4(RGBA,\" 252,=\"\" 175,=\"\" 62,=\"\" orange=\"A4(RGBA,\" 245,=\"\" 121,=\"\" darkorange=\"A4(RGBA,\" 206,=\"\" 92,=\"\" lightyellow=\"A4(RGBA,\" 255,=\"\" 233,=\"\" 79,=\"\" yellow=\"A4(RGBA,\" 237,=\"\" 212,=\"\" darkyellow=\"A4(RGBA,\" 196,=\"\" 160,=\"\" lightgreen=\"A4(RGBA,\" 138,=\"\" 226,=\"\" 52,=\"\" green=\"A4(RGBA,\" 115,=\"\" 210,=\"\" 22,=\"\" darkgreen=\"A4(RGBA,\" 78,=\"\" 154,=\"\" 6,=\"\" lightblue=\"A4(RGBA,\" 114,=\"\" 159,=\"\" 207,=\"\" blue=\"A4(RGBA,\" 101,=\"\" darkblue=\"A4(RGBA,\" 32,=\"\" 74,=\"\" 135,=\"\" lightpurple=\"A4(RGBA,\" 173,=\"\" 127,=\"\" 168,=\"\" purple=\"A4(RGBA,\" 117,=\"\" 80,=\"\" 123,=\"\" darkpurple=\"A4(RGBA,\" 53,=\"\" 102,=\"\" lightbrown=\"A4(RGBA,\" 185,=\"\" 110,=\"\" brown=\"A4(RGBA,\" 193,=\"\" 125,=\"\" 17,=\"\" darkbrown=\"A4(RGBA,\" 143,=\"\" 89,=\"\" 2,=\"\" black=\"A4(RGBA,0,0,0,1);\" white=\"A4(RGBA,\" lightgrey=\"A4(RGBA,\" 238,=\"\" 236,=\"\" grey=\"A4(RGBA,\" 211,=\"\" 215,=\"\" darkgrey=\"A4(RGBA,\" 186,=\"\" 189,=\"\" 182,=\"\" lightgray=\"A4(RGBA,\" gray=\"A4(RGBA,\" darkgray=\"A4(RGBA,\" lightcharcoal=\"A4(RGBA,\" 136,=\"\" 133,=\"\" charcoal=\"A4(RGBA,\" 85,=\"\" 87,=\"\" 83,=\"\" darkcharcoal=\"A4(RGBA,\" 46,=\"\" 54,=\"\" _elm.color.values=\"{_op:\" ,rgba:=\"\" ,hsla:=\"\" ,rgb:=\"\" ,hsl:=\"\" ,grayscale:=\"\" ,greyscale:=\"\" ,complement:=\"\" ,tohsl:=\"\" ,torgb:=\"\" ,fmod:=\"\" ,rgbtohsl:=\"\" ,hsltorgb:=\"\" ,linear:=\"\" ,radial:=\"\" ,lightred:=\"\" ,darkred:=\"\" ,lightorange:=\"\" ,orange:=\"\" ,darkorange:=\"\" ,lightyellow:=\"\" ,yellow:=\"\" ,darkyellow:=\"\" ,lightgreen:=\"\" ,darkgreen:=\"\" ,lightblue:=\"\" ,darkblue:=\"\" ,lightpurple:=\"\" ,purple:=\"\" ,darkpurple:=\"\" ,lightbrown:=\"\" ,brown:=\"\" ,darkbrown:=\"\" ,black:=\"\" ,white:=\"\" ,lightgrey:=\"\" ,grey:=\"\" ,darkgrey:=\"\" ,lightgray:=\"\" ,gray:=\"\" ,darkgray:=\"\" ,lightcharcoal:=\"\" ,charcoal:=\"\" ,darkcharcoal:=\"\" darkcharcoal};=\"\" elm.dict=\"Elm.Dict\" elm.dict.make=\"function\" _elm.dict=\"_elm.Dict\" (_elm.dict.values)=\"\" _elm.dict.values;=\"\" $list=\"Elm.List.make(_elm),\" $maybe=\"Elm.Maybe.make(_elm),\" $native$debug=\"Elm.Native.Debug.make(_elm),\" $string=\"Elm.String.make(_elm);\" foldr=\"F3(function\" (f,=\"\" acc,=\"\" t)=\"\" (t.ctor)=\"\" \"rbempty\":=\"\" (t._0.ctor)=\"\" \"lblack\":=\"\" acc;}=\"\" break;=\"\" \"rbnode\":=\"\" a3(foldr,=\"\" f,=\"\" a3(f,=\"\" t._1,=\"\" t._2,=\"\" a3(foldr,f,acc,t._4)),=\"\" t._3);}=\"\" 418\");=\"\" keys=\"function\" (dict)=\"\" f3(function=\"\" (key,=\"\" value,=\"\" keylist)=\"\" a2($list._op[\"::\"],=\"\" key,=\"\" keylist);=\"\" }),=\"\" _l.fromarray([]),=\"\" dict);=\"\" values=\"function\" valuelist)=\"\" valuelist);=\"\" tolist=\"function\" (key,value,list)=\"\" \"_tuple2\"=\"\" key=\"\" value},=\"\" list);=\"\" foldl=\"F3(function\" dict)=\"\" (dict.ctor)=\"\" (dict._0.ctor)=\"\" a3(foldl,=\"\" dict._1,=\"\" dict._2,=\"\" a3(foldl,f,acc,dict._3)),=\"\" dict._4);}=\"\" 407\");=\"\" isbblack=\"function\" \"lbblack\":=\"\" true;}=\"\" \"bblack\":=\"\" break;}=\"\" false;=\"\" showflag=\"function\" (f)=\"\" (f.ctor)=\"\" \"insert\":=\"\" \"insert\";=\"\" \"remove\":=\"\" \"remove\";=\"\" \"same\":=\"\" \"same\";}=\"\" 181\");=\"\" same=\"{ctor:\" \"same\"};=\"\" remove=\"{ctor:\" \"remove\"};=\"\" insert=\"{ctor:\" \"insert\"};=\"\" get=\"F2(function\" (targetkey,=\"\" $maybe.nothing;}=\"\" _v29=\"A2($Basics.compare,\" targetkey,=\"\" dict._1);=\"\" (_v29.ctor)=\"\" \"eq\":=\"\" $maybe.just(dict._2);=\"\" \"gt\":=\"\" a2(get,=\"\" dict._4);=\"\" \"lt\":=\"\" dict._3);}=\"\" 137\");=\"\" member=\"F2(function\" _v30=\"A2(get,key,dict);\" (_v30.ctor)=\"\" \"just\":=\"\" true;=\"\" \"nothing\":=\"\" false;}=\"\" 142\");=\"\" $native$debug.crash(\"(max=\"\" empty)=\"\" is=\"\" defined\");=\"\" (dict._4.ctor)=\"\" dict._1=\"\" dict._2};}=\"\" max(dict._4);}=\"\" $native$debug.crash(\"(min=\"\" defined\");}=\"\" (dict._3.ctor)=\"\" (dict._3._0.ctor)=\"\" min(dict._3);}=\"\" 95\");=\"\" rbempty=\"function\" (a)=\"\" \"rbempty\"=\"\" a};=\"\" rbnode=\"F5(function\" \"rbnode\"=\"\" showlcolor=\"function\" \"lbblack\";=\"\" \"lblack\";}=\"\" 72\");=\"\" lbblack=\"{ctor:\" \"lbblack\"};=\"\" lblack=\"{ctor:\" \"lblack\"};=\"\" empty=\"RBEmpty(LBlack);\" map=\"F2(function\" (f,dict)=\"\" rbempty(lblack);}=\"\" a5(rbnode,=\"\" dict._0,=\"\" a2(f,dict._1,dict._2),=\"\" a2(map,f,dict._3),=\"\" a2(map,f,dict._4));}=\"\" 396\");=\"\" showncolor=\"function\" (c)=\"\" (c.ctor)=\"\" \"bblack\";=\"\" \"black\":=\"\" \"black\";=\"\" \"nblack\":=\"\" \"nblack\";=\"\" \"red\":=\"\" \"red\";}=\"\" 60\");=\"\" reportrembug=\"F4(function\" (msg,=\"\" lgot,=\"\" rgot)=\"\" $native$debug.crash($string.concat(_l.fromarray([\"internal=\"\" red-black=\"\" tree=\"\" invariant=\"\" violated,=\"\" expected=\"\" \"=\"\" ,msg=\"\" ,\"=\"\" got=\"\" ,showncolor(c)=\"\" ,lgot=\"\" ,rgot=\"\" ,\"\\nplease=\"\" report=\"\" this=\"\" bug=\"\" to=\"\" <https:=\"\" github.com=\"\" elm-lang=\"\" elm=\"\" issues=\"\">\"])));\n   });\n   var NBlack = {ctor: \"NBlack\"};\n   var BBlack = {ctor: \"BBlack\"};\n   var Black = {ctor: \"Black\"};\n   var ensureBlackRoot = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return dict;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"Black\": return dict;\n                 case \"Red\": return A5(RBNode,\n                   Black,\n                   dict._1,\n                   dict._2,\n                   dict._3,\n                   dict._4);}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 147 and 159\");\n      }();\n   };\n   var blackish = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\": return true;\n            case \"RBNode\":\n            return _U.eq(t._0,\n              Black) || _U.eq(t._0,BBlack);}\n         _U.badCase($moduleName,\n         \"between lines 332 and 334\");\n      }();\n   };\n   var blacken = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return RBEmpty(LBlack);\n            case \"RBNode\": return A5(RBNode,\n              Black,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 371 and 373\");\n      }();\n   };\n   var Red = {ctor: \"Red\"};\n   var moreBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");\n            case \"Black\": return BBlack;\n            case \"NBlack\": return Red;\n            case \"Red\": return Black;}\n         _U.badCase($moduleName,\n         \"between lines 237 and 241\");\n      }();\n   };\n   var lessBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\": return Black;\n            case \"Black\": return Red;\n            case \"NBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");\n            case \"Red\": return NBlack;}\n         _U.badCase($moduleName,\n         \"between lines 246 and 250\");\n      }();\n   };\n   var lessBlackTree = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              lessBlack(dict._0),\n              dict._1,\n              dict._2,\n              dict._3,\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 255 and 257\");\n      }();\n   };\n   var redden = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n            case \"RBNode\": return A5(RBNode,\n              Red,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 379 and 384\");\n      }();\n   };\n   var balance_node = function (t) {\n      return function () {\n         var assemble = function (col) {\n            return function (xk) {\n               return function (xv) {\n                  return function (yk) {\n                     return function (yv) {\n                        return function (zk) {\n                           return function (zv) {\n                              return function (a) {\n                                 return function (b) {\n                                    return function (c) {\n                                       return function (d) {\n                                          return A5(RBNode,\n                                          lessBlack(col),\n                                          yk,\n                                          yv,\n                                          A5(RBNode,Black,xk,xv,a,b),\n                                          A5(RBNode,Black,zk,zv,c,d));\n                                       };\n                                    };\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n         return blackish(t) ? function () {\n            switch (t.ctor)\n            {case \"RBNode\":\n               switch (t._3.ctor)\n                 {case \"RBNode\":\n                    switch (t._3._0.ctor)\n                      {case \"Red\":\n                         switch (t._3._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._3._1)(t._3._3._2)(t._3._1)(t._3._2)(t._1)(t._2)(t._3._3._3)(t._3._3._4)(t._3._4)(t._4);}\n                                break;}\n                           switch (t._3._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._1)(t._3._2)(t._3._4._1)(t._3._4._2)(t._1)(t._2)(t._3._3)(t._3._4._3)(t._3._4._4)(t._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._4.ctor)\n                 {case \"RBNode\":\n                    switch (t._4._0.ctor)\n                      {case \"Red\":\n                         switch (t._4._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._3._1)(t._4._3._2)(t._4._1)(t._4._2)(t._3)(t._4._3._3)(t._4._3._4)(t._4._4);}\n                                break;}\n                           switch (t._4._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._1)(t._4._2)(t._4._4._1)(t._4._4._2)(t._3)(t._4._3)(t._4._4._3)(t._4._4._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._0.ctor)\n                 {case \"BBlack\":\n                    switch (t._4.ctor)\n                      {case \"RBNode\":\n                         switch (t._4._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._4._3.ctor)\n                                {case \"RBNode\":\n                                   switch (t._4._3._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._4._4.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._4._4._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._4._3._1,\n                                                       t._4._3._2,\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3,\n                                                       t._4._3._3),\n                                                       A5(balance,\n                                                       Black,\n                                                       t._4._1,\n                                                       t._4._2,\n                                                       t._4._3._4,\n                                                       redden(t._4._4)));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      switch (t._3.ctor)\n                      {case \"RBNode\":\n                         switch (t._3._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._3._4.ctor)\n                                {case \"RBNode\":\n                                   switch (t._3._4._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._3._3.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._3._3._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._3._4._1,\n                                                       t._3._4._2,\n                                                       A5(balance,\n                                                       Black,\n                                                       t._3._1,\n                                                       t._3._2,\n                                                       redden(t._3._3),\n                                                       t._3._4._3),\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3._4._4,\n                                                       t._4));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      break;}\n                 break;}\n            return t;\n         }() : t;\n      }();\n   };\n   var balance = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return balance_node(A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r));\n   });\n   var bubble = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,\n      moreBlack(c),\n      k,\n      v,\n      lessBlackTree(l),\n      lessBlackTree(r)) : A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r);\n   });\n   var remove_max = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return function () {\n         switch (r.ctor)\n         {case \"RBEmpty\": return A3(rem,\n              c,\n              l,\n              r);\n            case \"RBNode\": return A5(bubble,\n              c,\n              k,\n              v,\n              l,\n              A5(remove_max,\n              r._0,\n              r._1,\n              r._2,\n              r._3,\n              r._4));}\n         _U.badCase($moduleName,\n         \"between lines 316 and 321\");\n      }();\n   });\n   var rem = F3(function (c,l,r) {\n      return function () {\n         var _v169 = {ctor: \"_Tuple2\"\n                     ,_0: l\n                     ,_1: r};\n         switch (_v169.ctor)\n         {case \"_Tuple2\":\n            switch (_v169._0.ctor)\n              {case \"RBEmpty\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           switch (c.ctor)\n                           {case \"Black\":\n                              return RBEmpty(LBBlack);\n                              case \"Red\":\n                              return RBEmpty(LBlack);}\n                           _U.badCase($moduleName,\n                           \"between lines 275 and 279\");\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var _v191 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v191.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v191._0.ctor)\n                                {case \"Black\":\n                                   switch (_v191._1.ctor)\n                                     {case \"LBlack\":\n                                        switch (_v191._2.ctor)\n                                          {case \"Red\": return A5(RBNode,\n                                               Black,\n                                               _v169._1._1,\n                                               _v169._1._2,\n                                               _v169._1._3,\n                                               _v169._1._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/LBlack/Red\",\n                           c,\n                           showLColor(_v169._0._0),\n                           showNColor(_v169._1._0));\n                        }();}\n                   break;\n                 case \"RBNode\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           var _v195 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v195.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v195._0.ctor)\n                                {case \"Black\":\n                                   switch (_v195._1.ctor)\n                                     {case \"Red\":\n                                        switch (_v195._2.ctor)\n                                          {case \"LBlack\":\n                                             return A5(RBNode,\n                                               Black,\n                                               _v169._0._1,\n                                               _v169._0._2,\n                                               _v169._0._3,\n                                               _v169._0._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/Red/LBlack\",\n                           c,\n                           showNColor(_v169._0._0),\n                           showLColor(_v169._1._0));\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var l$ = A5(remove_max,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var r = A5(RBNode,\n                           _v169._1._0,\n                           _v169._1._1,\n                           _v169._1._2,\n                           _v169._1._3,\n                           _v169._1._4);\n                           var l = A5(RBNode,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var $ = max(l),\n                           k = $._0,\n                           v = $._1;\n                           return A5(bubble,c,k,v,l$,r);\n                        }();}\n                   break;}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 273 and 302\");\n      }();\n   });\n   var update = F3(function (k,\n   alter,\n   dict) {\n      return function () {\n         var up = function (dict) {\n            return function () {\n               switch (dict.ctor)\n               {case \"RBEmpty\":\n                  switch (dict._0.ctor)\n                    {case \"LBlack\":\n                       return function () {\n                            var _v206 = alter($Maybe.Nothing);\n                            switch (_v206.ctor)\n                            {case \"Just\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Insert\n                                      ,_1: A5(RBNode,\n                                      Red,\n                                      k,\n                                      _v206._0,\n                                      empty,\n                                      empty)};\n                               case \"Nothing\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Same\n                                      ,_1: empty};}\n                            _U.badCase($moduleName,\n                            \"between lines 187 and 191\");\n                         }();}\n                    break;\n                  case \"RBNode\":\n                  return function () {\n                       var _v208 = A2($Basics.compare,\n                       k,\n                       dict._1);\n                       switch (_v208.ctor)\n                       {case \"EQ\": return function () {\n                               var _v209 = alter($Maybe.Just(dict._2));\n                               switch (_v209.ctor)\n                               {case \"Just\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode,\n                                         dict._0,\n                                         dict._1,\n                                         _v209._0,\n                                         dict._3,\n                                         dict._4)};\n                                  case \"Nothing\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Remove\n                                         ,_1: A3(rem,\n                                         dict._0,\n                                         dict._3,\n                                         dict._4)};}\n                               _U.badCase($moduleName,\n                               \"between lines 194 and 199\");\n                            }();\n                          case \"GT\": return function () {\n                               var $ = up(dict._4),\n                               flag = $._0,\n                               newRight = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 208 and 213\");\n                               }();\n                            }();\n                          case \"LT\": return function () {\n                               var $ = up(dict._3),\n                               flag = $._0,\n                               newLeft = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 201 and 206\");\n                               }();\n                            }();}\n                       _U.badCase($moduleName,\n                       \"between lines 192 and 213\");\n                    }();}\n               _U.badCase($moduleName,\n               \"between lines 185 and 213\");\n            }();\n         };\n         var $ = up(dict),\n         flag = $._0,\n         updatedDict = $._1;\n         return function () {\n            switch (flag.ctor)\n            {case \"Insert\":\n               return ensureBlackRoot(updatedDict);\n               case \"Remove\":\n               return blacken(updatedDict);\n               case \"Same\":\n               return updatedDict;}\n            _U.badCase($moduleName,\n            \"between lines 215 and 221\");\n         }();\n      }();\n   });\n   var insert = F3(function (key,\n   value,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Just(value)),\n      dict);\n   });\n   var singleton = F2(function (key,\n   value) {\n      return A3(insert,\n      key,\n      value,\n      RBEmpty(LBlack));\n   });\n   var union = F2(function (t1,\n   t2) {\n      return A3(foldl,\n      insert,\n      t2,\n      t1);\n   });\n   var fromList = function (assocs) {\n      return A3($List.foldl,\n      F2(function (_v214,dict) {\n         return function () {\n            switch (_v214.ctor)\n            {case \"_Tuple2\":\n               return A3(insert,\n                 _v214._0,\n                 _v214._1,\n                 dict);}\n            _U.badCase($moduleName,\n            \"on line 459, column 38 to 59\");\n         }();\n      }),\n      empty,\n      assocs);\n   };\n   var filter = F2(function (predicate,\n   dictionary) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         dict) {\n            return A2(predicate,\n            key,\n            value) ? A3(insert,\n            key,\n            value,\n            dict) : dict;\n         });\n         return A3(foldl,\n         add,\n         empty,\n         dictionary);\n      }();\n   });\n   var intersect = F2(function (t1,\n   t2) {\n      return A2(filter,\n      F2(function (k,_v218) {\n         return function () {\n            return A2(member,k,t2);\n         }();\n      }),\n      t1);\n   });\n   var partition = F2(function (predicate,\n   dict) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         _v220) {\n            return function () {\n               switch (_v220.ctor)\n               {case \"_Tuple2\":\n                  return A2(predicate,\n                    key,\n                    value) ? {ctor: \"_Tuple2\"\n                             ,_0: A3(insert,\n                             key,\n                             value,\n                             _v220._0)\n                             ,_1: _v220._1} : {ctor: \"_Tuple2\"\n                                              ,_0: _v220._0\n                                              ,_1: A3(insert,\n                                              key,\n                                              value,\n                                              _v220._1)};}\n               _U.badCase($moduleName,\n               \"between lines 480 and 482\");\n            }();\n         });\n         return A3(foldl,\n         add,\n         {ctor: \"_Tuple2\"\n         ,_0: empty\n         ,_1: empty},\n         dict);\n      }();\n   });\n   var remove = F2(function (key,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Nothing),\n      dict);\n   });\n   var diff = F2(function (t1,t2) {\n      return A3(foldl,\n      F3(function (k,v,t) {\n         return A2(remove,k,t);\n      }),\n      t1,\n      t2);\n   });\n   _elm.Dict.values = {_op: _op\n                      ,empty: empty\n                      ,singleton: singleton\n                      ,insert: insert\n                      ,update: update\n                      ,get: get\n                      ,remove: remove\n                      ,member: member\n                      ,filter: filter\n                      ,partition: partition\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,map: map\n                      ,union: union\n                      ,intersect: intersect\n                      ,diff: diff\n                      ,keys: keys\n                      ,values: values\n                      ,toList: toList\n                      ,fromList: fromList};\n   return _elm.Dict.values;\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values)\n   return _elm.Graphics.Element.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Graphics.Element\",\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm);\n   var DOut = {ctor: \"DOut\"};\n   var outward = DOut;\n   var DIn = {ctor: \"DIn\"};\n   var inward = DIn;\n   var DRight = {ctor: \"DRight\"};\n   var right = DRight;\n   var DLeft = {ctor: \"DLeft\"};\n   var left = DLeft;\n   var DDown = {ctor: \"DDown\"};\n   var down = DDown;\n   var DUp = {ctor: \"DUp\"};\n   var up = DUp;\n   var Position = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,horizontal: a\n             ,vertical: b\n             ,x: c\n             ,y: d};\n   });\n   var Relative = function (a) {\n      return {ctor: \"Relative\"\n             ,_0: a};\n   };\n   var relative = Relative;\n   var Absolute = function (a) {\n      return {ctor: \"Absolute\"\n             ,_0: a};\n   };\n   var absolute = Absolute;\n   var N = {ctor: \"N\"};\n   var bottomLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var Z = {ctor: \"Z\"};\n   var middle = {_: {}\n                ,horizontal: Z\n                ,vertical: Z\n                ,x: Relative(0.5)\n                ,y: Relative(0.5)};\n   var midLeft = _U.replace([[\"horizontal\"\n                             ,N]\n                            ,[\"x\",Absolute(0)]],\n   middle);\n   var middleAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midBottomAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var P = {ctor: \"P\"};\n   var topLeft = {_: {}\n                 ,horizontal: N\n                 ,vertical: P\n                 ,x: Absolute(0)\n                 ,y: Absolute(0)};\n   var bottomLeft = _U.replace([[\"vertical\"\n                                ,N]],\n   topLeft);\n   var topRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   topLeft);\n   var bottomRight = _U.replace([[\"horizontal\"\n                                 ,P]],\n   bottomLeft);\n   var midRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   midLeft);\n   var midTop = _U.replace([[\"vertical\"\n                            ,P]\n                           ,[\"y\",Absolute(0)]],\n   middle);\n   var midBottom = _U.replace([[\"vertical\"\n                               ,N]],\n   midTop);\n   var topLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var topRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var bottomRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var midRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midTopAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var Tiled = {ctor: \"Tiled\"};\n   var Cropped = function (a) {\n      return {ctor: \"Cropped\"\n             ,_0: a};\n   };\n   var Fitted = {ctor: \"Fitted\"};\n   var Plain = {ctor: \"Plain\"};\n   var Custom = {ctor: \"Custom\"};\n   var RawHtml = {ctor: \"RawHtml\"};\n   var Spacer = {ctor: \"Spacer\"};\n   var Flow = F2(function (a,b) {\n      return {ctor: \"Flow\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Container = F2(function (a,\n   b) {\n      return {ctor: \"Container\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Image = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"Image\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var link = F2(function (href,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"href\"\n                                    ,href]],\n                p)};\n      }();\n   });\n   var tag = F2(function (name,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"tag\"\n                                    ,name]],\n                p)};\n      }();\n   });\n   var color = F2(function (c,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"color\"\n                                    ,$Maybe.Just(c)]],\n                p)};\n      }();\n   });\n   var opacity = F2(function (o,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"opacity\"\n                                    ,o]],\n                p)};\n      }();\n   });\n   var height = F2(function (nh,\n   e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v0 = e.element;\n            switch (_v0.ctor)\n            {case \"Image\":\n               return _U.replace([[\"width\"\n                                  ,$Basics.round($Basics.toFloat(_v0._1) / $Basics.toFloat(_v0._2) * $Basics.toFloat(nh))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"height\"\n                                    ,nh]],\n                p)};\n      }();\n   });\n   var width = F2(function (nw,e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v5 = e.element;\n            switch (_v5.ctor)\n            {case \"Image\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.round($Basics.toFloat(_v5._2) / $Basics.toFloat(_v5._1) * $Basics.toFloat(nw))]],\n                 p);\n               case \"RawHtml\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.snd(A2($Native$Graphics$Element.htmlHeight,\n                                  nw,\n                                  e.element))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"width\"\n                                    ,nw]],\n                props)};\n      }();\n   });\n   var size = F3(function (w,h,e) {\n      return A2(height,\n      h,\n      A2(width,w,e));\n   });\n   var sizeOf = function (e) {\n      return {ctor: \"_Tuple2\"\n             ,_0: e.props.width\n             ,_1: e.props.height};\n   };\n   var heightOf = function (e) {\n      return e.props.height;\n   };\n   var widthOf = function (e) {\n      return e.props.width;\n   };\n   var Element = F2(function (a,\n   b) {\n      return {_: {}\n             ,element: b\n             ,props: a};\n   });\n   var Properties = F9(function (a,\n   b,\n   c,\n   d,\n   e,\n   f,\n   g,\n   h,\n   i) {\n      return {_: {}\n             ,click: i\n             ,color: e\n             ,height: c\n             ,hover: h\n             ,href: f\n             ,id: a\n             ,opacity: d\n             ,tag: g\n             ,width: b};\n   });\n   var newElement = F3(function (w,\n   h,\n   e) {\n      return {_: {}\n             ,element: e\n             ,props: A9(Properties,\n             $Native$Graphics$Element.guid({ctor: \"_Tuple0\"}),\n             w,\n             h,\n             1,\n             $Maybe.Nothing,\n             \"\",\n             \"\",\n             {ctor: \"_Tuple0\"},\n             {ctor: \"_Tuple0\"})};\n   });\n   var image = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Plain,w,h,src));\n   });\n   var fittedImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Fitted,w,h,src));\n   });\n   var croppedImage = F4(function (pos,\n   w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Cropped(pos),w,h,src));\n   });\n   var tiledImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Tiled,w,h,src));\n   });\n   var container = F4(function (w,\n   h,\n   pos,\n   e) {\n      return A3(newElement,\n      w,\n      h,\n      A2(Container,pos,e));\n   });\n   var spacer = F2(function (w,h) {\n      return A3(newElement,\n      w,\n      h,\n      Spacer);\n   });\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,\n   es) {\n      return function () {\n         var newFlow = F2(function (w,\n         h) {\n            return A3(newElement,\n            w,\n            h,\n            A2(Flow,dir,es));\n         });\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return _U.eq(es,\n         _L.fromArray([])) ? empty : function () {\n            switch (dir.ctor)\n            {case \"DDown\":\n               return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));\n               case \"DIn\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DLeft\": return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DOut\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DRight\":\n               return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DUp\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));}\n            _U.badCase($moduleName,\n            \"between lines 280 and 291\");\n         }();\n      }();\n   });\n   var above = F2(function (hi,\n   lo) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var below = F2(function (lo,\n   hi) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var beside = F2(function (lft,\n   rht) {\n      return A3(newElement,\n      widthOf(lft) + widthOf(rht),\n      A2($Basics.max,\n      heightOf(lft),\n      heightOf(rht)),\n      A2(Flow,\n      right,\n      _L.fromArray([lft,rht])));\n   });\n   var layers = function (es) {\n      return function () {\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return A3(newElement,\n         $List.maximum(ws),\n         $List.maximum(hs),\n         A2(Flow,DOut,es));\n      }();\n   };\n   _elm.Graphics.Element.values = {_op: _op\n                                  ,Properties: Properties\n                                  ,Element: Element\n                                  ,empty: empty\n                                  ,widthOf: widthOf\n                                  ,heightOf: heightOf\n                                  ,sizeOf: sizeOf\n                                  ,width: width\n                                  ,height: height\n                                  ,size: size\n                                  ,opacity: opacity\n                                  ,color: color\n                                  ,tag: tag\n                                  ,link: link\n                                  ,newElement: newElement\n                                  ,Image: Image\n                                  ,Container: Container\n                                  ,Flow: Flow\n                                  ,Spacer: Spacer\n                                  ,RawHtml: RawHtml\n                                  ,Custom: Custom\n                                  ,Plain: Plain\n                                  ,Fitted: Fitted\n                                  ,Cropped: Cropped\n                                  ,Tiled: Tiled\n                                  ,image: image\n                                  ,fittedImage: fittedImage\n                                  ,croppedImage: croppedImage\n                                  ,tiledImage: tiledImage\n                                  ,P: P\n                                  ,Z: Z\n                                  ,N: N\n                                  ,Absolute: Absolute\n                                  ,Relative: Relative\n                                  ,Position: Position\n                                  ,container: container\n                                  ,spacer: spacer\n                                  ,DUp: DUp\n                                  ,DDown: DDown\n                                  ,DLeft: DLeft\n                                  ,DRight: DRight\n                                  ,DIn: DIn\n                                  ,DOut: DOut\n                                  ,flow: flow\n                                  ,above: above\n                                  ,below: below\n                                  ,beside: beside\n                                  ,layers: layers\n                                  ,absolute: absolute\n                                  ,relative: relative\n                                  ,middle: middle\n                                  ,topLeft: topLeft\n                                  ,topRight: topRight\n                                  ,bottomLeft: bottomLeft\n                                  ,bottomRight: bottomRight\n                                  ,midLeft: midLeft\n                                  ,midRight: midRight\n                                  ,midTop: midTop\n                                  ,midBottom: midBottom\n                                  ,middleAt: middleAt\n                                  ,topLeftAt: topLeftAt\n                                  ,topRightAt: topRightAt\n                                  ,bottomLeftAt: bottomLeftAt\n                                  ,bottomRightAt: bottomRightAt\n                                  ,midLeftAt: midLeftAt\n                                  ,midRightAt: midRightAt\n                                  ,midTopAt: midTopAt\n                                  ,midBottomAt: midBottomAt\n                                  ,up: up\n                                  ,down: down\n                                  ,left: left\n                                  ,right: right\n                                  ,inward: inward\n                                  ,outward: outward};\n   return _elm.Graphics.Element.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values)\n   return _elm.Html.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node(\"body\");\n   var section = node(\"section\");\n   var nav = node(\"nav\");\n   var article = node(\"article\");\n   var aside = node(\"aside\");\n   var h1 = node(\"h1\");\n   var h2 = node(\"h2\");\n   var h3 = node(\"h3\");\n   var h4 = node(\"h4\");\n   var h5 = node(\"h5\");\n   var h6 = node(\"h6\");\n   var header = node(\"header\");\n   var footer = node(\"footer\");\n   var address = node(\"address\");\n   var main$ = node(\"main\");\n   var p = node(\"p\");\n   var hr = node(\"hr\");\n   var pre = node(\"pre\");\n   var blockquote = node(\"blockquote\");\n   var ol = node(\"ol\");\n   var ul = node(\"ul\");\n   var li = node(\"li\");\n   var dl = node(\"dl\");\n   var dt = node(\"dt\");\n   var dd = node(\"dd\");\n   var figure = node(\"figure\");\n   var figcaption = node(\"figcaption\");\n   var div = node(\"div\");\n   var a = node(\"a\");\n   var em = node(\"em\");\n   var strong = node(\"strong\");\n   var small = node(\"small\");\n   var s = node(\"s\");\n   var cite = node(\"cite\");\n   var q = node(\"q\");\n   var dfn = node(\"dfn\");\n   var abbr = node(\"abbr\");\n   var time = node(\"time\");\n   var code = node(\"code\");\n   var $var = node(\"var\");\n   var samp = node(\"samp\");\n   var kbd = node(\"kbd\");\n   var sub = node(\"sub\");\n   var sup = node(\"sup\");\n   var i = node(\"i\");\n   var b = node(\"b\");\n   var u = node(\"u\");\n   var mark = node(\"mark\");\n   var ruby = node(\"ruby\");\n   var rt = node(\"rt\");\n   var rp = node(\"rp\");\n   var bdi = node(\"bdi\");\n   var bdo = node(\"bdo\");\n   var span = node(\"span\");\n   var br = node(\"br\");\n   var wbr = node(\"wbr\");\n   var ins = node(\"ins\");\n   var del = node(\"del\");\n   var img = node(\"img\");\n   var iframe = node(\"iframe\");\n   var embed = node(\"embed\");\n   var object = node(\"object\");\n   var param = node(\"param\");\n   var video = node(\"video\");\n   var audio = node(\"audio\");\n   var source = node(\"source\");\n   var track = node(\"track\");\n   var canvas = node(\"canvas\");\n   var svg = node(\"svg\");\n   var math = node(\"math\");\n   var table = node(\"table\");\n   var caption = node(\"caption\");\n   var colgroup = node(\"colgroup\");\n   var col = node(\"col\");\n   var tbody = node(\"tbody\");\n   var thead = node(\"thead\");\n   var tfoot = node(\"tfoot\");\n   var tr = node(\"tr\");\n   var td = node(\"td\");\n   var th = node(\"th\");\n   var form = node(\"form\");\n   var fieldset = node(\"fieldset\");\n   var legend = node(\"legend\");\n   var label = node(\"label\");\n   var input = node(\"input\");\n   var button = node(\"button\");\n   var select = node(\"select\");\n   var datalist = node(\"datalist\");\n   var optgroup = node(\"optgroup\");\n   var option = node(\"option\");\n   var textarea = node(\"textarea\");\n   var keygen = node(\"keygen\");\n   var output = node(\"output\");\n   var progress = node(\"progress\");\n   var meter = node(\"meter\");\n   var details = node(\"details\");\n   var summary = node(\"summary\");\n   var menuitem = node(\"menuitem\");\n   var menu = node(\"menu\");\n   _elm.Html.values = {_op: _op\n                      ,node: node\n                      ,text: text\n                      ,toElement: toElement\n                      ,fromElement: fromElement\n                      ,body: body\n                      ,section: section\n                      ,nav: nav\n                      ,article: article\n                      ,aside: aside\n                      ,h1: h1\n                      ,h2: h2\n                      ,h3: h3\n                      ,h4: h4\n                      ,h5: h5\n                      ,h6: h6\n                      ,header: header\n                      ,footer: footer\n                      ,address: address\n                      ,main$: main$\n                      ,p: p\n                      ,hr: hr\n                      ,pre: pre\n                      ,blockquote: blockquote\n                      ,ol: ol\n                      ,ul: ul\n                      ,li: li\n                      ,dl: dl\n                      ,dt: dt\n                      ,dd: dd\n                      ,figure: figure\n                      ,figcaption: figcaption\n                      ,div: div\n                      ,a: a\n                      ,em: em\n                      ,strong: strong\n                      ,small: small\n                      ,s: s\n                      ,cite: cite\n                      ,q: q\n                      ,dfn: dfn\n                      ,abbr: abbr\n                      ,time: time\n                      ,code: code\n                      ,$var: $var\n                      ,samp: samp\n                      ,kbd: kbd\n                      ,sub: sub\n                      ,sup: sup\n                      ,i: i\n                      ,b: b\n                      ,u: u\n                      ,mark: mark\n                      ,ruby: ruby\n                      ,rt: rt\n                      ,rp: rp\n                      ,bdi: bdi\n                      ,bdo: bdo\n                      ,span: span\n                      ,br: br\n                      ,wbr: wbr\n                      ,ins: ins\n                      ,del: del\n                      ,img: img\n                      ,iframe: iframe\n                      ,embed: embed\n                      ,object: object\n                      ,param: param\n                      ,video: video\n                      ,audio: audio\n                      ,source: source\n                      ,track: track\n                      ,canvas: canvas\n                      ,svg: svg\n                      ,math: math\n                      ,table: table\n                      ,caption: caption\n                      ,colgroup: colgroup\n                      ,col: col\n                      ,tbody: tbody\n                      ,thead: thead\n                      ,tfoot: tfoot\n                      ,tr: tr\n                      ,td: td\n                      ,th: th\n                      ,form: form\n                      ,fieldset: fieldset\n                      ,legend: legend\n                      ,label: label\n                      ,input: input\n                      ,button: button\n                      ,select: select\n                      ,datalist: datalist\n                      ,optgroup: optgroup\n                      ,option: option\n                      ,textarea: textarea\n                      ,keygen: keygen\n                      ,output: output\n                      ,progress: progress\n                      ,meter: meter\n                      ,details: details\n                      ,summary: summary\n                      ,menuitem: menuitem\n                      ,menu: menu};\n   return _elm.Html.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values)\n   return _elm.Html.Attributes.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Attributes\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,\n   string) {\n      return A2(property,\n      name,\n      $Json$Encode.string(string));\n   });\n   var $class = function (name) {\n      return A2(stringProperty,\n      \"className\",\n      name);\n   };\n   var id = function (name) {\n      return A2(stringProperty,\n      \"id\",\n      name);\n   };\n   var title = function (name) {\n      return A2(stringProperty,\n      \"title\",\n      name);\n   };\n   var accesskey = function ($char) {\n      return A2(stringProperty,\n      \"accesskey\",\n      $String.fromList(_L.fromArray([$char])));\n   };\n   var contextmenu = function (value) {\n      return A2(stringProperty,\n      \"contextmenu\",\n      value);\n   };\n   var dir = function (value) {\n      return A2(stringProperty,\n      \"dir\",\n      value);\n   };\n   var draggable = function (value) {\n      return A2(stringProperty,\n      \"draggable\",\n      value);\n   };\n   var dropzone = function (value) {\n      return A2(stringProperty,\n      \"dropzone\",\n      value);\n   };\n   var itemprop = function (value) {\n      return A2(stringProperty,\n      \"itemprop\",\n      value);\n   };\n   var lang = function (value) {\n      return A2(stringProperty,\n      \"lang\",\n      value);\n   };\n   var tabindex = function (n) {\n      return A2(stringProperty,\n      \"tabIndex\",\n      $Basics.toString(n));\n   };\n   var charset = function (value) {\n      return A2(stringProperty,\n      \"charset\",\n      value);\n   };\n   var content = function (value) {\n      return A2(stringProperty,\n      \"content\",\n      value);\n   };\n   var httpEquiv = function (value) {\n      return A2(stringProperty,\n      \"httpEquiv\",\n      value);\n   };\n   var language = function (value) {\n      return A2(stringProperty,\n      \"language\",\n      value);\n   };\n   var src = function (value) {\n      return A2(stringProperty,\n      \"src\",\n      value);\n   };\n   var height = function (value) {\n      return A2(stringProperty,\n      \"height\",\n      $Basics.toString(value));\n   };\n   var width = function (value) {\n      return A2(stringProperty,\n      \"width\",\n      $Basics.toString(value));\n   };\n   var alt = function (value) {\n      return A2(stringProperty,\n      \"alt\",\n      value);\n   };\n   var poster = function (value) {\n      return A2(stringProperty,\n      \"poster\",\n      value);\n   };\n   var kind = function (value) {\n      return A2(stringProperty,\n      \"kind\",\n      value);\n   };\n   var srclang = function (value) {\n      return A2(stringProperty,\n      \"srclang\",\n      value);\n   };\n   var sandbox = function (value) {\n      return A2(stringProperty,\n      \"sandbox\",\n      value);\n   };\n   var srcdoc = function (value) {\n      return A2(stringProperty,\n      \"srcdoc\",\n      value);\n   };\n   var type$ = function (value) {\n      return A2(stringProperty,\n      \"type\",\n      value);\n   };\n   var value = function (value) {\n      return A2(stringProperty,\n      \"value\",\n      value);\n   };\n   var placeholder = function (value) {\n      return A2(stringProperty,\n      \"placeholder\",\n      value);\n   };\n   var accept = function (value) {\n      return A2(stringProperty,\n      \"accept\",\n      value);\n   };\n   var acceptCharset = function (value) {\n      return A2(stringProperty,\n      \"acceptCharset\",\n      value);\n   };\n   var action = function (value) {\n      return A2(stringProperty,\n      \"action\",\n      value);\n   };\n   var autocomplete = function (bool) {\n      return A2(stringProperty,\n      \"autocomplete\",\n      bool ? \"on\" : \"off\");\n   };\n   var autosave = function (value) {\n      return A2(stringProperty,\n      \"autosave\",\n      value);\n   };\n   var enctype = function (value) {\n      return A2(stringProperty,\n      \"enctype\",\n      value);\n   };\n   var formaction = function (value) {\n      return A2(stringProperty,\n      \"formaction\",\n      value);\n   };\n   var list = function (value) {\n      return A2(stringProperty,\n      \"list\",\n      value);\n   };\n   var maxlength = function (n) {\n      return A2(stringProperty,\n      \"maxLength\",\n      $Basics.toString(n));\n   };\n   var method = function (value) {\n      return A2(stringProperty,\n      \"method\",\n      value);\n   };\n   var name = function (value) {\n      return A2(stringProperty,\n      \"name\",\n      value);\n   };\n   var pattern = function (value) {\n      return A2(stringProperty,\n      \"pattern\",\n      value);\n   };\n   var size = function (n) {\n      return A2(stringProperty,\n      \"size\",\n      $Basics.toString(n));\n   };\n   var $for = function (value) {\n      return A2(stringProperty,\n      \"htmlFor\",\n      value);\n   };\n   var form = function (value) {\n      return A2(stringProperty,\n      \"form\",\n      value);\n   };\n   var max = function (value) {\n      return A2(stringProperty,\n      \"max\",\n      value);\n   };\n   var min = function (value) {\n      return A2(stringProperty,\n      \"min\",\n      value);\n   };\n   var step = function (n) {\n      return A2(stringProperty,\n      \"step\",\n      $Basics.toString(n));\n   };\n   var cols = function (n) {\n      return A2(stringProperty,\n      \"cols\",\n      $Basics.toString(n));\n   };\n   var rows = function (n) {\n      return A2(stringProperty,\n      \"rows\",\n      $Basics.toString(n));\n   };\n   var wrap = function (value) {\n      return A2(stringProperty,\n      \"wrap\",\n      value);\n   };\n   var ismap = function (value) {\n      return A2(stringProperty,\n      \"ismap\",\n      value);\n   };\n   var usemap = function (value) {\n      return A2(stringProperty,\n      \"usemap\",\n      value);\n   };\n   var shape = function (value) {\n      return A2(stringProperty,\n      \"shape\",\n      value);\n   };\n   var coords = function (value) {\n      return A2(stringProperty,\n      \"coords\",\n      value);\n   };\n   var challenge = function (value) {\n      return A2(stringProperty,\n      \"challenge\",\n      value);\n   };\n   var keytype = function (value) {\n      return A2(stringProperty,\n      \"keytype\",\n      value);\n   };\n   var align = function (value) {\n      return A2(stringProperty,\n      \"align\",\n      value);\n   };\n   var cite = function (value) {\n      return A2(stringProperty,\n      \"cite\",\n      value);\n   };\n   var href = function (value) {\n      return A2(stringProperty,\n      \"href\",\n      value);\n   };\n   var target = function (value) {\n      return A2(stringProperty,\n      \"target\",\n      value);\n   };\n   var downloadAs = function (value) {\n      return A2(stringProperty,\n      \"download\",\n      value);\n   };\n   var hreflang = function (value) {\n      return A2(stringProperty,\n      \"hreflang\",\n      value);\n   };\n   var media = function (value) {\n      return A2(stringProperty,\n      \"media\",\n      value);\n   };\n   var ping = function (value) {\n      return A2(stringProperty,\n      \"ping\",\n      value);\n   };\n   var rel = function (value) {\n      return A2(stringProperty,\n      \"rel\",\n      value);\n   };\n   var datetime = function (value) {\n      return A2(stringProperty,\n      \"datetime\",\n      value);\n   };\n   var pubdate = function (value) {\n      return A2(stringProperty,\n      \"pubdate\",\n      value);\n   };\n   var start = function (n) {\n      return A2(stringProperty,\n      \"start\",\n      $Basics.toString(n));\n   };\n   var colspan = function (value) {\n      return A2(stringProperty,\n      \"colSpan\",\n      value);\n   };\n   var headers = function (value) {\n      return A2(stringProperty,\n      \"headers\",\n      value);\n   };\n   var rowspan = function (value) {\n      return A2(stringProperty,\n      \"rowSpan\",\n      value);\n   };\n   var scope = function (value) {\n      return A2(stringProperty,\n      \"scope\",\n      value);\n   };\n   var manifest = function (value) {\n      return A2(stringProperty,\n      \"manifest\",\n      value);\n   };\n   var boolProperty = F2(function (name,\n   bool) {\n      return A2(property,\n      name,\n      $Json$Encode.bool(bool));\n   });\n   var hidden = function (bool) {\n      return A2(boolProperty,\n      \"hidden\",\n      bool);\n   };\n   var contenteditable = function (bool) {\n      return A2(boolProperty,\n      \"contentEditable\",\n      bool);\n   };\n   var spellcheck = function (bool) {\n      return A2(boolProperty,\n      \"spellcheck\",\n      bool);\n   };\n   var async = function (bool) {\n      return A2(boolProperty,\n      \"async\",\n      bool);\n   };\n   var defer = function (bool) {\n      return A2(boolProperty,\n      \"defer\",\n      bool);\n   };\n   var scoped = function (bool) {\n      return A2(boolProperty,\n      \"scoped\",\n      bool);\n   };\n   var autoplay = function (bool) {\n      return A2(boolProperty,\n      \"autoplay\",\n      bool);\n   };\n   var controls = function (bool) {\n      return A2(boolProperty,\n      \"controls\",\n      bool);\n   };\n   var loop = function (bool) {\n      return A2(boolProperty,\n      \"loop\",\n      bool);\n   };\n   var preload = function (bool) {\n      return A2(boolProperty,\n      \"preload\",\n      bool);\n   };\n   var $default = function (bool) {\n      return A2(boolProperty,\n      \"default\",\n      bool);\n   };\n   var seamless = function (bool) {\n      return A2(boolProperty,\n      \"seamless\",\n      bool);\n   };\n   var checked = function (bool) {\n      return A2(boolProperty,\n      \"checked\",\n      bool);\n   };\n   var selected = function (bool) {\n      return A2(boolProperty,\n      \"selected\",\n      bool);\n   };\n   var autofocus = function (bool) {\n      return A2(boolProperty,\n      \"autofocus\",\n      bool);\n   };\n   var disabled = function (bool) {\n      return A2(boolProperty,\n      \"disabled\",\n      bool);\n   };\n   var multiple = function (bool) {\n      return A2(boolProperty,\n      \"multiple\",\n      bool);\n   };\n   var novalidate = function (bool) {\n      return A2(boolProperty,\n      \"novalidate\",\n      bool);\n   };\n   var readonly = function (bool) {\n      return A2(boolProperty,\n      \"readonly\",\n      bool);\n   };\n   var required = function (bool) {\n      return A2(boolProperty,\n      \"required\",\n      bool);\n   };\n   var download = function (bool) {\n      return A2(boolProperty,\n      \"download\",\n      bool);\n   };\n   var reversed = function (bool) {\n      return A2(boolProperty,\n      \"reversed\",\n      bool);\n   };\n   var style = function (props) {\n      return property(\"style\")($Json$Encode.object($List.map(function (_v0) {\n         return function () {\n            switch (_v0.ctor)\n            {case \"_Tuple2\":\n               return {ctor: \"_Tuple2\"\n                      ,_0: _v0._0\n                      ,_1: $Json$Encode.string(_v0._1)};}\n            _U.badCase($moduleName,\n            \"on line 136, column 35 to 57\");\n         }();\n      })(props)));\n   };\n   var key = function (k) {\n      return A2(stringProperty,\n      \"key\",\n      k);\n   };\n   _elm.Html.Attributes.values = {_op: _op\n                                 ,key: key\n                                 ,style: style\n                                 ,property: property\n                                 ,stringProperty: stringProperty\n                                 ,boolProperty: boolProperty\n                                 ,$class: $class\n                                 ,hidden: hidden\n                                 ,id: id\n                                 ,title: title\n                                 ,accesskey: accesskey\n                                 ,contenteditable: contenteditable\n                                 ,contextmenu: contextmenu\n                                 ,dir: dir\n                                 ,draggable: draggable\n                                 ,dropzone: dropzone\n                                 ,itemprop: itemprop\n                                 ,lang: lang\n                                 ,spellcheck: spellcheck\n                                 ,tabindex: tabindex\n                                 ,async: async\n                                 ,charset: charset\n                                 ,content: content\n                                 ,defer: defer\n                                 ,httpEquiv: httpEquiv\n                                 ,language: language\n                                 ,scoped: scoped\n                                 ,src: src\n                                 ,height: height\n                                 ,width: width\n                                 ,alt: alt\n                                 ,autoplay: autoplay\n                                 ,controls: controls\n                                 ,loop: loop\n                                 ,preload: preload\n                                 ,poster: poster\n                                 ,$default: $default\n                                 ,kind: kind\n                                 ,srclang: srclang\n                                 ,sandbox: sandbox\n                                 ,seamless: seamless\n                                 ,srcdoc: srcdoc\n                                 ,type$: type$\n                                 ,value: value\n                                 ,checked: checked\n                                 ,placeholder: placeholder\n                                 ,selected: selected\n                                 ,accept: accept\n                                 ,acceptCharset: acceptCharset\n                                 ,action: action\n                                 ,autocomplete: autocomplete\n                                 ,autofocus: autofocus\n                                 ,autosave: autosave\n                                 ,disabled: disabled\n                                 ,enctype: enctype\n                                 ,formaction: formaction\n                                 ,list: list\n                                 ,maxlength: maxlength\n                                 ,method: method\n                                 ,multiple: multiple\n                                 ,name: name\n                                 ,novalidate: novalidate\n                                 ,pattern: pattern\n                                 ,readonly: readonly\n                                 ,required: required\n                                 ,size: size\n                                 ,$for: $for\n                                 ,form: form\n                                 ,max: max\n                                 ,min: min\n                                 ,step: step\n                                 ,cols: cols\n                                 ,rows: rows\n                                 ,wrap: wrap\n                                 ,ismap: ismap\n                                 ,usemap: usemap\n                                 ,shape: shape\n                                 ,coords: coords\n                                 ,challenge: challenge\n                                 ,keytype: keytype\n                                 ,align: align\n                                 ,cite: cite\n                                 ,href: href\n                                 ,target: target\n                                 ,download: download\n                                 ,downloadAs: downloadAs\n                                 ,hreflang: hreflang\n                                 ,media: media\n                                 ,ping: ping\n                                 ,rel: rel\n                                 ,datetime: datetime\n                                 ,pubdate: pubdate\n                                 ,reversed: reversed\n                                 ,start: start\n                                 ,colspan: colspan\n                                 ,headers: headers\n                                 ,rowspan: rowspan\n                                 ,scope: scope\n                                 ,manifest: manifest};\n   return _elm.Html.Attributes.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Events = Elm.Html.Events || {};\nElm.Html.Events.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Events = _elm.Html.Events || {};\n   if (_elm.Html.Events.values)\n   return _elm.Html.Events.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Events\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var keyCode = A2($Json$Decode._op[\":=\"],\n   \"keyCode\",\n   $Json$Decode.$int);\n   var targetChecked = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"checked\"]),\n   $Json$Decode.bool);\n   var targetValue = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"value\"]),\n   $Json$Decode.string);\n   var on = $VirtualDom.on;\n   var messageOn = F2(function (name,\n   msg) {\n      return A3(on,\n      name,\n      $Json$Decode.value,\n      $Basics.always(msg));\n   });\n   var onClick = messageOn(\"click\");\n   var onDoubleClick = messageOn(\"dblclick\");\n   var onMouseMove = messageOn(\"mousemove\");\n   var onMouseDown = messageOn(\"mousedown\");\n   var onMouseUp = messageOn(\"mouseup\");\n   var onMouseEnter = messageOn(\"mouseenter\");\n   var onMouseLeave = messageOn(\"mouseleave\");\n   var onMouseOver = messageOn(\"mouseover\");\n   var onMouseOut = messageOn(\"mouseout\");\n   var onBlur = messageOn(\"blur\");\n   var onFocus = messageOn(\"focus\");\n   var onSubmit = messageOn(\"submit\");\n   var onKey = function (name) {\n      return A2(on,name,keyCode);\n   };\n   var onKeyUp = onKey(\"keyup\");\n   var onKeyDown = onKey(\"keydown\");\n   var onKeyPress = onKey(\"keypress\");\n   _elm.Html.Events.values = {_op: _op\n                             ,on: on\n                             ,targetValue: targetValue\n                             ,targetChecked: targetChecked\n                             ,keyCode: keyCode\n                             ,messageOn: messageOn\n                             ,onClick: onClick\n                             ,onDoubleClick: onDoubleClick\n                             ,onMouseMove: onMouseMove\n                             ,onMouseDown: onMouseDown\n                             ,onMouseUp: onMouseUp\n                             ,onMouseEnter: onMouseEnter\n                             ,onMouseLeave: onMouseLeave\n                             ,onMouseOver: onMouseOver\n                             ,onMouseOut: onMouseOut\n                             ,onKey: onKey\n                             ,onKeyUp: onKeyUp\n                             ,onKeyDown: onKeyDown\n                             ,onKeyPress: onKeyPress\n                             ,onBlur: onBlur\n                             ,onFocus: onFocus\n                             ,onSubmit: onSubmit};\n   return _elm.Html.Events.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Lazy = Elm.Html.Lazy || {};\nElm.Html.Lazy.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Lazy = _elm.Html.Lazy || {};\n   if (_elm.Html.Lazy.values)\n   return _elm.Html.Lazy.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Lazy\",\n   $Html = Elm.Html.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var lazy3 = $VirtualDom.lazy3;\n   var lazy2 = $VirtualDom.lazy2;\n   var lazy = $VirtualDom.lazy;\n   _elm.Html.Lazy.values = {_op: _op\n                           ,lazy: lazy\n                           ,lazy2: lazy2\n                           ,lazy3: lazy3};\n   return _elm.Html.Lazy.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values)\n   return _elm.Json.Decode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Decode\",\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[\":=\"] = $Native$Json.decodeField;\n   var at = F2(function (fields,\n   decoder) {\n      return A3($List.foldr,\n      F2(function (x,y) {\n         return A2(_op[\":=\"],x,y);\n      }),\n      decoder,\n      fields);\n   });\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {\n      return A2(map,\n      $Dict.fromList,\n      keyValuePairs(decoder));\n   };\n   var Decoder = {ctor: \"Decoder\"};\n   _elm.Json.Decode.values = {_op: _op\n                             ,Decoder: Decoder\n                             ,map: map\n                             ,decodeString: decodeString\n                             ,at: at\n                             ,object1: object1\n                             ,object2: object2\n                             ,object3: object3\n                             ,object4: object4\n                             ,object5: object5\n                             ,object6: object6\n                             ,object7: object7\n                             ,object8: object8\n                             ,keyValuePairs: keyValuePairs\n                             ,dict: dict\n                             ,oneOf: oneOf\n                             ,string: string\n                             ,$float: $float\n                             ,$int: $int\n                             ,bool: bool\n                             ,list: list\n                             ,array: array\n                             ,$null: $null\n                             ,maybe: maybe\n                             ,value: value\n                             ,decodeValue: decodeValue\n                             ,customDecoder: customDecoder\n                             ,andThen: andThen\n                             ,fail: fail\n                             ,succeed: succeed\n                             ,tuple1: tuple1\n                             ,tuple2: tuple2\n                             ,tuple3: tuple3\n                             ,tuple4: tuple4\n                             ,tuple5: tuple5\n                             ,tuple6: tuple6\n                             ,tuple7: tuple7\n                             ,tuple8: tuple8};\n   return _elm.Json.Decode.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values)\n   return _elm.Json.Encode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Encode\",\n   $Array = Elm.Array.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm);\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: \"Value\"};\n   _elm.Json.Encode.values = {_op: _op\n                             ,Value: Value\n                             ,encode: encode\n                             ,string: string\n                             ,$int: $int\n                             ,$float: $float\n                             ,bool: bool\n                             ,$null: $null\n                             ,object: object\n                             ,array: array\n                             ,list: list};\n   return _elm.Json.Encode.values;\n};\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   \"use strict\";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values)\n   return _elm.List.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"List\",\n   $Basics = Elm.Basics.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$List = Elm.Native.List.make(_elm);\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = $Native$List.sort;\n   var repeat = $Native$List.repeat;\n   var drop = $Native$List.drop;\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var append = $Native$List.append;\n   var any = $Native$List.any;\n   var all = $Native$List.all;\n   var reverse = $Native$List.reverse;\n   var length = $Native$List.length;\n   var filter = $Native$List.filter;\n   var scanl1 = $Native$List.scanl1;\n   var scanl = $Native$List.scanl;\n   var foldr1 = $Native$List.foldr1;\n   var foldl1 = $Native$List.foldl1;\n   var maximum = foldl1($Basics.max);\n   var minimum = foldl1($Basics.min);\n   var foldr = $Native$List.foldr;\n   var concat = function (lists) {\n      return A3(foldr,\n      append,\n      _L.fromArray([]),\n      lists);\n   };\n   var foldl = $Native$List.foldl;\n   var sum = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x + y;\n      }),\n      0,\n      numbers);\n   };\n   var product = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x * y;\n      }),\n      1,\n      numbers);\n   };\n   var indexedMap = F2(function (f,\n   xs) {\n      return A3(map2,\n      f,\n      _L.range(0,length(xs) - 1),\n      xs);\n   });\n   var map = $Native$List.map;\n   var concatMap = F2(function (f,\n   list) {\n      return concat(A2(map,\n      f,\n      list));\n   });\n   var member = $Native$List.member;\n   var isEmpty = function (xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"[]\": return true;}\n         return false;\n      }();\n   };\n   var tail = $Native$List.tail;\n   var head = $Native$List.head;\n   _op[\"::\"] = $Native$List.cons;\n   var maybeCons = F3(function (f,\n   mx,\n   xs) {\n      return function () {\n         var _v1 = f(mx);\n         switch (_v1.ctor)\n         {case \"Just\":\n            return A2(_op[\"::\"],_v1._0,xs);\n            case \"Nothing\": return xs;}\n         _U.badCase($moduleName,\n         \"between lines 162 and 169\");\n      }();\n   });\n   var filterMap = F2(function (f,\n   xs) {\n      return A3(foldr,\n      maybeCons(f),\n      _L.fromArray([]),\n      xs);\n   });\n   var partition = F2(function (pred,\n   list) {\n      return function () {\n         var step = F2(function (x,\n         _v3) {\n            return function () {\n               switch (_v3.ctor)\n               {case \"_Tuple2\":\n                  return pred(x) ? {ctor: \"_Tuple2\"\n                                   ,_0: A2(_op[\"::\"],x,_v3._0)\n                                   ,_1: _v3._1} : {ctor: \"_Tuple2\"\n                                                  ,_0: _v3._0\n                                                  ,_1: A2(_op[\"::\"],x,_v3._1)};}\n               _U.badCase($moduleName,\n               \"between lines 270 and 272\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         list);\n      }();\n   });\n   var unzip = function (pairs) {\n      return function () {\n         var step = F2(function (_v7,\n         _v8) {\n            return function () {\n               switch (_v8.ctor)\n               {case \"_Tuple2\":\n                  return function () {\n                       switch (_v7.ctor)\n                       {case \"_Tuple2\":\n                          return {ctor: \"_Tuple2\"\n                                 ,_0: A2(_op[\"::\"],_v7._0,_v8._0)\n                                 ,_1: A2(_op[\"::\"],\n                                 _v7._1,\n                                 _v8._1)};}\n                       _U.badCase($moduleName,\n                       \"on line 308, column 12 to 28\");\n                    }();}\n               _U.badCase($moduleName,\n               \"on line 308, column 12 to 28\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         pairs);\n      }();\n   };\n   var intersperse = F2(function (sep,\n   xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"::\": return function () {\n                 var step = F2(function (x,\n                 rest) {\n                    return A2(_op[\"::\"],\n                    sep,\n                    A2(_op[\"::\"],x,rest));\n                 });\n                 var spersed = A3(foldr,\n                 step,\n                 _L.fromArray([]),\n                 xs._1);\n                 return A2(_op[\"::\"],\n                 xs._0,\n                 spersed);\n              }();\n            case \"[]\":\n            return _L.fromArray([]);}\n         _U.badCase($moduleName,\n         \"between lines 319 and 330\");\n      }();\n   });\n   _elm.List.values = {_op: _op\n                      ,head: head\n                      ,tail: tail\n                      ,isEmpty: isEmpty\n                      ,member: member\n                      ,map: map\n                      ,indexedMap: indexedMap\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,foldl1: foldl1\n                      ,foldr1: foldr1\n                      ,scanl: scanl\n                      ,scanl1: scanl1\n                      ,filter: filter\n                      ,filterMap: filterMap\n                      ,maybeCons: maybeCons\n                      ,length: length\n                      ,reverse: reverse\n                      ,all: all\n                      ,any: any\n                      ,append: append\n                      ,concat: concat\n                      ,concatMap: concatMap\n                      ,sum: sum\n                      ,product: product\n                      ,maximum: maximum\n                      ,minimum: minimum\n                      ,partition: partition\n                      ,map2: map2\n                      ,map3: map3\n                      ,map4: map4\n                      ,map5: map5\n                      ,unzip: unzip\n                      ,intersperse: intersperse\n                      ,take: take\n                      ,drop: drop\n                      ,repeat: repeat\n                      ,sort: sort\n                      ,sortBy: sortBy\n                      ,sortWith: sortWith};\n   return _elm.List.values;\n};\nElm.LocalChannel = Elm.LocalChannel || {};\nElm.LocalChannel.make = function (_elm) {\n   \"use strict\";\n   _elm.LocalChannel = _elm.LocalChannel || {};\n   if (_elm.LocalChannel.values)\n   return _elm.LocalChannel.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"LocalChannel\",\n   $Signal = Elm.Signal.make(_elm);\n   var send = F2(function (_v0,\n   value) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"LocalChannel\":\n            return _v0._0(value);}\n         _U.badCase($moduleName,\n         \"on line 91, column 3 to 22\");\n      }();\n   });\n   var LocalChannel = function (a) {\n      return {ctor: \"LocalChannel\"\n             ,_0: a};\n   };\n   var create = F2(function (generalize,\n   channel) {\n      return LocalChannel(function (v) {\n         return A2($Signal.send,\n         channel,\n         generalize(v));\n      });\n   });\n   var localize = F2(function (generalize,\n   _v3) {\n      return function () {\n         switch (_v3.ctor)\n         {case \"LocalChannel\":\n            return LocalChannel(function (v) {\n                 return _v3._0(generalize(v));\n              });}\n         _U.badCase($moduleName,\n         \"on line 83, column 3 to 41\");\n      }();\n   });\n   _elm.LocalChannel.values = {_op: _op\n                              ,create: create\n                              ,localize: localize\n                              ,send: send};\n   return _elm.LocalChannel.values;\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   \"use strict\";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values)\n   return _elm.Maybe.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Maybe\";\n   var withDefault = F2(function ($default,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\": return maybe._0;\n            case \"Nothing\":\n            return $default;}\n         _U.badCase($moduleName,\n         \"between lines 45 and 56\");\n      }();\n   });\n   var Nothing = {ctor: \"Nothing\"};\n   var oneOf = function (maybes) {\n      return function () {\n         switch (maybes.ctor)\n         {case \"::\": return function () {\n                 switch (maybes._0.ctor)\n                 {case \"Just\": return maybes._0;\n                    case \"Nothing\":\n                    return oneOf(maybes._1);}\n                 _U.badCase($moduleName,\n                 \"between lines 64 and 73\");\n              }();\n            case \"[]\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 59 and 73\");\n      }();\n   };\n   var andThen = F2(function (maybeValue,\n   callback) {\n      return function () {\n         switch (maybeValue.ctor)\n         {case \"Just\":\n            return callback(maybeValue._0);\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 110 and 112\");\n      }();\n   });\n   var Just = function (a) {\n      return {ctor: \"Just\",_0: a};\n   };\n   var map = F2(function (f,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Just(f(maybe._0));\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 76 and 107\");\n      }();\n   });\n   _elm.Maybe.values = {_op: _op\n                       ,andThen: andThen\n                       ,map: map\n                       ,withDefault: withDefault\n                       ,oneOf: oneOf\n                       ,Just: Just\n                       ,Nothing: Nothing};\n   return _elm.Maybe.values;\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Array = elm.Native.Array || {};\n    if (elm.Native.Array.values) return elm.Native.Array.values;\n    if ('values' in Elm.Native.Array)\n      return elm.Native.Array.values = Elm.Native.Array.values;\n\n    var List = Elm.Native.List.make(elm);\n\n    // A RRB-Tree has two distinct data types.\n    // Leaf -> \"height\"  is always 0\n    //         \"table\"   is an array of elements\n    // Node -> \"height\"  is always greater than 0\n    //         \"table\"   is an array of child nodes\n    //         \"lengths\" is an array of accumulated lengths of the child nodes\n\n    // M is the maximal table size. 32 seems fast. E is the allowed increase\n    // of search steps when concatting to find an index. Lower values will\n    // decrease balancing, but will increase search steps.\n    var M = 32;\n    var E = 2;\n\n    // An empty array.\n    var empty = { ctor:\"_Array\", height:0, table:new Array() };\n\n    function get(i, array) {\n        if (i < 0 || i >= length(array)) {\n            throw new Error(\"Index \" + i + \" is out of range. Check the length of \" +\n                            \"your array first or use getMaybe or getWithDefault.\");\n        }\n        return unsafeGet(i, array);\n    }\n\n    function unsafeGet(i, array) {\n      for (var x = array.height; x > 0; x--) {\n        var slot = i >> (x * 5);\n        while (array.lengths[slot] <= i)=\"\" {=\"\" slot++;=\"\" }=\"\" if=\"\" (slot=\"\"> 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array = array.table[slot];\n      }\n      return array.table[i];\n    }\n\n    // Sets the value at the index i. Only the nodes leading to i will get\n    // copied and updated.\n    function set(i, item, array) {\n      if (i < 0 || length(array) <= i)=\"\" {=\"\" return=\"\" array;=\"\" }=\"\" unsafeset(i,=\"\" item,=\"\" array);=\"\" function=\"\" array)=\"\" array=\"nodeCopy(array);\" if=\"\" (array.height=\"=\" 0)=\"\" array.table[i]=\"item;\" else=\"\" var=\"\" slot=\"getSlot(i,\" (slot=\"\"> 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array.table[slot] = unsafeSet(i, item, array.table[slot]);\n      }\n      return array;\n    }\n\n    function initialize(len, f) {\n      if (len == 0) { return empty; }\n      var h = Math.floor(Math.log(len)/Math.log(M));\n      return initialize_(f, h, 0, len);\n    }\n\n    function initialize_(f, h, from, to) {\n      if (h == 0) {\n        var table = new Array((to - from) % (M + 1));\n        for (var i = 0; i < table.length; i++) {\n          table[i] = f(from + i);\n        }\n        return { ctor:\"_Array\", height:0, table:table };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = initialize_( f, h - 1, from + (i * step)\n                              , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    function fromList(list) {\n      if (list == List.Nil) { return empty; }\n\n      // Allocate M sized blocks (table) and write list elements to it.\n      var table = new Array(M);\n      var nodes = new Array();\n      var i = 0;\n\n      while (list.ctor !== '[]') {\n        table[i] = list._0;\n        list = list._1;\n        i++;\n\n        // table is full, so we can push a leaf containing it into the\n        // next node.\n        if (i == M) {\n          fromListPush({ ctor:\"_Array\", height:0, table:table }\n                      , nodes);\n          table = new Array(M);\n          i = 0;\n        }\n      }\n\n      // Maybe there is something left on the table.\n      if (i > 0) {\n        fromListPush({ ctor:\"_Array\", height:0, table:table.splice(0,i) }\n                    , nodes);\n      }\n\n      // Go through all of the nodes and eventually push them into higher nodes.\n      for (var h = 0; h < nodes.length - 1; h++) {\n        if (nodes[h].table.length > 0) {\n          fromListPush(nodes[h], nodes);\n        }\n      }\n\n      var head = nodes[nodes.length - 1];\n      if (head.height > 0 && head.table.length == 1) {\n        return head.table[0];\n      } else {\n        return head;\n      }\n    }\n\n    // Push a node into a higher node as a child.\n    function fromListPush(toPush, nodes) {\n      var h = toPush.height;\n\n      // Maybe the node on this height does not exist.\n      if (nodes.length == h) {\n        nodes.push({ ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() });\n      }\n\n      nodes[h].table.push(toPush);\n      var len = length(toPush);\n      if (nodes[h].lengths.length > 0) {\n        len += nodes[h].lengths[nodes[h].lengths.length - 1];\n      }\n      nodes[h].lengths.push(len);\n\n      if (nodes[h].table.length == M) {\n        fromListPush(nodes[h], nodes);\n        nodes[h] = { ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() };\n      }\n    }\n\n    // Pushes an item via push_ to the bottom right of a tree.\n    function push(item, a) {\n      var pushed = push_(item, a);\n      if (pushed !== null) {\n        return pushed;\n      }\n\n      var newTree = create(item, a.height);\n      return siblise(a, newTree);\n    }\n\n    // Recursively tries to push an item to the bottom-right most\n    // tree possible. If there is no space left for the item,\n    // null will be returned.\n    function push_(item, a) {\n      // Handle resursion stop at leaf level.\n      if (a.height == 0) {\n        if (a.table.length < M) {\n          var newA = { ctor:\"_Array\", height:0, table:a.table.slice() };\n          newA.table.push(item);\n          return newA;\n        } else {\n          return null;\n        }\n      }\n\n      // Recursively push\n      var pushed = push_(item, botRight(a));\n\n      // There was space in the bottom right tree, so the slot will\n      // be updated.\n      if (pushed != null) {\n        var newA = nodeCopy(a);\n        newA.table[newA.table.length - 1] = pushed;\n        newA.lengths[newA.lengths.length - 1]++;\n        return newA\n      }\n\n      // When there was no space left, check if there is space left\n      // for a new slot with a tree which contains only the item\n      // at the bottom.\n      if (a.table.length < M) {\n        var newSlot = create(item, a.height - 1);\n        var newA = nodeCopy(a);\n        newA.table.push(newSlot);\n        newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n        return newA\n      } else {\n        return null;\n      }\n    }\n\n    // Converts an array into a list of elements.\n    function toList(a) {\n      return toList_(List.Nil, a);\n    }\n\n    function toList_(list, a) {\n      for (var i = a.table.length - 1; i >= 0; i--) {\n        list = a.height == 0 ? List.Cons(a.table[i], list) : toList_(list, a.table[i]);\n      }\n      return list;\n    }\n\n    // Maps a function over the elements of an array.\n    function map(f, a) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? f(a.table[i]) : map(f, a.table[i]);\n      }\n      return newA;\n    }\n\n    // Maps a function over the elements with their index as first argument.\n    function indexedMap(f, a) {\n      return indexedMap_(f, a, 0);\n    }\n\n    function indexedMap_(f, a, from) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? A2(f, from + i, a.table[i])\n                                      : indexedMap_( f, a.table[i]\n                                                   , i == 0 ? 0 : a.lengths[i - 1]);\n      }\n      return newA;\n    }\n\n    function foldl(f, b, a) {\n      if (a.height == 0) {\n        for (var i = 0; i < a.table.length; i++) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = 0; i < a.table.length; i++) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    function foldr(f, b, a) {\n      if (a.height == 0) {\n        for (var i = a.table.length; i--; ) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = a.table.length; i--; ) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    // TODO: currently, it slices the right, then the left. This can be\n    // optimized.\n    function slice(from, to, a) {\n      if (from < 0) { from += length(a); }\n      if (to < 0)   { to += length(a); }\n      return sliceLeft(from, sliceRight(to, a));\n    }\n\n    function sliceRight(to, a) {\n      if (to == length(a)) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(0, to);\n        return newA;\n      }\n\n      // Slice the right recursively.\n      var right = getSlot(to, a);\n      var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (right == 0) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(0, right)\n                                , lengths:a.lengths.slice(0, right) };\n      if (sliced.table.length > 0) {\n        newA.table[right] = sliced;\n        newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n      }\n      return newA;\n    }\n\n    function sliceLeft(from, a) {\n      if (from == 0) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(from, a.table.length + 1);\n        return newA;\n      }\n\n      // Slice the left recursively.\n      var left = getSlot(from, a);\n      var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (left == a.table.length - 1) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(left, a.table.length + 1)\n                                , lengths:new Array(a.table.length - left) };\n      newA.table[0] = sliced;\n      var len = 0;\n      for (var i = 0; i < newA.table.length; i++) {\n        len += length(newA.table[i]);\n        newA.lengths[i] = len;\n      }\n\n      return newA;\n    }\n\n    // Appends two trees.\n    function append(a,b) {\n      if (a.table.length === 0) {\n        return b;\n      }\n      if (b.table.length === 0) {\n        return a;\n      }\n\n      var c = append_(a, b);\n\n      // Check if both nodes can be crunshed together.\n      if (c[0].table.length + c[1].table.length <= m)=\"\" {=\"\" if=\"\" (c[0].table.length=\"==\" 0)=\"\" return=\"\" c[1];=\"\" }=\"\" (c[1].table.length=\"==\" c[0];=\"\" adjust=\"\" .table=\"\" and=\"\" .lengths=\"\" c[0].table=\"c[0].table.concat(c[1].table);\" (c[0].height=\"\"> 0) {\n          var len = length(c[0]);\n          for (var i = 0; i < c[1].lengths.length; i++) {\n            c[1].lengths[i] += len;\n          }\n          c[0].lengths = c[0].lengths.concat(c[1].lengths);\n        }\n\n        return c[0];\n      }\n\n      if (c[0].height > 0) {\n        var toRemove = calcToRemove(a, b);\n        if (toRemove > E) {\n          c = shuffle(c[0], c[1], toRemove);\n        }\n      }\n\n      return siblise(c[0], c[1]);\n    }\n\n    // Returns an array of two nodes; right and left. One node _may_ be empty.\n    function append_(a, b) {\n      if (a.height === 0 && b.height === 0) {\n        return [a, b];\n      }\n\n      if (a.height !== 1 || b.height !== 1) {\n        if (a.height === b.height) {\n          a = nodeCopy(a);\n          b = nodeCopy(b);\n          var appended = append_(botRight(a), botLeft(b));\n\n          insertRight(a, appended[1]);\n          insertLeft(b, appended[0]);\n        } else if (a.height > b.height) {\n          a = nodeCopy(a);\n          var appended = append_(botRight(a), b);\n\n          insertRight(a, appended[0]);\n          b = parentise(appended[1], appended[1].height + 1);\n        } else {\n          b = nodeCopy(b);\n          var appended = append_(a, botLeft(b));\n\n          var left = appended[0].table.length === 0 ? 0 : 1;\n          var right = left === 0 ? 1 : 0;\n          insertLeft(b, appended[left]);\n          a = parentise(appended[right], appended[right].height + 1);\n        }\n      }\n\n      // Check if balancing is needed and return based on that.\n      if (a.table.length === 0 || b.table.length === 0) {\n        return [a,b];\n      }\n\n      var toRemove = calcToRemove(a, b);\n      if (toRemove <= e)=\"\" {=\"\" return=\"\" [a,b];=\"\" }=\"\" shuffle(a,=\"\" b,=\"\" toremove);=\"\" helperfunctions=\"\" for=\"\" append_.=\"\" replaces=\"\" a=\"\" child=\"\" node=\"\" at=\"\" the=\"\" side=\"\" of=\"\" parent.=\"\" function=\"\" insertright(parent,=\"\" node)=\"\" var=\"\" index=\"parent.table.length\" -=\"\" 1;=\"\" parent.table[index]=\"node;\" parent.lengths[index]=\"length(node)\" +=\"index\"> 0 ? parent.lengths[index - 1] : 0;\n    }\n\n    function insertLeft(parent, node) {\n      if (node.table.length > 0) {\n        parent.table[0] = node;\n        parent.lengths[0] = length(node);\n\n        var len = length(parent.table[0]);\n        for (var i = 1; i < parent.lengths.length; i++) {\n          len += length(parent.table[i]);\n          parent.lengths[i] = len;\n        }\n      } else {\n        parent.table.shift();\n        for (var i = 1; i < parent.lengths.length; i++) {\n          parent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n        }\n        parent.lengths.shift();\n      }\n    }\n\n    // Returns the extra search steps for E. Refer to the paper.\n    function calcToRemove(a, b) {\n      var subLengths = 0;\n      for (var i = 0; i < a.table.length; i++) {\n        subLengths += a.table[i].table.length;\n      }\n      for (var i = 0; i < b.table.length; i++) {\n        subLengths += b.table[i].table.length;\n      }\n\n      var toRemove = a.table.length + b.table.length\n      return toRemove - (Math.floor((subLengths - 1) / M) + 1);\n    }\n\n    // get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n    function get2(a, b, index) {\n      return index < a.length ? a[index] : b[index - a.length];\n    }\n\n    function set2(a, b, index, value) {\n      if (index < a.length) {\n        a[index] = value;\n      } else {\n        b[index - a.length] = value;\n      }\n    }\n\n    function saveSlot(a, b, index, slot) {\n      set2(a.table, b.table, index, slot);\n\n      var l = (index == 0 || index == a.lengths.length) ?\n                0 : get2(a.lengths, a.lengths, index - 1);\n      set2(a.lengths, b.lengths, index, l + length(slot));\n    }\n\n    // Creates a node or leaf with a given length at their arrays for perfomance.\n    // Is only used by shuffle.\n    function createNode(h, length) {\n      if (length < 0) { length = 0; }\n      var a = { ctor:\"_Array\", height:h, table:new Array(length) };\n      if (h > 0) {\n        a.lengths = new Array(length);\n      }\n      return a;\n    }\n\n    // Returns an array of two balanced nodes.\n    function shuffle(a, b, toRemove) {\n      var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n      var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n      // Skip the slots with size M. More precise: copy the slot references\n      // to the new node\n      var read = 0;\n      while (get2(a.table, b.table, read).table.length % M == 0) {\n        set2(newA.table, newB.table, read, get2(a.table, b.table, read));\n        set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n        read++;\n      }\n\n      // Pulling items from left to right, caching in a slot before writing\n      // it into the new nodes.\n      var write = read;\n      var slot = new createNode(a.height - 1, 0);\n      var from = 0;\n\n      // If the current slot is still containing data, then there will be at\n      // least one more write, so we do not break this loop yet.\n      while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove) {\n        // Find out the max possible items for copying.\n        var source = get2(a.table, b.table, read);\n        var to = Math.min(M - slot.table.length, source.table.length)\n\n        // Copy and adjust size table.\n        slot.table = slot.table.concat(source.table.slice(from, to));\n        if (slot.height > 0) {\n          var len = slot.lengths.length;\n          for (var i = len; i < len + to - from; i++) {\n            slot.lengths[i] = length(slot.table[i]);\n            slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n          }\n        }\n\n        from += to;\n\n        // Only proceed to next slots[i] if the current one was\n        // fully copied.\n        if (source.table.length <= to)=\"\" {=\"\" read++;=\"\" from=\"0;\" }=\"\" only=\"\" create=\"\" a=\"\" new=\"\" slot=\"\" if=\"\" the=\"\" current=\"\" one=\"\" is=\"\" filled=\"\" up.=\"\" (slot.table.length=\"=\" m)=\"\" saveslot(newa,=\"\" newb,=\"\" write,=\"\" slot);=\"\" -=\"\" 1,0);=\"\" write++;=\"\" cleanup=\"\" after=\"\" loop.=\"\" copy=\"\" last=\"\" into=\"\" nodes.=\"\"> 0) {\n        saveSlot(newA, newB, write, slot);\n        write++;\n      }\n\n      // Shift the untouched slots to the left\n      while (read < a.table.length + b.table.length ) {\n        saveSlot(newA, newB, write, get2(a.table, b.table, read));\n        read++; write++;\n      }\n\n      return [newA, newB];\n    }\n\n    // Navigation functions\n    function botRight(a) { return a.table[a.table.length - 1]; }\n    function botLeft(a)  { return a.table[0]; }\n\n    // Copies a node for updating. Note that you should not use this if\n    // only updating only one of \"table\" or \"lengths\" for performance reasons.\n    function nodeCopy(a) {\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice() };\n      if (a.height > 0) { newA.lengths = a.lengths.slice(); }\n      return newA;\n    }\n\n    // Returns how many items are in the tree.\n    function length(array) {\n      if (array.height == 0) {\n        return array.table.length;\n      } else {\n        return array.lengths[array.lengths.length - 1];\n      }\n    }\n\n    // Calculates in which slot of \"table\" the item probably is, then\n    // find the exact slot via forward searching in  \"lengths\". Returns the index.\n    function getSlot(i, a) {\n      var slot = i >> (5 * a.height);\n      while (a.lengths[slot] <= 0=\"\" 1=\"\" i)=\"\" {=\"\" slot++;=\"\" }=\"\" return=\"\" slot;=\"\" recursively=\"\" creates=\"\" a=\"\" tree=\"\" with=\"\" given=\"\" height=\"\" containing=\"\" only=\"\" the=\"\" item.=\"\" function=\"\" create(item,=\"\" h)=\"\" if=\"\" (h=\"=\" 0)=\"\" ctor:\"_array\",=\"\" height:0=\"\" ,=\"\" table:[item]=\"\" };=\"\" else=\"\" height:h=\"\" table:[create(item,=\"\" h=\"\" -=\"\" 1)]=\"\" lengths:[1]=\"\" that=\"\" contains=\"\" tree.=\"\" parentise(tree,=\"\" tree.height)=\"\" tree;=\"\" table:[parentise(tree,=\"\" lengths:[length(tree)]=\"\" emphasizes=\"\" blood=\"\" brotherhood=\"\" beneath=\"\" two=\"\" trees.=\"\" siblise(a,=\"\" b)=\"\" height:a.height=\"\" +=\"\" table:[a,=\"\" b]=\"\" lengths:[length(a),=\"\" length(a)=\"\" length(b)]=\"\" tojsarray(a)=\"\" var=\"\" jsarray=\"new\" array(length(a));=\"\" tojsarray_(jsarray,=\"\" 0,=\"\" a);=\"\" jsarray;=\"\" i,=\"\" a)=\"\" for=\"\" (var=\"\" t=\"0;\" <=\"\" a.table.length;=\"\" t++)=\"\" (a.height=\"=\" jsarray[i=\"\" t]=\"a.table[t];\" inc=\"t\" ==\"0\" ?=\"\" :=\"\" a.lengths[t=\"\" 1];=\"\" i=\"\" inc,=\"\" a.table[t]);=\"\" fromjsarray(jsarray)=\"\" (jsarray.length=\"=\" empty;=\"\" math.log(m));=\"\" fromjsarray_(jsarray,=\"\" h,=\"\" jsarray.length);=\"\" from,=\"\" to)=\"\" table:jsarray.slice(from,=\"\" step=\"Math.pow(M,\" h);=\"\" table=\"new\" array(math.ceil((to=\"\" from)=\"\" step));=\"\" lengths=\"new\" array(table.length);=\"\" table.length;=\"\" i++)=\"\" table[i]=\"fromJSArray_(\" jsarray,=\"\" 1,=\"\" from=\"\" (i=\"\" *=\"\" step)=\"\" math.min(from=\"\" ((i=\"\" 1)=\"\" step),=\"\" to));=\"\" lengths[i]=\"length(table[i])\"> 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    Elm.Native.Array.values = {\n      empty:empty,\n      fromList:fromList,\n      toList:toList,\n      initialize:F2(initialize),\n      append:F2(append),\n      push:F2(push),\n      slice:F3(slice),\n      get:F2(get),\n      set:F3(set),\n      map:F2(map),\n      indexedMap:F2(indexedMap),\n      foldl:F3(foldl),\n      foldr:F3(foldr),\n      length:length,\n\n      toJSArray:toJSArray,\n      fromJSArray:fromJSArray\n    };\n\n    return elm.Native.Array.values = Elm.Native.Array.values;\n}\n\n\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(elm) {\n  elm.Native = elm.Native || {};\n  elm.Native.Basics = elm.Native.Basics || {};\n  if (elm.Native.Basics.values) return elm.Native.Basics.values;\n\n  var Utils = Elm.Native.Utils.make(elm);\n\n  function div(a, b) {\n      return (a/b)|0;\n  }\n  function rem(a, b) {\n      return a % b;\n  }\n  function mod(a, b) {\n        if (b === 0) {\n            throw new Error(\"Cannot perform mod 0. Division by zero error.\");\n        }\n        var r = a % b;\n        var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r+b) : -mod(-a,-b));\n\n        return m === b ? 0 : m;\n  }\n  function logBase(base, n) {\n      return Math.log(n) / Math.log(base);\n  }\n  function negate(n) {\n      return -n;\n  }\n  function abs(n) {\n      return n < 0 ? -n : n;\n  }\n\n  function min(a, b) {\n      return Utils.cmp(a,b) < 0 ? a : b;\n  }\n  function max(a, b) {\n      return Utils.cmp(a,b) > 0 ? a : b;\n  }\n  function clamp(lo, hi, n) {\n      return Utils.cmp(n,lo) < 0 ? lo : Utils.cmp(n,hi) > 0 ? hi : n;\n  }\n\n  function xor(a, b) {\n      return a !== b;\n  }\n  function not(b) {\n      return !b;\n  }\n  function isInfinite(n) {\n      return n === Infinity || n === -Infinity\n  }\n\n  function truncate(n) {\n      return n|0;\n  }\n\n  function degrees(d) {\n      return d * Math.PI / 180;\n  }\n  function turns(t) {\n      return 2 * Math.PI * t;\n  }\n  function fromPolar(point) {\n      var r = point._0;\n      var t = point._1;\n      return Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n  }\n  function toPolar(point) {\n      var x = point._0;\n      var y = point._1;\n      return Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y,x));\n  }\n\n  var basics = {\n      div: F2(div),\n      rem: F2(rem),\n      mod: F2(mod),\n\n      pi: Math.PI,\n      e: Math.E,\n      cos: Math.cos,\n      sin: Math.sin,\n      tan: Math.tan,\n      acos: Math.acos,\n      asin: Math.asin,\n      atan: Math.atan,\n      atan2: F2(Math.atan2),\n\n      degrees:  degrees,\n      turns:  turns,\n      fromPolar:  fromPolar,\n      toPolar:  toPolar,\n\n      sqrt: Math.sqrt,\n      logBase: F2(logBase),\n      negate: negate,\n      abs: abs,\n      min: F2(min),\n      max: F2(max),\n      clamp: F3(clamp),\n      compare: Utils.compare,\n\n      xor: F2(xor),\n      not: not,\n\n      truncate: truncate,\n      ceiling: Math.ceil,\n      floor: Math.floor,\n      round: Math.round,\n      toFloat: function(x) { return x; },\n      isNaN: isNaN,\n      isInfinite: isInfinite\n  };\n\n  return elm.Native.Basics.values = basics;\n};\n\nElm.Native.Char = {};\nElm.Native.Char.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Char = elm.Native.Char || {};\n    if (elm.Native.Char.values) return elm.Native.Char.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isBetween(lo,hi) { return function(chr) {\n\tvar c = chr.charCodeAt(0);\n\treturn lo <= 180=\"\" c=\"\" &&=\"\" <=\"hi;\" };=\"\" }=\"\" var=\"\" isdigit=\"isBetween('0'.charCodeAt(0),'9'.charCodeAt(0));\" chk1=\"isBetween('a'.charCodeAt(0),'f'.charCodeAt(0));\" chk2=\"isBetween('A'.charCodeAt(0),'F'.charCodeAt(0));\" return=\"\" elm.native.char.values=\"{\" fromcode=\"\" :=\"\" function(c)=\"\" {=\"\" string.fromcharcode(c);=\"\" },=\"\" tocode=\"\" c.touppercase().charcodeat(0);=\"\" toupper=\"\" utils.chr(c.touppercase());=\"\" tolower=\"\" utils.chr(c.tolowercase());=\"\" tolocaleupper=\"\" utils.chr(c.tolocaleuppercase());=\"\" tolocalelower=\"\" utils.chr(c.tolocalelowercase());=\"\" islower=\"\" isbetween('a'.charcodeat(0),'z'.charcodeat(0)),=\"\" isupper=\"\" isdigit,=\"\" isoctdigit=\"\" isbetween('0'.charcodeat(0),'7'.charcodeat(0)),=\"\" ishexdigit=\"\" isdigit(c)=\"\" ||=\"\" chk1(c)=\"\" chk2(c);=\"\" elm.native.color=\"{};\" elm.native.color.make=\"function(elm)\" elm.native=\"elm.Native\" {};=\"\" if=\"\" (elm.native.color.values)=\"\" elm.native.color.values;=\"\" function=\"\" tocss(c)=\"\" format=\"\" ;=\"\" colors=\"\" (c.ctor=\"==\" 'rgba')=\"\" +=\"\" ',=\"\" '=\"\" c._1=\"\" c._2;=\"\" else=\"\" *=\"\" math.pi)=\"\" (c._1=\"\" 100)=\"\" '%,=\"\" (c._2=\"\" '%';=\"\" (c._3=\"==\" 1)=\"\" '('=\"\" ')';=\"\" 'a('=\"\" c._3=\"\" elm.native.color.values=\"{\" tocss:tocss=\"\" elm.native.debug=\"{};\" elm.native.debug.make=\"function(elm)\" (elm.native.debug.values)=\"\" elm.native.debug.values;=\"\" ('values'=\"\" in=\"\" elm.native.debug)=\"\" elm.native.debug.values=\"Elm.Native.Debug.values;\" tostring=\"Elm.Native.Show.make(elm).toString;\" replace=\"Elm.Native.Utils.make(elm).replace;\" log(tag,=\"\" value)=\"\" msg=\"tag\" ':=\"\" tostring(value);=\"\" process=\"process\" (process.stdout)=\"\" process.stdout.write(msg);=\"\" console.log(msg);=\"\" value;=\"\" crash(message)=\"\" throw=\"\" new=\"\" error(message);=\"\" tracepath(debugid,=\"\" form)=\"\" replace([[\"debugtracepathid\",debugid]],=\"\" form);=\"\" watchtracker()=\"\" this.frames=\"[{}];\" this.clear=\"function()\" this.watches=\"{};\" this.pushframe=\"function()\" lastframe=\"this.frames[this.frames.length\" -=\"\" 1];=\"\" this.frames.push(lastframe);=\"\" this.notify=\"function(tag,\" this.frames[this.frames.length=\"\" 1][tag]=\"value;\" watchtracker=\"new\" watchtracker();=\"\" watch(tag,=\"\" watchtracker.notify(tag,=\"\" value);=\"\" watchsummary(tag,=\"\" f,=\"\" f(value));=\"\" crash:=\"\" crash,=\"\" tracepath:=\"\" f2(tracepath),=\"\" log:=\"\" f2(log),=\"\" watch:=\"\" f2(watch),=\"\" watchsummary:f3(watchsummary),=\"\" watchtracker:=\"\" setup=\"\" elm.native.graphics=\"Elm.Native.Graphics\" elm.native.graphics.element=\"Elm.Native.Graphics.Element\" definition=\"\" elm.native.graphics.element.make=\"function(localRuntime)\" 'use=\"\" strict';=\"\" attempt=\"\" to=\"\" short-circuit=\"\" elm.native.graphics.element)=\"\" elm.native.graphics.element.values;=\"\" color=\"Elm.Native.Color.make(localRuntime);\" list=\"Elm.Native.List.make(localRuntime);\" utils=\"Elm.Native.Utils.make(localRuntime);\" createnode(elementtype)=\"\" node=\"document.createElement(elementType);\" node.style.padding=\"0\" node.style.margin=\"0\" node;=\"\" setprops(elem,=\"\" node)=\"\" props=\"elem.props;\" element=\"elem.element;\" width=\"props.width\" (element.adjustwidth=\"\" 0);=\"\" height=\"props.height\" (element.adjustheight=\"\" node.style.width=\"(width\" |0)=\"\" 'px';=\"\" node.style.height=\"(height|0)\" (props.opacity=\"\" !=\"=\" node.style.opacity=\"props.opacity;\" (props.color.ctor=\"==\" 'just')=\"\" node.style.backgroundcolor=\"Color.toCss(props.color._0);\" (props.tag=\"\" '')=\"\" node.id=\"props.tag;\" (props.hover.ctor=\"\" '_tuple0')=\"\" addhover(node,=\"\" props.hover);=\"\" (props.click.ctor=\"\" addclick(node,=\"\" props.click);=\"\" (props.href=\"\" anchor=\"createNode('a');\" anchor.href=\"props.href;\" anchor.style.display=\"block\" anchor.style.pointerevents=\"auto\" anchor.appendchild(node);=\"\" addclick(e,=\"\" handler)=\"\" e.style.pointerevents=\"auto\" e.elm_click_handler=\"handler;\" trigger(ev)=\"\" e.elm_click_handler(utils.tuple0);=\"\" ev.stoppropagation();=\"\" e.elm_click_trigger=\"trigger;\" e.addeventlistener('click',=\"\" trigger);=\"\" removeclick(e,=\"\" (e.elm_click_trigger)=\"\" e.removeeventlistener('click',=\"\" e.elm_click_trigger);=\"\" addhover(e,=\"\" e.elm_hover_handler=\"handler;\" e.elm_hover_count=\"0;\" over(evt)=\"\" (e.elm_hover_count++=\"\"> 0) return;\n            e.elm_hover_handler(true);\n            evt.stopPropagation();\n        }\n        function out(evt) {\n            if (e.contains(evt.toElement || evt.relatedTarget)) return;\n            e.elm_hover_count = 0;\n            e.elm_hover_handler(false);\n            evt.stopPropagation();\n        }\n        e.elm_hover_over = over;\n        e.elm_hover_out = out;\n        e.addEventListener('mouseover', over);\n        e.addEventListener('mouseout', out);\n    }\n\n    function removeHover(e) {\n        e.elm_hover_handler = null;\n        if (e.elm_hover_over) {\n            e.removeEventListener('mouseover', e.elm_hover_over);\n            e.elm_hover_over = null;\n        }\n        if (e.elm_hover_out) {\n            e.removeEventListener('mouseout', e.elm_hover_out);\n            e.elm_hover_out = null;\n        }\n    }\n\n    function image(props, img) {\n        switch (img._0.ctor) {\n        case 'Plain':   return plainImage(img._3);\n        case 'Fitted':  return fittedImage(props.width, props.height, img._3);\n        case 'Cropped': return croppedImage(img,props.width,props.height,img._3);\n        case 'Tiled':   return tiledImage(img._3);\n        }\n    }\n\n    function plainImage(src) {\n        var img = createNode('img');\n        img.src = src;\n        img.name = src;\n        img.style.display = \"block\";\n        return img;\n    }\n\n    function tiledImage(src) {\n        var div = createNode('div');\n        div.style.backgroundImage = 'url(' + src + ')';\n        return div;\n    }\n\n    function fittedImage(w, h, src) {\n        var div = createNode('div');\n        div.style.background = 'url(' + src + ') no-repeat center';\n        div.style.webkitBackgroundSize = 'cover';\n        div.style.MozBackgroundSize = 'cover';\n        div.style.OBackgroundSize = 'cover';\n        div.style.backgroundSize = 'cover';\n        return div;\n    }\n\n    function croppedImage(elem, w, h, src) {\n        var pos = elem._0._0;\n        var e = createNode('div');\n        e.style.overflow = \"hidden\";\n\n        var img = createNode('img');\n        img.onload = function() {\n            var sw = w / elem._1, sh = h / elem._2;\n            img.style.width = ((this.width * sw)|0) + 'px';\n            img.style.height = ((this.height * sh)|0) + 'px';\n            img.style.marginLeft = ((- pos._0 * sw)|0) + 'px';\n            img.style.marginTop = ((- pos._1 * sh)|0) + 'px';\n        };\n        img.src = src;\n        img.name = src;\n        e.appendChild(img);\n        return e;\n    }\n\n    function goOut(node) {\n        node.style.position = 'absolute';\n        return node;\n    }\n    function goDown(node) {\n        return node;\n    }\n    function goRight(node) {\n        node.style.styleFloat = 'left';\n        node.style.cssFloat = 'left';\n        return node;\n    }\n\n    var directionTable = {\n        DUp    : goDown,\n        DDown  : goDown,\n        DLeft  : goRight,\n        DRight : goRight,\n        DIn    : goOut,\n        DOut   : goOut\n    };\n    function needsReversal(dir) {\n        return dir == 'DUp' || dir == 'DLeft' || dir == 'DIn';\n    }\n\n    function flow(dir,elist) {\n        var array = List.toArray(elist);\n        var container = createNode('div');\n        var goDir = directionTable[dir];\n        if (goDir == goOut) {\n            container.style.pointerEvents = 'none';\n        }\n        if (needsReversal(dir)) {\n            array.reverse();\n        }\n        var len = array.length;\n        for (var i = 0; i < len; ++i) {\n            container.appendChild(goDir(render(array[i])));\n        }\n        return container;\n    }\n\n    function toPos(pos) {\n        switch(pos.ctor) {\n        case \"Absolute\": return  pos._0 + \"px\";\n        case \"Relative\": return (pos._0 * 100) + \"%\";\n        }\n    }\n\n    // must clear right, left, top, bottom, and transform\n    // before calling this function\n    function setPos(pos,elem,e) {\n        var element = elem.element;\n        var props = elem.props;\n        var w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n        var h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n        e.style.position = 'absolute';\n        e.style.margin = 'auto';\n        var transform = '';\n        switch(pos.horizontal.ctor) {\n        case 'P': e.style.right = toPos(pos.x); e.style.removeProperty('left'); break;\n        case 'Z': transform = 'translateX(' + ((-w/2)|0) + 'px) ';\n        case 'N': e.style.left = toPos(pos.x); e.style.removeProperty('right'); break;\n        }\n        switch(pos.vertical.ctor) {\n        case 'N': e.style.bottom = toPos(pos.y); e.style.removeProperty('top'); break;\n        case 'Z': transform += 'translateY(' + ((-h/2)|0) + 'px)';\n        case 'P': e.style.top = toPos(pos.y); e.style.removeProperty('bottom'); break;\n        }\n        if (transform !== '') {\n            addTransform(e.style, transform);\n        }\n        return e;\n    }\n\n    function addTransform(style, transform) {\n        style.transform       = transform;\n        style.msTransform     = transform;\n        style.MozTransform    = transform;\n        style.webkitTransform = transform;\n        style.OTransform      = transform;\n    }\n\n    function container(pos,elem) {\n        var e = render(elem);\n        setPos(pos, elem, e);\n        var div = createNode('div');\n        div.style.position = 'relative';\n        div.style.overflow = 'hidden';\n        div.appendChild(e);\n        return div;\n    }\n\n    function rawHtml(elem) {\n        var html = elem.html;\n        var guid = elem.guid;\n        var align = elem.align;\n\n        var div = createNode('div');\n        div.innerHTML = html;\n        div.style.visibility = \"hidden\";\n        if (align) {\n            div.style.textAlign = align;\n        }\n        div.style.visibility = 'visible';\n        div.style.pointerEvents = 'auto';\n        return div;\n    }\n\n    function render(elem) {\n        return setProps(elem, makeElement(elem));\n    }\n    function makeElement(e) {\n        var elem = e.element;\n        switch(elem.ctor) {\n        case 'Image':     return image(e.props, elem);\n        case 'Flow':      return flow(elem._0.ctor, elem._1);\n        case 'Container': return container(elem._0, elem._1);\n        case 'Spacer':    return createNode('div');\n        case 'RawHtml':   return rawHtml(elem);\n        case 'Custom':    return elem.render(elem.model);\n        }\n    }\n\n    function updateAndReplace(node, curr, next) {\n        var newNode = update(node, curr, next);\n        if (newNode !== node) {\n            node.parentNode.replaceChild(newNode, node);\n        }\n        return newNode;\n    }\n\n    function update(node, curr, next) {\n        var rootNode = node;\n        if (node.tagName === 'A') {\n            node = node.firstChild;\n        }\n        if (curr.props.id === next.props.id) {\n            updateProps(node, curr, next);\n            return rootNode;\n        }\n        if (curr.element.ctor !== next.element.ctor) {\n            return render(next);\n        }\n        var nextE = next.element;\n        var currE = curr.element;\n        switch(nextE.ctor) {\n        case \"Spacer\":\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"RawHtml\":\n            // only markdown blocks have guids, so this must be a text block\n            if (nextE.guid === null) {\n                if(currE.html.valueOf() !== nextE.html.valueOf()) {\n                    node.innerHTML = nextE.html;\n                }\n                updateProps(node, curr, next);\n                return rootNode;\n            }\n            if (nextE.guid !== currE.guid) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Image\":\n            if (nextE._0.ctor === 'Plain') {\n                if (nextE._3 !== currE._3) {\n                    node.src = nextE._3;\n                }\n            } else if (!Utils.eq(nextE,currE) ||\n                       next.props.width !== curr.props.width ||\n                       next.props.height !== curr.props.height) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Flow\":\n            var arr = List.toArray(nextE._1);\n            for (var i = arr.length; i--; ) {\n                arr[i] = arr[i].element.ctor;\n            }\n            if (nextE._0.ctor !== currE._0.ctor) {\n                return render(next);\n            }\n            var nexts = List.toArray(nextE._1);\n            var kids = node.childNodes;\n            if (nexts.length !== kids.length) {\n                return render(next);\n            }\n            var currs = List.toArray(currE._1);\n            var dir = nextE._0.ctor;\n            var goDir = directionTable[dir];\n            var toReverse = needsReversal(dir);\n            var len = kids.length;\n            for (var i = len; i-- ;) {\n                var subNode = kids[toReverse ? len - i - 1 : i];\n                goDir(updateAndReplace(subNode, currs[i], nexts[i]));\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Container\":\n            var subNode = node.firstChild;\n            var newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n            setPos(nextE._0, nextE._1, newSubNode);\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Custom\":\n            if (currE.type === nextE.type) {\n                var updatedNode = nextE.update(node, currE.model, nextE.model);\n                updateProps(updatedNode, curr, next);\n                return updatedNode;\n            } else {\n                return render(next);\n            }\n        }\n    }\n\n    function updateProps(node, curr, next) {\n        var nextProps = next.props;\n        var currProps = curr.props;\n\n        var element = next.element;\n        var width = nextProps.width - (element.adjustWidth || 0);\n        var height = nextProps.height - (element.adjustHeight || 0);\n        if (width !== currProps.width) {\n            node.style.width = (width|0) + 'px';\n        }\n        if (height !== currProps.height) {\n            node.style.height = (height|0) + 'px';\n        }\n\n        if (nextProps.opacity !== currProps.opacity) {\n            node.style.opacity = nextProps.opacity;\n        }\n\n        var nextColor = nextProps.color.ctor === 'Just'\n            ? Color.toCss(nextProps.color._0)\n            : '';\n        if (node.style.backgroundColor !== nextColor) {\n            node.style.backgroundColor = nextColor;\n        }\n\n        if (nextProps.tag !== currProps.tag) {\n            node.id = nextProps.tag;\n        }\n\n        if (nextProps.href !== currProps.href) {\n            if (currProps.href === '') {\n                // add a surrounding href\n                var anchor = createNode('a');\n                anchor.href = nextProps.href;\n                anchor.style.display = 'block';\n                anchor.style.pointerEvents = 'auto';\n\n                node.parentNode.replaceChild(anchor, node);\n                anchor.appendChild(node);\n            } else if (nextProps.href === '') {\n                // remove the surrounding href\n                var anchor = node.parentNode;\n                anchor.parentNode.replaceChild(node, anchor);\n            } else {\n                // just update the link\n                node.parentNode.href = nextProps.href;\n            }\n        }\n\n        // update click and hover handlers\n        var removed = false;\n\n        // update hover handlers\n        if (currProps.hover.ctor === '_Tuple0') {\n            if (nextProps.hover.ctor !== '_Tuple0') {\n                addHover(node, nextProps.hover);\n            }\n        }\n        else {\n            if (nextProps.hover.ctor === '_Tuple0') {\n                removed = true;\n                removeHover(node);\n            }\n            else {\n                node.elm_hover_handler = nextProps.hover;\n            }\n        }\n\n        // update click handlers\n        if (currProps.click.ctor === '_Tuple0') {\n            if (nextProps.click.ctor !== '_Tuple0') {\n                addClick(node, nextProps.click);\n            }\n        }\n        else {\n            if (nextProps.click.ctor === '_Tuple0') {\n                removed = true;\n                removeClick(node);\n            } else {\n                node.elm_click_handler = nextProps.click;\n            }\n        }\n\n        // stop capturing clicks if\n        if (removed\n            && nextProps.hover.ctor === '_Tuple0'\n            && nextProps.click.ctor === '_Tuple0')\n        {\n            node.style.pointerEvents = 'none';\n        }\n    }\n\n\n    function htmlHeight(width, rawHtml) {\n        // create dummy node\n        var temp = document.createElement('div');\n        temp.innerHTML = rawHtml.html;\n        if (width > 0) {\n            temp.style.width = width + \"px\";\n        }\n        temp.style.visibility = \"hidden\";\n        temp.style.styleFloat = \"left\";\n        temp.style.cssFloat   = \"left\";\n\n        document.body.appendChild(temp);\n\n        // get dimensions\n        var style = window.getComputedStyle(temp, null);\n        var w = Math.ceil(style.getPropertyValue(\"width\").slice(0,-2) - 0);\n        var h = Math.ceil(style.getPropertyValue(\"height\").slice(0,-2) - 0);\n        document.body.removeChild(temp);\n        return Utils.Tuple2(w,h);\n    }\n\n\n    return Elm.Native.Graphics.Element.values = {\n        render: render,\n        update: update,\n        updateAndReplace: updateAndReplace,\n\n        createNode: createNode,\n        addTransform: addTransform,\n        htmlHeight: F2(htmlHeight),\n        guid: Utils.guid\n    };\n\n};\n\nElm.Native.Json = {};\nElm.Native.Json.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Json = localRuntime.Native.Json || {};\n    if (localRuntime.Native.Json.values) {\n        return localRuntime.Native.Json.values;\n    }\n\n    var ElmArray = Elm.Native.Array.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Maybe = Elm.Maybe.make(localRuntime);\n    var Result = Elm.Result.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function crash(expected, actual) {\n        throw new Error(\n            'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n        );\n    }\n\n\n    // PRIMITIVE VALUES\n\n    function decodeNull(successValue) {\n        return function(value) {\n            if (value === null) {\n                return successValue;\n            }\n            crash('null', value);\n        };\n    }\n\n\n    function decodeString(value) {\n        if (typeof value === 'string' || value instanceof String) {\n            return value;\n        }\n        crash('a String', value);\n    }\n\n\n    function decodeFloat(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        crash('a Float', value);\n    }\n\n\n    function decodeInt(value) {\n        if (typeof value === 'number' && (value|0) === value) {\n            return value;\n        }\n        crash('an Int', value);\n    }\n\n\n    function decodeBool(value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        crash('a Bool', value);\n    }\n\n\n    // ARRAY\n\n    function decodeArray(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var array = new Array(len);\n                for (var i = len; i-- ; ) {\n                    array[i] = decoder(value[i]);\n                }\n                return ElmArray.fromJSArray(array);\n            }\n            crash('an Array', value);\n        };\n    }\n\n\n    // LIST\n\n    function decodeList(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var list = List.Nil;\n                for (var i = len; i-- ; ) {\n                    list = List.Cons( decoder(value[i]), list );\n                }\n                return list;\n            }\n            crash('a List', value);\n        };\n    }\n\n\n    // MAYBE\n\n    function decodeMaybe(decoder) {\n        return function(value) {\n            try {\n                return Maybe.Just(decoder(value));\n            } catch(e) {\n                return Maybe.Nothing;\n            }\n        };\n    }\n\n\n    // FIELDS\n\n    function decodeField(field, decoder) {\n        return function(value) {\n            var subValue = value[field];\n            if (subValue !== undefined) {\n                return decoder(subValue);\n            }\n            crash(\"an object with field '\" + field + \"'\", value);\n        };\n    }\n\n\n    // OBJECTS\n\n    function decodeKeyValuePairs(decoder) {\n        return function(value) {\n            var isObject =\n                typeof value === 'object'\n                    && value !== null\n                    && !(value instanceof Array);\n\n            if (isObject) {\n                var keyValuePairs = List.Nil;\n                for (var key in value) {\n                    var elmValue = decoder(value[key]);\n                    var pair = Utils.Tuple2(key, elmValue);\n                    keyValuePairs = List.Cons(pair, keyValuePairs);\n                }\n                return keyValuePairs;\n            }\n\n            crash(\"an object\", value);\n        };\n    }\n\n    function decodeObject1(f, d1) {\n        return function(value) {\n            return f(d1(value));\n        };\n    }\n\n    function decodeObject2(f, d1, d2) {\n        return function(value) {\n            return A2( f, d1(value), d2(value) );\n        };\n    }\n\n    function decodeObject3(f, d1, d2, d3) {\n        return function(value) {\n            return A3( f, d1(value), d2(value), d3(value) );\n        };\n    }\n\n    function decodeObject4(f, d1, d2, d3, d4) {\n        return function(value) {\n            return A4( f, d1(value), d2(value), d3(value), d4(value) );\n        };\n    }\n\n    function decodeObject5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            return A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n        };\n    }\n\n    function decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            return A6( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value)\n            );\n        };\n    }\n\n    function decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            return A7( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value)\n            );\n        };\n    }\n\n    function decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            return A8( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value),\n                d8(value)\n            );\n        };\n    }\n\n\n    // TUPLES\n\n    function decodeTuple1(f, d1) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 1 ) {\n                crash('a Tuple of length 1', value);\n            }\n            return f( d1(value[0]) );\n        };\n    }\n\n    function decodeTuple2(f, d1, d2) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 2 ) {\n                crash('a Tuple of length 2', value);\n            }\n            return A2( f, d1(value[0]), d2(value[1]) );\n        };\n    }\n\n    function decodeTuple3(f, d1, d2, d3) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 3 ) {\n                crash('a Tuple of length 3', value);\n            }\n            return A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n        };\n    }\n\n\n    function decodeTuple4(f, d1, d2, d3, d4) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 4 ) {\n                crash('a Tuple of length 4', value);\n            }\n            return A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n        };\n    }\n\n\n    function decodeTuple5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 5 ) {\n                crash('a Tuple of length 5', value);\n            }\n            return A5( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4])\n            );\n        };\n    }\n\n\n    function decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 6 ) {\n                crash('a Tuple of length 6', value);\n            }\n            return A6( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5])\n            );\n        };\n    }\n\n    function decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 7 ) {\n                crash('a Tuple of length 7', value);\n            }\n            return A7( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6])\n            );\n        };\n    }\n\n\n    function decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 8 ) {\n                crash('a Tuple of length 8', value);\n            }\n            return A8( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6]),\n                d8(value[7])\n            );\n        };\n    }\n\n\n    // CUSTOM DECODERS\n\n    function decodeValue(value) {\n        return value;\n    }\n\n    function runDecoderValue(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function customDecoder(decoder, callback) {\n        return function(value) {\n            var result = callback(decoder(value));\n            if (result.ctor === 'Err') {\n                throw new Error('custom decoder failed: ' + result._0);\n            }\n            return result._0;\n        }\n    }\n\n    function andThen(decode, callback) {\n        return function(value) {\n            var result = decode(value);\n            return callback(result)(value);\n        }\n    }\n\n    function fail(msg) {\n        return function(value) {\n            throw new Error(msg);\n        }\n    }\n\n    function succeed(successValue) {\n        return function(value) {\n            return successValue;\n        }\n    }\n\n\n    // ONE OF MANY\n\n    function oneOf(decoders) {\n        return function(value) {\n            var errors = [];\n            var temp = decoders;\n            while (temp.ctor !== '[]') {\n                try {\n                    return temp._0(value);\n                } catch(e) {\n                    errors.push(e.message);\n                }\n                temp = temp._1;\n            }\n            throw new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n        }\n    }\n\n    function get(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n\n    // ENCODE / DECODE\n\n    function runDecoderString(decoder, string) {\n        try {\n            return Result.Ok(decoder(JSON.parse(string)));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function encode(indentLevel, value) {\n        return JSON.stringify(value, null, indentLevel);\n    }\n\n    function identity(value) {\n        return value;\n    }\n\n    function encodeObject(keyValuePairs) {\n        var obj = {};\n        while (keyValuePairs.ctor !== '[]') {\n            var pair = keyValuePairs._0;\n            obj[pair._0] = pair._1;\n            keyValuePairs = keyValuePairs._1;\n        }\n        return obj;\n    }\n\n    return localRuntime.Native.Json.values = {\n        encode: F2(encode),\n        runDecoderString: F2(runDecoderString),\n        runDecoderValue: F2(runDecoderValue),\n\n        get: F2(get),\n        oneOf: oneOf,\n\n        decodeNull: decodeNull,\n        decodeInt: decodeInt,\n        decodeFloat: decodeFloat,\n        decodeString: decodeString,\n        decodeBool: decodeBool,\n\n        decodeMaybe: decodeMaybe,\n\n        decodeList: decodeList,\n        decodeArray: decodeArray,\n\n        decodeField: F2(decodeField),\n\n        decodeObject1: F2(decodeObject1),\n        decodeObject2: F3(decodeObject2),\n        decodeObject3: F4(decodeObject3),\n        decodeObject4: F5(decodeObject4),\n        decodeObject5: F6(decodeObject5),\n        decodeObject6: F7(decodeObject6),\n        decodeObject7: F8(decodeObject7),\n        decodeObject8: F9(decodeObject8),\n        decodeKeyValuePairs: decodeKeyValuePairs,\n\n        decodeTuple1: F2(decodeTuple1),\n        decodeTuple2: F3(decodeTuple2),\n        decodeTuple3: F4(decodeTuple3),\n        decodeTuple4: F5(decodeTuple4),\n        decodeTuple5: F6(decodeTuple5),\n        decodeTuple6: F7(decodeTuple6),\n        decodeTuple7: F8(decodeTuple7),\n        decodeTuple8: F9(decodeTuple8),\n\n        andThen: F2(andThen),\n        decodeValue: decodeValue,\n        customDecoder: F2(customDecoder),\n        fail: fail,\n        succeed: succeed,\n\n        identity: identity,\n        encodeNull: null,\n        encodeArray: ElmArray.toJSArray,\n        encodeList: List.toArray,\n        encodeObject: encodeObject\n\n    };\n\n};\n\nElm.Native.List = {};\nElm.Native.List.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.List = elm.Native.List || {};\n    if (elm.Native.List.values) return elm.Native.List.values;\n    if ('values' in Elm.Native.List)\n        return elm.Native.List.values = Elm.Native.List.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var Nil = Utils.Nil;\n    var Cons = Utils.Cons;\n\n    function throwError(f) {\n        throw new Error(\"Function '\" + f + \"' expects a non-empty list!\");\n    }\n\n    function toArray(xs) {\n        var out = [];\n        while (xs.ctor !== '[]') {\n            out.push(xs._0);\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function fromArray(arr) {\n        var out = Nil;\n        for (var i = arr.length; i--; ) {\n            out = Cons(arr[i], out);\n        }\n        return out;\n    }\n\n    function range(lo,hi) {\n        var lst = Nil;\n        if (lo <= hi)=\"\" {=\"\" do=\"\" lst=\"Cons(hi,lst)\" }=\"\" while=\"\" (hi--=\"\">lo);\n        }\n        return lst\n    }\n\n    function head(v) {\n        return v.ctor === '[]' ? throwError('head') : v._0;\n    }\n    function tail(v) {\n        return v.ctor === '[]' ? throwError('tail') : v._1;\n    }\n\n    function last(xs) {\n        if (xs.ctor === '[]') { throwError('last'); }\n        var out = xs._0;\n        while (xs.ctor !== '[]') {\n            out = xs._0;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function map(f, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            arr.push(f(xs._0));\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    // f defined similarly for both foldl and foldr (NB: different from Haskell)\n    // ie, foldl : (a -> b -> b) -> b -> [a] -> b\n    function foldl(f, b, xs) {\n        var acc = b;\n        while (xs.ctor !== '[]') {\n            acc = A2(f, xs._0, acc);\n            xs = xs._1;\n        }\n        return acc;\n    }\n\n    function foldr(f, b, xs) {\n        var arr = toArray(xs);\n        var acc = b;\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function foldl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('foldl1') : foldl(f, xs._0, xs._1);\n    }\n\n    function foldr1(f, xs) {\n        if (xs.ctor === '[]') { throwError('foldr1'); }\n        var arr = toArray(xs);\n        var acc = arr.pop();\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function scanl(f, b, xs) {\n        var arr = toArray(xs);\n        arr.unshift(b);\n        var len = arr.length;\n        for (var i = 1; i < len; ++i) {\n            arr[i] = A2(f, arr[i], arr[i-1]);\n        }\n        return fromArray(arr);\n    }\n\n    function scanl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('scanl1') : scanl(f, xs._0, xs._1);\n    }\n\n    function filter(pred, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) { arr.push(xs._0); }\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function length(xs) {\n        var out = 0;\n        while (xs.ctor !== '[]') {\n            out += 1;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function member(x, xs) {\n        while (xs.ctor !== '[]') {\n            if (Utils.eq(x,xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function reverse(xs) {\n        return fromArray(toArray(xs).reverse());\n    }\n\n    function append(xs, ys) {\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    function all(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (!pred(xs._0)) return false;\n            xs = xs._1;\n        }\n        return true;\n    }\n\n    function any(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function map2(f, xs, ys) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]') {\n            arr.push(A2(f, xs._0, ys._0));\n            xs = xs._1;\n            ys = ys._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map3(f, xs, ys, zs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]') {\n            arr.push(A3(f, xs._0, ys._0, zs._0));\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map4(f, ws, xs, ys, zs) {\n        var arr = [];\n        while (   ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map5(f, vs, ws, xs, ys, zs) {\n        var arr = [];\n        while (   vs.ctor !== '[]'\n               && ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n            vs = vs._1;\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function sort(xs) {\n        return fromArray(toArray(xs).sort(Utils.cmp));\n    }\n\n    function sortBy(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            return Utils.cmp(f(a), f(b));\n        }));\n    }\n\n    function sortWith(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            var ord = f(a)(b).ctor;\n            return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n        }));\n    }\n\n    function nth(xs, n) {\n        return toArray(xs)[n];\n    }\n\n    function take(n, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && n > 0) {\n            arr.push(xs._0);\n            xs = xs._1;\n            --n;\n        }\n        return fromArray(arr);\n    }\n\n    function drop(n, xs) {\n        while (xs.ctor !== '[]' && n > 0) {\n            xs = xs._1;\n            --n;\n        }\n        return xs;\n    }\n\n    function repeat(n, x) {\n        var arr = [];\n        var pattern = [x];\n        while (n > 0) {\n            if (n & 1) arr = arr.concat(pattern);\n            n >>= 1, pattern = pattern.concat(pattern);\n        }\n        return fromArray(arr);\n    }\n\n\n    Elm.Native.List.values = {\n        Nil:Nil,\n        Cons:Cons,\n        cons:F2(Cons),\n        toArray:toArray,\n        fromArray:fromArray,\n        range:range,\n        append: F2(append),\n\n        head:head,\n        tail:tail,\n        last:last,\n\n        map:F2(map),\n        foldl:F3(foldl),\n        foldr:F3(foldr),\n\n        foldl1:F2(foldl1),\n        foldr1:F2(foldr1),\n        scanl:F3(scanl),\n        scanl1:F2(scanl1),\n        filter:F2(filter),\n        length:length,\n        member:F2(member),\n        reverse:reverse,\n\n        all:F2(all),\n        any:F2(any),\n        map2:F3(map2),\n        map3:F4(map3),\n        map4:F5(map4),\n        map5:F6(map5),\n        sort:sort,\n        sortBy:F2(sortBy),\n        sortWith:F2(sortWith),\n        nth:F2(nth),\n        take:F2(take),\n        drop:F2(drop),\n        repeat:F2(repeat)\n    };\n    return elm.Native.List.values = Elm.Native.List.values;\n\n};\n\nElm.Native.Ports = {};\nElm.Native.Ports.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Ports = localRuntime.Native.Ports || {};\n    if (localRuntime.Native.Ports.values) {\n        return localRuntime.Native.Ports.values;\n    }\n\n    var Signal;\n\n    function incomingSignal(converter) {\n        converter.isSignal = true;\n        return converter;\n    }\n\n    function outgoingSignal(converter) {\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        return function(signal) {\n            var subscribers = []\n            function subscribe(handler) {\n                subscribers.push(handler);\n            }\n            function unsubscribe(handler) {\n                subscribers.pop(subscribers.indexOf(handler));\n            }\n            A2( Signal.map, function(value) {\n                var val = converter(value);\n                var len = subscribers.length;\n                for (var i = 0; i < len; ++i) {\n                    subscribers[i](val);\n                }\n            }, signal);\n            return { subscribe:subscribe, unsubscribe:unsubscribe };\n        }\n    }\n\n    function portIn(name, converter) {\n        var jsValue = localRuntime.ports.incoming[name];\n        if (jsValue === undefined) {\n            throw new Error(\"Initialization Error: port '\" + name +\n                            \"' was not given an input!\");\n        }\n        localRuntime.ports.uses[name] += 1;\n        try {\n            var elmValue = converter(jsValue);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n\n        // just return a static value if it is not a signal\n        if (!converter.isSignal) {\n            return elmValue;\n        }\n\n        // create a signal if necessary\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        var signal = Signal.constant(elmValue);\n        function send(jsValue) {\n            try {\n                var elmValue = converter(jsValue);\n            } catch(e) {\n                throw new Error(\"Error sending to port '\" + name + \"': \\n\" + e.message);\n            }\n            setTimeout(function() {\n                localRuntime.notify(signal.id, elmValue);\n            }, 0);\n        }\n        localRuntime.ports.outgoing[name] = { send:send };\n        return signal;\n    }\n\n    function portOut(name, converter, value) {\n        try {\n            localRuntime.ports.outgoing[name] = converter(value);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n        return value;\n    }\n\n    return localRuntime.Native.Ports.values = {\n        incomingSignal: incomingSignal,\n        outgoingSignal: outgoingSignal,\n        portOut: portOut,\n        portIn: portIn\n    };\n};\n\n\n\nif (!Elm.fullscreen) {\n\n    (function() {\n        'use strict';\n\n        var Display = { FULLSCREEN: 0, COMPONENT: 1, NONE: 2 };\n\n        Elm.fullscreen = function(module, ports) {\n            var container = document.createElement('div');\n            document.body.appendChild(container);\n            return init(Display.FULLSCREEN, container, module, ports || {});\n        };\n\n        Elm.embed = function(module, container, ports) {\n            var tag = container.tagName;\n            if (tag !== 'DIV') {\n                throw new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n            } else if (container.hasChildNodes()) {\n                throw new Error('Elm.node must be given an empty DIV. No children allowed!');\n            }\n            return init(Display.COMPONENT, container, module, ports || {});\n        };\n\n        Elm.worker = function(module, ports) {\n            return init(Display.NONE, {}, module, ports || {});\n        };\n\n        function init(display, container, module, ports, moduleToReplace) {\n            // defining state needed for an instance of the Elm RTS\n            var inputs = [];\n\n            /* OFFSET\n             * Elm's time traveling debugger lets you interrupt the smooth flow of time\n             * by pausing and continuing program execution. To ensure the user sees a\n             * program that moves smoothly through the pause/continue time gap,\n             * we need to adjsut the value of Date.now().\n             */\n            var timer = function() {\n                var inducedDelay = 0;\n\n                var now = function() {\n                    return Date.now() - inducedDelay;\n                };\n\n                var addDelay = function(d) {\n                    inducedDelay += d;\n                    return inducedDelay;\n                };\n\n                return {\n                    now : now,\n                    addDelay : addDelay\n                }\n            }();\n\n            var updateInProgress = false;\n            function notify(id, v) {\n                if (updateInProgress) {\n                    throw new Error(\n                        'The notify function has been called synchronously!\\n' +\n                        'This can lead to frames being dropped.\\n' +\n                        'Definitely report this to <https: github.com=\"\" elm-lang=\"\" elm=\"\" issues=\"\">\\n');\n                }\n                updateInProgress = true;\n                var timestep = timer.now();\n                for (var i = inputs.length; i--; ) {\n                    inputs[i].recv(timestep, id, v);\n                }\n                updateInProgress = false;\n            }\n            function setTimeout(func, delay) {\n                window.setTimeout(func, delay);\n            }\n\n            var listeners = [];\n            function addListener(relevantInputs, domNode, eventName, func) {\n                domNode.addEventListener(eventName, func);\n                var listener = {\n                    relevantInputs: relevantInputs,\n                    domNode: domNode,\n                    eventName: eventName,\n                    func: func\n                };\n                listeners.push(listener);\n            }\n\n            var portUses = {}\n            for (var key in ports) {\n                portUses[key] = 0;\n            }\n            // create the actual RTS. Any impure modules will attach themselves to this\n            // object. This permits many Elm programs to be embedded per document.\n            var elm = {\n                notify: notify,\n                setTimeout: setTimeout,\n                node: container,\n                addListener: addListener,\n                inputs: inputs,\n                timer: timer,\n                ports: { incoming:ports, outgoing:{}, uses:portUses },\n\n                isFullscreen: function() { return display === Display.FULLSCREEN; },\n                isEmbed: function() { return display === Display.COMPONENT; },\n                isWorker: function() { return display === Display.NONE; }\n            };\n\n            function swap(newModule) {\n                removeListeners(listeners);\n                var div = document.createElement('div');\n                var newElm = init(display, div, newModule, ports, elm);\n                inputs = [];\n                // elm.swap = newElm.swap;\n                return newElm;\n            }\n\n            function dispose() {\n                removeListeners(listeners);\n                inputs = [];\n            }\n\n            var Module = {};\n            try {\n                Module = module.make(elm);\n                checkPorts(elm);\n            } catch(e) {\n                var code = document.createElement('code');\n\n                var lines = e.message.split('\\n');\n                code.appendChild(document.createTextNode(lines[0]));\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createElement('br'));\n                for (var i = 1; i < lines.length; ++i) {\n                    code.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i]));\n                    code.appendChild(document.createElement('br'));\n                }\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createTextNode(\"Open the developer console for more details.\"));\n\n                container.appendChild(code);\n                throw e;\n            }\n            inputs = filterDeadInputs(inputs);\n            filterListeners(inputs, listeners);\n            addReceivers(elm.ports.outgoing);\n            if (display !== Display.NONE) {\n                var graphicsNode = initGraphics(elm, Module);\n            }\n            if (typeof moduleToReplace !== 'undefined') {\n                hotSwap(moduleToReplace, elm);\n\n                // rerender scene if graphics are enabled.\n                if (typeof graphicsNode !== 'undefined') {\n                    graphicsNode.recv(0, true, 0);\n                }\n            }\n\n            return {\n                swap:swap,\n                ports:elm.ports.outgoing,\n                dispose:dispose\n            };\n        };\n\n        function checkPorts(elm) {\n            var portUses = elm.ports.uses;\n            for (var key in portUses) {\n                var uses = portUses[key]\n                if (uses === 0) {\n                    throw new Error(\n                        \"Initialization Error: provided port '\" + key +\n                        \"' to a module that does not take it as in input.\\n\" +\n                        \"Remove '\" + key + \"' from the module initialization code.\");\n                } else if (uses > 1) {\n                    throw new Error(\n                        \"Initialization Error: port '\" + key +\n                        \"' has been declared multiple times in the Elm code.\\n\" +\n                        \"Remove declarations until there is exactly one.\");\n                }\n            }\n        }\n\n\n        //// FILTER SIGNALS ////\n\n        // TODO: move this code into the signal module and create a function\n        // Signal.initializeGraph that actually instantiates everything.\n\n        function filterListeners(inputs, listeners) {\n            loop:\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                for (var j = inputs.length; j--; ) {\n                    if (listener.relevantInputs.indexOf(inputs[j].id) >= 0) {\n                        continue loop;\n                    }\n                }\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        function removeListeners(listeners) {\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        // add receivers for built-in ports if they are defined\n        function addReceivers(ports) {\n            if ('log' in ports) {\n                ports.log.subscribe(function(v) { console.log(v) });\n            }\n            if ('stdout' in ports) {\n                var process = process || {};\n                var handler = process.stdout\n                    ? function(v) { process.stdout.write(v); }\n                    : function(v) { console.log(v); };\n                ports.stdout.subscribe(handler);\n            }\n            if ('stderr' in ports) {\n                var process = process || {};\n                var handler = process.stderr\n                    ? function(v) { process.stderr.write(v); }\n                    : function(v) { console.log('Error:' + v); };\n                ports.stderr.subscribe(handler);\n            }\n            if ('title' in ports) {\n                if (typeof ports.title === 'string') {\n                    document.title = ports.title;\n                } else {\n                    ports.title.subscribe(function(v) { document.title = v; });\n                }\n            }\n            if ('redirect' in ports) {\n                ports.redirect.subscribe(function(v) {\n                    if (v.length > 0) window.location = v;\n                });\n            }\n            if ('favicon' in ports) {\n                if (typeof ports.favicon === 'string') {\n                    changeFavicon(ports.favicon);\n                } else {\n                    ports.favicon.subscribe(changeFavicon);\n                }\n            }\n            function changeFavicon(src) {\n                var link = document.createElement('link');\n                var oldLink = document.getElementById('elm-favicon');\n                link.id = 'elm-favicon';\n                link.rel = 'shortcut icon';\n                link.href = src;\n                if (oldLink) {\n                    document.head.removeChild(oldLink);\n                }\n                document.head.appendChild(link);\n            }\n        }\n\n\n        function filterDeadInputs(inputs) {\n            var temp = [];\n            for (var i = inputs.length; i--; ) {\n                if (isAlive(inputs[i])) temp.push(inputs[i]);\n            }\n            return temp;\n        }\n\n\n        function isAlive(input) {\n            if (!('defaultNumberOfKids' in input)) return true;\n            var len = input.kids.length;\n            if (len === 0) return false;\n            if (len > input.defaultNumberOfKids) return true;\n            var alive = false;\n            for (var i = len; i--; ) {\n                alive = alive || isAlive(input.kids[i]);\n            }\n            return alive;\n        }\n\n\n        ////  RENDERING  ////\n\n        function initGraphics(elm, Module) {\n            if (!('main' in Module)) {\n                throw new Error(\"'main' is missing! What do I display?!\");\n            }\n\n            var signalGraph = Module.main;\n\n            // make sure the signal graph is actually a signal & extract the visual model\n            var Signal = Elm.Signal.make(elm);\n            if (!('recv' in signalGraph)) {\n                signalGraph = Signal.constant(signalGraph);\n            }\n            var initialScene = signalGraph.value;\n\n            // Add the initialScene to the DOM\n            var Element = Elm.Native.Graphics.Element.make(elm);\n            elm.node.appendChild(Element.render(initialScene));\n\n            var _requestAnimationFrame =\n                typeof requestAnimationFrame !== 'undefined'\n                    ? requestAnimationFrame\n                    : function(cb) { setTimeout(cb, 1000/60); }\n                    ;\n\n            // domUpdate is called whenever the main Signal changes.\n            //\n            // domUpdate and drawCallback implement a small state machine in order\n            // to schedule only 1 draw per animation frame. This enforces that\n            // once draw has been called, it will not be called again until the\n            // next frame.\n            //\n            // drawCallback is scheduled whenever\n            // 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n            // 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n            //\n            // Invariants:\n            // 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n            // 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n            //    scheduled drawCallback.\n            var NO_REQUEST = 0;\n            var PENDING_REQUEST = 1;\n            var EXTRA_REQUEST = 2;\n            var state = NO_REQUEST;\n            var savedScene = initialScene;\n            var scheduledScene = initialScene;\n\n            function domUpdate(newScene) {\n                scheduledScene = newScene;\n\n                switch (state) {\n                    case NO_REQUEST:\n                        _requestAnimationFrame(drawCallback);\n                        state = PENDING_REQUEST;\n                        return;\n                    case PENDING_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                    case EXTRA_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                }\n            }\n\n            function drawCallback() {\n                switch (state) {\n                    case NO_REQUEST:\n                        // This state should not be possible. How can there be no\n                        // request, yet somehow we are actively fulfilling a\n                        // request?\n                        throw new Error(\n                            \"Unexpected draw callback.\\n\" +\n                            \"Please report this to <https: github.com=\"\" elm-lang=\"\" core=\"\" issues=\"\">.\"\n                        );\n\n                    case PENDING_REQUEST:\n                        // At this point, we do not *know* that another frame is\n                        // needed, but we make an extra request to rAF just in\n                        // case. It's possible to drop a frame if rAF is called\n                        // too late, so we just do it preemptively.\n                        _requestAnimationFrame(drawCallback);\n                        state = EXTRA_REQUEST;\n\n                        // There's also stuff we definitely need to draw.\n                        draw();\n                        return;\n\n                    case EXTRA_REQUEST:\n                        // Turns out the extra request was not needed, so we will\n                        // stop calling rAF. No reason to call it all the time if\n                        // no one needs it.\n                        state = NO_REQUEST;\n                        return;\n                }\n            }\n\n            function draw() {\n                Element.updateAndReplace(elm.node.firstChild, savedScene, scheduledScene);\n                if (elm.Native.Window) {\n                    elm.Native.Window.values.resizeIfNeeded();\n                }\n                savedScene = scheduledScene;\n            }\n\n            var renderer = A2(Signal.map, domUpdate, signalGraph);\n\n            // must check for resize after 'renderer' is created so\n            // that changes show up.\n            if (elm.Native.Window) {\n                elm.Native.Window.values.resizeIfNeeded();\n            }\n\n            return renderer;\n        }\n\n        //// HOT SWAPPING ////\n\n        // Returns boolean indicating if the swap was successful.\n        // Requires that the two signal graphs have exactly the same\n        // structure.\n        function hotSwap(from, to) {\n            function similar(nodeOld,nodeNew) {\n                var idOkay = nodeOld.id === nodeNew.id;\n                var lengthOkay = nodeOld.kids.length === nodeNew.kids.length;\n                return idOkay && lengthOkay;\n            }\n            function swap(nodeOld,nodeNew) {\n                nodeNew.value = nodeOld.value;\n                return true;\n            }\n            var canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n            if (canSwap) {\n                depthFirstTraversals(swap, from.inputs, to.inputs);\n            }\n            from.node.parentNode.replaceChild(to.node, from.node);\n\n            return canSwap;\n        }\n\n        // Returns false if the node operation f ever fails.\n        function depthFirstTraversals(f, queueOld, queueNew) {\n            if (queueOld.length !== queueNew.length) return false;\n            queueOld = queueOld.slice(0);\n            queueNew = queueNew.slice(0);\n\n            var seen = [];\n            while (queueOld.length > 0 && queueNew.length > 0) {\n                var nodeOld = queueOld.pop();\n                var nodeNew = queueNew.pop();\n                if (seen.indexOf(nodeOld.id) < 0) {\n                    if (!f(nodeOld, nodeNew)) return false;\n                    queueOld = queueOld.concat(nodeOld.kids);\n                    queueNew = queueNew.concat(nodeNew.kids);\n                    seen.push(nodeOld.id);\n                }\n            }\n            return true;\n        }\n    }());\n\n    function F2(fun) {\n        function wrapper(a) { return function(b) { return fun(a,b) } }\n        wrapper.arity = 2;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F3(fun) {\n        function wrapper(a) {\n            return function(b) { return function(c) { return fun(a,b,c) }}\n        }\n        wrapper.arity = 3;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F4(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return fun(a,b,c,d) }}}\n        }\n        wrapper.arity = 4;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F5(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return fun(a,b,c,d,e) }}}}\n        }\n        wrapper.arity = 5;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F6(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return fun(a,b,c,d,e,f) }}}}}\n        }\n        wrapper.arity = 6;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F7(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return fun(a,b,c,d,e,f,g) }}}}}}\n        }\n        wrapper.arity = 7;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F8(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) {\n            return fun(a,b,c,d,e,f,g,h)}}}}}}}\n        }\n        wrapper.arity = 8;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F9(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) { return function(i) {\n            return fun(a,b,c,d,e,f,g,h,i) }}}}}}}}\n        }\n        wrapper.arity = 9;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function A2(fun,a,b) {\n        return fun.arity === 2\n            ? fun.func(a,b)\n            : fun(a)(b);\n    }\n    function A3(fun,a,b,c) {\n        return fun.arity === 3\n            ? fun.func(a,b,c)\n            : fun(a)(b)(c);\n    }\n    function A4(fun,a,b,c,d) {\n        return fun.arity === 4\n            ? fun.func(a,b,c,d)\n            : fun(a)(b)(c)(d);\n    }\n    function A5(fun,a,b,c,d,e) {\n        return fun.arity === 5\n            ? fun.func(a,b,c,d,e)\n            : fun(a)(b)(c)(d)(e);\n    }\n    function A6(fun,a,b,c,d,e,f) {\n        return fun.arity === 6\n            ? fun.func(a,b,c,d,e,f)\n            : fun(a)(b)(c)(d)(e)(f);\n    }\n    function A7(fun,a,b,c,d,e,f,g) {\n        return fun.arity === 7\n            ? fun.func(a,b,c,d,e,f,g)\n            : fun(a)(b)(c)(d)(e)(f)(g);\n    }\n    function A8(fun,a,b,c,d,e,f,g,h) {\n        return fun.arity === 8\n            ? fun.func(a,b,c,d,e,f,g,h)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h);\n    }\n    function A9(fun,a,b,c,d,e,f,g,h,i) {\n        return fun.arity === 9\n            ? fun.func(a,b,c,d,e,f,g,h,i)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n    }\n}\nElm.Native.Show = {};\nElm.Native.Show.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Show = elm.Native.Show || {};\n    if (elm.Native.Show.values) return elm.Native.Show.values;\n\n    var _Array;\n    var Dict;\n    var List;\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var toString = function(v) {\n        var type = typeof v;\n        if (type === \"function\") {\n            var name = v.func ? v.func.name : v.name;\n            return '<function' +=\"\" (name=\"==\" ''=\"\" ?=\"\" :=\"\" ':=\"\" ')=\"\" name=\"\" '=\"\">';\n        }\n        else if (type === \"boolean\") {\n            return v ? \"True\" : \"False\";\n        }\n        else if (type === \"number\") {\n            return v + \"\";\n        }\n        else if ((v instanceof String) && v.isChar) {\n            return \"'\" + addSlashes(v) + \"'\";\n        }\n        else if (type === \"string\") {\n            return '\"' + addSlashes(v) + '\"';\n        }\n        else if (type === \"object\" && '_' in v && probablyPublic(v)) {\n            var output = [];\n            for (var k in v._) {\n                for (var i = v._[k].length; i--; ) {\n                    output.push(k + \" = \" + toString(v._[k][i]));\n                }\n            }\n            for (var k in v) {\n                if (k === '_') continue;\n                output.push(k + \" = \" + toString(v[k]));\n            }\n            if (output.length === 0) {\n                return \"{}\";\n            }\n            return \"{ \" + output.join(\", \") + \" }\";\n        }\n        else if (type === \"object\" && 'ctor' in v) {\n            if (v.ctor.substring(0,6) === \"_Tuple\") {\n                var output = [];\n                for (var k in v) {\n                    if (k === 'ctor') continue;\n                    output.push(toString(v[k]));\n                }\n                return \"(\" + output.join(\",\") + \")\";\n            }\n            else if (v.ctor === \"_Array\") {\n                if (!_Array) {\n                    _Array = Elm.Array.make(elm);\n                }\n                var list = _Array.toList(v);\n                return \"Array.fromList \" + toString(list);\n            }\n            else if (v.ctor === \"::\") {\n                var output = '[' + toString(v._0);\n                v = v._1;\n                while (v.ctor === \"::\") {\n                    output += \",\" + toString(v._0);\n                    v = v._1;\n                }\n                return output + ']';\n            }\n            else if (v.ctor === \"[]\") {\n                return \"[]\";\n            }\n            else if (v.ctor === \"RBNode\" || v.ctor === \"RBEmpty\") {\n                if (!Dict) {\n                    Dict = Elm.Dict.make(elm);\n                }\n                if (!List) {\n                    List = Elm.List.make(elm);\n                }\n                var list = Dict.toList(v);\n                var name = \"Dict\";\n                if (list.ctor === \"::\" && list._0._1.ctor === \"_Tuple0\") {\n                    name = \"Set\";\n                    list = A2(List.map, function(x){return x._0}, list);\n                }\n                return name + \".fromList \" + toString(list);\n            }\n            else {\n                var output = \"\";\n                for (var i in v) {\n                    if (i === 'ctor') continue;\n                    var str = toString(v[i]);\n                    var parenless = str[0] === '{' || str[0] === '<' ||=\"\" str.indexof('=\"\" ')=\"\" <=\"\" 0;=\"\" output=\"\" +=\" \" (parenless=\"\" ?=\"\" str=\"\" :=\"\" '('=\"\" ')');=\"\" }=\"\" return=\"\" v.ctor=\"\" output;=\"\" if=\"\" (type=\"==\" 'object'=\"\" &&=\"\" 'recv'=\"\" in=\"\" v)=\"\" {=\"\" '<signal=\"\">';\n        }\n        return \"<internal structure=\"\">\";\n    };\n\n    function addSlashes(str) {\n        return str.replace(/\\\\/g, '\\\\\\\\')\n                  .replace(/\\n/g, '\\\\n')\n                  .replace(/\\t/g, '\\\\t')\n                  .replace(/\\r/g, '\\\\r')\n                  .replace(/\\v/g, '\\\\v')\n                  .replace(/\\0/g, '\\\\0')\n                  .replace(/\\'/g, \"\\\\'\")\n                  .replace(/\\\"/g, '\\\\\"');\n    }\n\n    function probablyPublic(v) {\n        var keys = Object.keys(v);\n        var len = keys.length;\n        if (len === 3\n            && 'props' in v\n            && 'element' in v)\n        {\n            return false;\n        }\n        else if (len === 5\n            && 'horizontal' in v\n            && 'vertical' in v\n            && 'x' in v\n            && 'y' in v)\n        {\n            return false;\n        }\n        else if (len === 7\n            && 'theta' in v\n            && 'scale' in v\n            && 'x' in v\n            && 'y' in v\n            && 'alpha' in v\n            && 'form' in v)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    return elm.Native.Show.values = {\n        toString: toString\n    };\n};\n\n\nElm.Native.Signal = {};\nElm.Native.Signal.make = function(localRuntime) {\n\n  localRuntime.Native = localRuntime.Native || {};\n  localRuntime.Native.Signal = localRuntime.Native.Signal || {};\n  if (localRuntime.Native.Signal.values) {\n      return localRuntime.Native.Signal.values;\n  }\n\n  var Utils = Elm.Native.Utils.make(localRuntime);\n\n  function broadcastToKids(node, timestep, changed) {\n    var kids = node.kids;\n    for (var i = kids.length; i--; ) {\n      kids[i].recv(timestep, changed, node.id);\n    }\n  }\n\n  function Input(base) {\n    this.id = Utils.guid();\n    this.value = base;\n    this.kids = [];\n    this.defaultNumberOfKids = 0;\n    this.recv = function(timestep, eid, v) {\n      var changed = eid === this.id;\n      if (changed) {\n        this.value = v;\n      }\n      broadcastToKids(this, timestep, changed);\n      return changed;\n    };\n    localRuntime.inputs.push(this);\n  }\n\n  function LiftN(update, args) {\n    this.id = Utils.guid();\n    this.value = update();\n    this.kids = [];\n\n    var n = args.length;\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      ++count;\n      if (changed) { isChanged = true; }\n      if (count == n) {\n        if (isChanged) { this.value = update(); }\n        broadcastToKids(this, timestep, isChanged);\n        isChanged = false;\n        count = 0;\n      }\n    };\n    for (var i = n; i--; ) { args[i].kids.push(this); }\n  }\n\n  function map(func, a) {\n    function update() { return func(a.value); }\n    return new LiftN(update, [a]);\n  }\n  function map2(func, a, b) {\n    function update() { return A2( func, a.value, b.value ); }\n    return new LiftN(update, [a,b]);\n  }\n  function map3(func, a, b, c) {\n    function update() { return A3( func, a.value, b.value, c.value ); }\n    return new LiftN(update, [a,b,c]);\n  }\n  function map4(func, a, b, c, d) {\n    function update() { return A4( func, a.value, b.value, c.value, d.value ); }\n    return new LiftN(update, [a,b,c,d]);\n  }\n  function map5(func, a, b, c, d, e) {\n    function update() { return A5( func, a.value, b.value, c.value, d.value, e.value ); }\n    return new LiftN(update, [a,b,c,d,e]);\n  }\n\n  function Foldp(step, state, input) {\n    this.id = Utils.guid();\n    this.value = state;\n    this.kids = [];\n\n    this.recv = function(timestep, changed, parentID) {\n      if (changed) {\n          this.value = A2( step, input.value, this.value );\n      }\n      broadcastToKids(this, timestep, changed);\n    };\n    input.kids.push(this);\n  }\n\n  function foldp(step, state, input) {\n      return new Foldp(step, state, input);\n  }\n\n  function DropIf(pred,base,input) {\n    this.id = Utils.guid();\n    this.value = pred(input.value) ? base : input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !pred(input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function DropRepeats(input) {\n    this.id = Utils.guid();\n    this.value = input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !Utils.eq(this.value,input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function timestamp(a) {\n    function update() { return Utils.Tuple2(localRuntime.timer.now(), a.value); }\n    return new LiftN(update, [a]);\n  }\n\n  function SampleOn(s1,s2) {\n    this.id = Utils.guid();\n    this.value = s2.value;\n    this.kids = [];\n\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      if (parentID === s1.id) isChanged = changed;\n      ++count;\n      if (count == 2) {\n        if (isChanged) { this.value = s2.value; }\n        broadcastToKids(this, timestep, isChanged);\n        count = 0;\n        isChanged = false;\n      }\n    };\n    s1.kids.push(this);\n    s2.kids.push(this);\n  }\n\n  function sampleOn(s1,s2) { return new SampleOn(s1,s2); }\n\n  function delay(t,s) {\n      var delayed = new Input(s.value);\n      var firstEvent = true;\n      function update(v) {\n        if (firstEvent) {\n            firstEvent = false; return;\n        }\n        setTimeout(function() {\n            localRuntime.notify(delayed.id, v);\n        }, t);\n      }\n      function first(a,b) { return a; }\n      return new SampleOn(delayed, map2(F2(first), delayed, map(update,s)));\n  }\n\n  function Merge(s1,s2) {\n      this.id = Utils.guid();\n      this.value = s1.value;\n      this.kids = [];\n\n      var next = null;\n      var count = 0;\n      var isChanged = false;\n\n      this.recv = function(timestep, changed, parentID) {\n        ++count;\n        if (changed) {\n            isChanged = true;\n            if (parentID == s2.id && next === null) { next = s2.value; }\n            if (parentID == s1.id) { next = s1.value; }\n        }\n\n        if (count == 2) {\n            if (isChanged) { this.value = next; next = null; }\n            broadcastToKids(this, timestep, isChanged);\n            isChanged = false;\n            count = 0;\n        }\n      };\n      s1.kids.push(this);\n      s2.kids.push(this);\n  }\n\n  function merge(s1,s2) {\n      return new Merge(s1,s2);\n  }\n\n\n    // SIGNAL INPUTS\n\n    function input(initialValue) {\n        return new Input(initialValue);\n    }\n\n    function send(input, value) {\n        return function() {\n            localRuntime.notify(input.id, value);\n        };\n    }\n\n    function subscribe(input) {\n        return input;\n    }\n\n\n  return localRuntime.Native.Signal.values = {\n    constant : function(v) { return new Input(v); },\n    map  : F2(map ),\n    map2 : F3(map2),\n    map3 : F4(map3),\n    map4 : F5(map4),\n    map5 : F6(map5),\n    foldp : F3(foldp),\n    delay : F2(delay),\n    merge : F2(merge),\n    keepIf : F3(function(pred,base,sig) {\n      return new DropIf(function(x) {return !pred(x);},base,sig); }),\n    dropIf : F3(function(pred,base,sig) { return new DropIf(pred,base,sig); }),\n    dropRepeats : function(s) { return new DropRepeats(s);},\n    sampleOn : F2(sampleOn),\n    timestamp : timestamp,\n    input: input,\n    send: F2(send),\n    subscribe: subscribe\n  };\n};\n\nElm.Native.String = {};\nElm.Native.String.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.String = elm.Native.String || {};\n    if (elm.Native.String.values) return elm.Native.String.values;\n    if ('values' in Elm.Native.String) {\n        return elm.Native.String.values = Elm.Native.String.values;\n    }\n\n    var Char = Elm.Char.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Maybe = Elm.Maybe.make(elm);\n    var Result = Elm.Result.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isEmpty(str) {\n        return str.length === 0;\n    }\n    function cons(chr,str) {\n        return chr + str;\n    }\n    function uncons(str) {\n        var hd;\n        return (hd = str[0])\n            ? Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)))\n            : Maybe.Nothing;\n    }\n    function append(a,b) {\n        return a + b;\n    }\n    function concat(strs) {\n        return List.toArray(strs).join('');\n    }\n    function length(str) {\n        return str.length;\n    }\n    function map(f,str) {\n        var out = str.split('');\n        for (var i = out.length; i--; ) {\n            out[i] = f(Utils.chr(out[i]));\n        }\n        return out.join('');\n    }\n    function filter(pred,str) {\n        return str.split('').map(Utils.chr).filter(pred).join('');\n    }\n    function reverse(str) {\n        return str.split('').reverse().join('');\n    }\n    function foldl(f,b,str) {\n        var len = str.length;\n        for (var i = 0; i < len; ++i) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n    function foldr(f,b,str) {\n        for (var i = str.length; i--; ) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n\n    function split(sep, str) {\n        return List.fromArray(str.split(sep));\n    }\n    function join(sep, strs) {\n        return List.toArray(strs).join(sep);\n    }\n    function repeat(n, str) {\n        var result = '';\n        while (n > 0) {\n            if (n & 1) result += str;\n            n >>= 1, str += str;\n        }\n        return result;\n    }\n\n    function slice(start, end, str) {\n        return str.slice(start,end);\n    }\n    function left(n, str) {\n        return n < 1 ? \"\" : str.slice(0,n);\n    }\n    function right(n, str) {\n        return n < 1 ? \"\" : str.slice(-n);\n    }\n    function dropLeft(n, str) {\n        return n < 1 ? str : str.slice(n);\n    }\n    function dropRight(n, str) {\n        return n < 1 ? str : str.slice(0,-n);\n    }\n\n    function pad(n,chr,str) {\n        var half = (n - str.length) / 2;\n        return repeat(Math.ceil(half),chr) + str + repeat(half|0,chr);\n    }\n    function padRight(n,chr,str) {\n        return str + repeat(n - str.length, chr);\n    }\n    function padLeft(n,chr,str) {\n        return repeat(n - str.length, chr) + str;\n    }\n\n    function trim(str) {\n        return str.trim();\n    }\n    function trimLeft(str) {\n        return str.trimLeft();\n    }\n    function trimRight(str) {\n        return str.trimRight();\n    }\n\n    function words(str) {\n        return List.fromArray(str.trim().split(/\\s+/g));\n    }\n    function lines(str) {\n        return List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n    }\n\n    function toUpper(str) {\n        return str.toUpperCase();\n    }\n    function toLower(str) {\n        return str.toLowerCase();\n    }\n\n    function any(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (pred(Utils.chr(str[i]))) return true;\n        }\n        return false;\n    }\n    function all(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (!pred(Utils.chr(str[i]))) return false;\n        }\n        return true;\n    }\n\n    function contains(sub, str) {\n        return str.indexOf(sub) > -1;\n    }\n    function startsWith(sub, str) {\n        return str.indexOf(sub) === 0;\n    }\n    function endsWith(sub, str) {\n        return str.length >= sub.length &&\n               str.lastIndexOf(sub) === str.length - sub.length;\n    }\n    function indexes(sub, str) {\n        var subLen = sub.length;\n        var i = 0;\n        var is = [];\n        while ((i = str.indexOf(sub, i)) > -1) {\n            is.push(i);\n            i = i + subLen;\n        }\n        return List.fromArray(is);\n    }\n\n    function toInt(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n            start = 1;\n        }\n        for (var i = start; i < len; ++i) {\n            if (!Char.isDigit(s[i])) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n        }\n        return Result.Ok(parseInt(s, 10));\n    }\n\n    function toFloat(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n            }\n            start = 1;\n        }\n        var dotCount = 0;\n        for (var i = start; i < len; ++i) {\n            if (Char.isDigit(s[i])) {\n                continue;\n            }\n            if (s[i] === '.') {\n                dotCount += 1;\n                if (dotCount <= 1)=\"\" {=\"\" continue;=\"\" }=\"\" return=\"\" result.err(\"could=\"\" not=\"\" convert=\"\" string=\"\" '\"=\"\" +=\"\" s=\"\" \"'=\"\" to=\"\" a=\"\" float\"=\"\" );=\"\" result.ok(parsefloat(s));=\"\" function=\"\" tolist(str)=\"\" list.fromarray(str.split('').map(utils.chr));=\"\" fromlist(chars)=\"\" list.toarray(chars).join('');=\"\" elm.native.string.values=\"{\" isempty:=\"\" isempty,=\"\" cons:=\"\" f2(cons),=\"\" uncons:=\"\" uncons,=\"\" append:=\"\" f2(append),=\"\" concat:=\"\" concat,=\"\" length:=\"\" length,=\"\" map:=\"\" f2(map),=\"\" filter:=\"\" f2(filter),=\"\" reverse:=\"\" reverse,=\"\" foldl:=\"\" f3(foldl),=\"\" foldr:=\"\" f3(foldr),=\"\" split:=\"\" f2(split),=\"\" join:=\"\" f2(join),=\"\" repeat:=\"\" f2(repeat),=\"\" slice:=\"\" f3(slice),=\"\" left:=\"\" f2(left),=\"\" right:=\"\" f2(right),=\"\" dropleft:=\"\" f2(dropleft),=\"\" dropright:=\"\" f2(dropright),=\"\" pad:=\"\" f3(pad),=\"\" padleft:=\"\" f3(padleft),=\"\" padright:=\"\" f3(padright),=\"\" trim:=\"\" trim,=\"\" trimleft:=\"\" trimleft,=\"\" trimright:=\"\" trimright,=\"\" words:=\"\" words,=\"\" lines:=\"\" lines,=\"\" toupper:=\"\" toupper,=\"\" tolower:=\"\" tolower,=\"\" any:=\"\" f2(any),=\"\" all:=\"\" f2(all),=\"\" contains:=\"\" f2(contains),=\"\" startswith:=\"\" f2(startswith),=\"\" endswith:=\"\" f2(endswith),=\"\" indexes:=\"\" f2(indexes),=\"\" toint:=\"\" toint,=\"\" tofloat:=\"\" tofloat,=\"\" tolist:=\"\" tolist,=\"\" fromlist:=\"\" fromlist=\"\" };=\"\" elm.native=\"Elm.Native\" ||=\"\" {};=\"\" elm.native.utils=\"{};\" elm.native.utils.make=\"function(localRuntime)\" localruntime.native=\"localRuntime.Native\" localruntime.native.utils=\"localRuntime.Native.Utils\" if=\"\" (localruntime.native.utils.values)=\"\" localruntime.native.utils.values;=\"\" eq(l,r)=\"\" var=\"\" stack=\"[{'x':\" l,=\"\" 'y':=\"\" r}]=\"\" while=\"\" (stack.length=\"\"> 0) {\n            var front = stack.pop();\n            var x = front.x;\n            var y = front.y;\n            if (x === y) continue;\n            if (typeof x === \"object\") {\n                var c = 0;\n                for (var i in x) {\n                    ++c;\n                    if (i in y) {\n                        if (i !== 'ctor') {\n                            stack.push({ 'x': x[i], 'y': y[i] });\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n                if ('ctor' in x) {\n                    stack.push({'x': x.ctor, 'y': y.ctor});\n                }\n                if (c !== Object.keys(y).length) {\n                    return false;\n                };\n            } else if (typeof x === 'function') {\n                throw new Error('Equality error: general function equality is ' +\n                                'undecidable, and therefore, unsupported');\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // code in Generate/JavaScript.hs depends on the particular\n    // integer values assigned to LT, EQ, and GT\n    var LT = -1, EQ = 0, GT = 1, ord = ['LT','EQ','GT'];\n    function compare(x,y) { return { ctor: ord[cmp(x,y)+1] } }\n    function cmp(x,y) {\n        var ord;\n        if (typeof x !== 'object'){\n            return x === y ? EQ : x < y ? LT : GT;\n        }\n        else if (x.isChar){\n            var a = x.toString();\n            var b = y.toString();\n            return a === b ? EQ : a < b ? LT : GT;\n        }\n        else if (x.ctor === \"::\" || x.ctor === \"[]\") {\n            while (true) {\n                if (x.ctor === \"[]\" && y.ctor === \"[]\") return EQ;\n                if (x.ctor !== y.ctor) return x.ctor === '[]' ? LT : GT;\n                ord = cmp(x._0, y._0);\n                if (ord !== EQ) return ord;\n                x = x._1;\n                y = y._1;\n            }\n        }\n        else if (x.ctor.slice(0,6) === '_Tuple') {\n            var n = x.ctor.slice(6) - 0;\n            var err = 'cannot compare tuples with more than 6 elements.';\n            if (n === 0) return EQ;\n            if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n            if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n            if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n            if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n            if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n            if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n            if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n            return EQ;\n        }\n        else {\n            throw new Error('Comparison error: comparison is only defined on ints, ' +\n                            'floats, times, chars, strings, lists of comparable values, ' +\n                            'and tuples of comparable values.');\n        }\n    }\n\n\n    var Tuple0 = { ctor: \"_Tuple0\" };\n    function Tuple2(x,y) {\n        return {\n            ctor: \"_Tuple2\",\n            _0: x,\n            _1: y\n        };\n    }\n\n    function chr(c) {\n        var x = new String(c);\n        x.isChar = true;\n        return x;\n    }\n\n    function txt(str) {\n        var t = new String(str);\n        t.text = true;\n        return t;\n    }\n\n    function makeText(text) {\n        var style = '';\n        var href = '';\n        while (true) {\n            if (text.style) {\n                style += text.style;\n                text = text.text;\n                continue;\n            }\n            if (text.href) {\n                href = text.href;\n                text = text.text;\n                continue;\n            }\n            if (href) {\n                text = '<a href=\"' + href + '\">' + text + '</a>';\n            }\n            if (style) {\n                text = '<span style=\"' + style + '\">' + text + '</span>';\n            }\n            return text;\n        }\n    }\n\n    var count = 0;\n    function guid(_) {\n        return count++\n    }\n\n    function copy(oldRecord) {\n        var newRecord = {};\n        for (var key in oldRecord) {\n            var value = key === '_'\n                ? copy(oldRecord._)\n                : oldRecord[key]\n                ;\n            newRecord[key] = value;\n        }\n        return newRecord;\n    }\n\n    function remove(key, oldRecord) {\n        var record = copy(oldRecord);\n        if (key in record._) {\n            record[key] = record._[key][0];\n            record._[key] = record._[key].slice(1);\n            if (record._[key].length === 0) {\n                delete record._[key];\n            }\n        } else {\n            delete record[key];\n        }\n        return record;\n    }\n\n    function replace(keyValuePairs, oldRecord) {\n        var record = copy(oldRecord);\n        for (var i = keyValuePairs.length; i--; ) {\n            var pair = keyValuePairs[i];\n            record[pair[0]] = pair[1];\n        }\n        return record;\n    }\n\n    function insert(key, value, oldRecord) {\n        var newRecord = copy(oldRecord);\n        if (key in newRecord) {\n            var values = newRecord._[key];\n            var copiedValues = values ? values.slice(0) : [];\n            newRecord._[key] = [newRecord[key]].concat(copiedValues);\n        }\n        newRecord[key] = value;\n        return newRecord;\n    }\n\n    function getXY(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n\n        if (localRuntime.isEmbed()) {\n            var rect = localRuntime.node.getBoundingClientRect();\n            var relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n            var rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n            // TODO: figure out if there is a way to avoid rounding here\n            posx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n            posy = posy - Math.round(rely) - localRuntime.node.clientTop;\n        }\n        return Tuple2(posx, posy);\n    }\n\n\n    //// LIST STUFF ////\n\n    var Nil = { ctor:'[]' };\n\n    function Cons(hd,tl) {\n        return {\n            ctor: \"::\",\n            _0: hd,\n            _1: tl\n        };\n    }\n\n    function append(xs,ys) {\n        // append Text\n        if (xs.text || ys.text) {\n            return txt(makeText(xs) + makeText(ys));\n        }\n\n        // append Strings\n        if (typeof xs === \"string\") {\n            return xs + ys;\n        }\n\n        // append Lists\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    //// RUNTIME ERRORS ////\n\n    function indent(lines) {\n        return '\\n' + lines.join('\\n');\n    }\n\n    function badCase(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in case-expression.',\n            'Make sure your patterns cover every case!'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n    function badIf(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in multi-way-if expression.',\n            'It is best to use \\'otherwise\\' as the last branch of multi-way-if.'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n\n    function badPort(expected, received) {\n        var msg = indent([\n            'Expecting ' + expected + ' but was given ',\n            JSON.stringify(received)\n        ]);\n        throw new Error('Runtime error when sending values through a port.' + msg);\n    }\n\n\n    return localRuntime.Native.Utils.values = {\n        eq:eq,\n        cmp:cmp,\n        compare:F2(compare),\n        Tuple0:Tuple0,\n        Tuple2:Tuple2,\n        chr:chr,\n        txt:txt,\n        makeText:makeText,\n        copy: copy,\n        remove: remove,\n        replace: replace,\n        insert: insert,\n        guid: guid,\n        getXY: getXY,\n\n        Nil: Nil,\n        Cons: Cons,\n        append: F2(append),\n\n        badCase: badCase,\n        badIf: badIf,\n        badPort: badPort\n    };\n};\n\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){=\"\" module.exports=\"createHash\" function=\"\" createhash(elem)=\"\" {=\"\" var=\"\" attributes=\"elem.attributes\" hash=\"{}\" if=\"\" (attributes=\"==\" null=\"\" ||=\"\" undefined)=\"\" return=\"\" }=\"\" for=\"\" (var=\"\" i=\"0;\" <=\"\" attributes.length;=\"\" i++)=\"\" attr=\"attributes[i]\" (attr.name.substr(0,5)=\"\" !=\"=\" \"data-\")=\"\" continue=\"\" hash[attr.name.substr(5)]=\"attr.value\" },{}],2:[function(require,module,exports){=\"\" createstore=\"require(\"weakmap-shim/create-store\")\" individual=\"require(\"individual\")\" createhash=\"require(\"./create-hash.js\")\" hashstore=\"Individual(\"__DATA_SET_WEAKMAP@3\",\" createstore())=\"\" dataset(elem)=\"\" store=\"hashStore(elem)\" (!store.hash)=\"\" store.hash=\"createHash(elem)\" },{\".=\"\" create-hash.js\":1,\"individual\":3,\"weakmap-shim=\"\" create-store\":4}],3:[function(require,module,exports){=\"\" (function=\"\" (global){=\"\" root=\"typeof\" window=\"\" 'undefined'=\"\" ?=\"\" :=\"\" typeof=\"\" global=\"\" {};=\"\" individual(key,=\"\" value)=\"\" (root[key])=\"\" root[key]=\"\" object.defineproperty(root,=\"\" key,=\"\" value:=\"\" value=\"\" ,=\"\" configurable:=\"\" true=\"\" })=\"\" }).call(this,typeof=\"\" self=\"\" \"undefined\"=\"\" {})=\"\" },{}],4:[function(require,module,exports){=\"\" hiddenstore=\"require('./hidden-store.js');\" createstore()=\"\" key=\"{};\" (obj)=\"\" (typeof=\"\" obj=\"\" 'object'=\"\" null)=\"\" throw=\"\" new=\"\" error('weakmap-shim:=\"\" must=\"\" be=\"\" object')=\"\" &&=\"\" store.identity=\"==\" hiddenstore(obj,=\"\" key);=\"\" };=\"\" hidden-store.js\":5}],5:[function(require,module,exports){=\"\" key)=\"\" identity:=\"\" valueof=\"obj.valueOf;\" object.defineproperty(obj,=\"\" \"valueof\",=\"\" (value)=\"\" valueof.apply(this,=\"\" arguments)=\"\" store;=\"\" },=\"\" writable:=\"\" });=\"\" },{}],6:[function(require,module,exports){=\"\" dataset=\"require(\"data-set\")\" addevent(target,=\"\" type,=\"\" handler)=\"\" ds=\"DataSet(target)\" events=\"ds[type]\" (!events)=\"\" ds[type]=\"handler\" else=\"\" (array.isarray(events))=\"\" (events.indexof(handler)=\"==\" -1)=\"\" events.push(handler)=\"\" (events=\"\" handler]=\"\" },{\"data-set\":2}],7:[function(require,module,exports){=\"\" globaldocument=\"require(\"global/document\")\" addevent=\"require(\"./add-event.js\")\" removeevent=\"require(\"./remove-event.js\")\" proxyevent=\"require(\"./proxy-event.js\")\" handler_store=\"createStore()\" domdelegator(document)=\"\" document=\"document\" this.target=\"document.documentElement\" this.events=\"{}\" this.raweventlisteners=\"{}\" this.globallisteners=\"{}\" domdelegator.prototype.addeventlistener=\"addEvent\" domdelegator.prototype.removeeventlistener=\"removeEvent\" domdelegator.prototype.allocatehandle=\"function\" allocatehandle(func)=\"\" handle=\"new\" handle()=\"\" handler_store(handle).func=\"func;\" domdelegator.prototype.transformhandle=\"function\" transformhandle(handle,=\"\" lambda)=\"\" func=\"HANDLER_STORE(handle).func\" this.allocatehandle(function=\"\" (ev)=\"\" result=\"lambda(ev)\" (result)=\"\" func(result)=\"\" domdelegator.prototype.addglobaleventlistener=\"function\" addglobaleventlistener(eventname,=\"\" fn)=\"\" listeners=\"this.globalListeners[eventName]\" [];=\"\" (listeners.indexof(fn)=\"==\" listeners.push(fn)=\"\" this.globallisteners[eventname]=\"listeners;\" domdelegator.prototype.removeglobaleventlistener=\"function\" removeglobaleventlistener(eventname,=\"\" index=\"listeners.indexOf(fn)\" (index=\"\" listeners.splice(index,=\"\" 1)=\"\" domdelegator.prototype.listento=\"function\" listento(eventname)=\"\" (this.events[eventname])=\"\" this.events[eventname]=\"true\" listener=\"this.rawEventListeners[eventName]\" (!listener)=\"\" ==\"\" createhandler(eventname,=\"\" this)=\"\" this.target.addeventlistener(eventname,=\"\" listener,=\"\" true)=\"\" domdelegator.prototype.unlistento=\"function\" unlistento(eventname)=\"\" (!this.events[eventname])=\"\" error(\"dom-delegator#unlistento:=\"\" cannot=\"\" \"=\"\" +=\"\" \"unlisten=\"\" to=\"\" eventname)=\"\" this.target.removeeventlistener(eventname,=\"\" delegator)=\"\" globallisteners=\"delegator.globalListeners;\" delegatortarget=\"delegator.target;\" handler=\"\" handler(ev)=\"\" globalhandlers=\"globalListeners[eventName]\" []=\"\" (globalhandlers.length=\"\"> 0) {\n            var globalEvent = new ProxyEvent(ev);\n            globalEvent.currentTarget = delegatorTarget;\n            callListeners(globalHandlers, globalEvent)\n        }\n\n        findAndInvokeListeners(ev.target, ev, eventName)\n    }\n}\n\nfunction findAndInvokeListeners(elem, ev, eventName) {\n    var listener = getListener(elem, eventName)\n\n    if (listener && listener.handlers.length > 0) {\n        var listenerEvent = new ProxyEvent(ev);\n        listenerEvent.currentTarget = listener.currentTarget\n        callListeners(listener.handlers, listenerEvent)\n\n        if (listenerEvent._bubbles) {\n            var nextTarget = listener.currentTarget.parentNode\n            findAndInvokeListeners(nextTarget, ev, eventName)\n        }\n    }\n}\n\nfunction getListener(target, type) {\n    // terminate recursion if parent is `null`\n    if (target === null) {\n        return null\n    }\n\n    var ds = DataSet(target)\n    // fetch list of handler fns for this event\n    var handler = ds[type]\n    var allHandler = ds.event\n\n    if (!handler && !allHandler) {\n        return getListener(target.parentNode, type)\n    }\n\n    var handlers = [].concat(handler || [], allHandler || [])\n    return new Listener(target, handlers)\n}\n\nfunction callListeners(handlers, ev) {\n    handlers.forEach(function (handler) {\n        if (typeof handler === \"function\") {\n            handler(ev)\n        } else if (typeof handler.handleEvent === \"function\") {\n            handler.handleEvent(ev)\n        } else if (handler.type === \"dom-delegator-handle\") {\n            HANDLER_STORE(handler).func(ev)\n        } else {\n            throw new Error(\"dom-delegator: unknown handler \" +\n                \"found: \" + JSON.stringify(handlers));\n        }\n    })\n}\n\nfunction Listener(target, handlers) {\n    this.currentTarget = target\n    this.handlers = handlers\n}\n\nfunction Handle() {\n    this.type = \"dom-delegator-handle\"\n}\n\n},{\"./add-event.js\":6,\"./proxy-event.js\":15,\"./remove-event.js\":16,\"data-set\":2,\"global/document\":10,\"weakmap-shim/create-store\":13}],8:[function(require,module,exports){\nvar Individual = require(\"individual\")\nvar cuid = require(\"cuid\")\nvar globalDocument = require(\"global/document\")\n\nvar DOMDelegator = require(\"./dom-delegator.js\")\n\nvar delegatorCache = Individual(\"__DOM_DELEGATOR_CACHE@9\", {\n    delegators: {}\n})\nvar commonEvents = [\n    \"blur\", \"change\", \"click\",  \"contextmenu\", \"dblclick\",\n    \"error\",\"focus\", \"focusin\", \"focusout\", \"input\", \"keydown\",\n    \"keypress\", \"keyup\", \"load\", \"mousedown\", \"mouseup\",\n    \"resize\", \"scroll\", \"select\", \"submit\", \"touchcancel\",\n    \"touchend\", \"touchstart\", \"unload\"\n]\n\n/*  Delegator is a thin wrapper around a singleton `DOMDelegator`\n        instance.\n\n    Only one DOMDelegator should exist because we do not want\n        duplicate event listeners bound to the DOM.\n\n    `Delegator` will also `listenTo()` all events unless\n        every caller opts out of it\n*/\nmodule.exports = Delegator\n\nfunction Delegator(opts) {\n    opts = opts || {}\n    var document = opts.document || globalDocument\n\n    var cacheKey = document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"]\n\n    if (!cacheKey) {\n        cacheKey =\n            document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"] = cuid()\n    }\n\n    var delegator = delegatorCache.delegators[cacheKey]\n\n    if (!delegator) {\n        delegator = delegatorCache.delegators[cacheKey] =\n            new DOMDelegator(document)\n    }\n\n    if (opts.defaultEvents !== false) {\n        for (var i = 0; i < commonEvents.length; i++) {\n            delegator.listenTo(commonEvents[i])\n        }\n    }\n\n    return delegator\n}\n\n\n\n},{\"./dom-delegator.js\":7,\"cuid\":9,\"global/document\":10,\"individual\":11}],9:[function(require,module,exports){\n/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\n/*global window, navigator, document, require, process, module */\n(function (app) {\n  'use strict';\n  var namespace = 'cuid',\n    c = 0,\n    blockSize = 4,\n    base = 36,\n    discreteValues = Math.pow(base, blockSize),\n\n    pad = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length-size);\n    },\n\n    randomBlock = function randomBlock() {\n      return pad((Math.random() *\n            discreteValues << 0)\n            .toString(base), blockSize);\n    },\n\n    safeCounter = function () {\n      c = (c < discreteValues) ? c : 0;\n      c++; // this is not subliminal\n      return c - 1;\n    },\n\n    api = function cuid() {\n      // Starting with a lowercase letter makes\n      // it HTML element ID friendly.\n      var letter = 'c', // hard-coded allows for sequential access\n\n        // timestamp\n        // warning: this exposes the exact date and time\n        // that the uid was created.\n        timestamp = (new Date().getTime()).toString(base),\n\n        // Prevent same-machine collisions.\n        counter,\n\n        // A few chars to generate distinct ids for different\n        // clients (so different computers are far less\n        // likely to generate the same id)\n        fingerprint = api.fingerprint(),\n\n        // Grab some more chars from Math.random()\n        random = randomBlock() + randomBlock();\n\n        counter = pad(safeCounter().toString(base), blockSize);\n\n      return  (letter + timestamp + counter + fingerprint + random);\n    };\n\n  api.slug = function slug() {\n    var date = new Date().getTime().toString(36),\n      counter,\n      print = api.fingerprint().slice(0,1) +\n        api.fingerprint().slice(-1),\n      random = randomBlock().slice(-2);\n\n      counter = safeCounter().toString(36).slice(-4);\n\n    return date.slice(-2) +\n      counter + print + random;\n  };\n\n  api.globalCount = function globalCount() {\n    // We want to cache the results of this\n    var cache = (function calc() {\n        var i,\n          count = 0;\n\n        for (i in window) {\n          count++;\n        }\n\n        return count;\n      }());\n\n    api.globalCount = function () { return cache; };\n    return cache;\n  };\n\n  api.fingerprint = function browserPrint() {\n    return pad((navigator.mimeTypes.length +\n      navigator.userAgent.length).toString(36) +\n      api.globalCount().toString(36), 4);\n  };\n\n  // don't change anything from here down.\n  if (app.register) {\n    app.register(namespace, api);\n  } else if (typeof module !== 'undefined') {\n    module.exports = api;\n  } else {\n    app[namespace] = api;\n  }\n\n}(this.applitude || this));\n\n},{}],10:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":40}],11:[function(require,module,exports){\nmodule.exports=require(3)\n},{}],12:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],13:[function(require,module,exports){\nmodule.exports=require(4)\n},{\"./hidden-store.js\":14}],14:[function(require,module,exports){\nmodule.exports=require(5)\n},{}],15:[function(require,module,exports){\nvar inherits = require(\"inherits\")\n\nvar ALL_PROPS = [\n    \"altKey\", \"bubbles\", \"cancelable\", \"ctrlKey\",\n    \"eventPhase\", \"metaKey\", \"relatedTarget\", \"shiftKey\",\n    \"target\", \"timeStamp\", \"type\", \"view\", \"which\"\n]\nvar KEY_PROPS = [\"char\", \"charCode\", \"key\", \"keyCode\"]\nvar MOUSE_PROPS = [\n    \"button\", \"buttons\", \"clientX\", \"clientY\", \"layerX\",\n    \"layerY\", \"offsetX\", \"offsetY\", \"pageX\", \"pageY\",\n    \"screenX\", \"screenY\", \"toElement\"\n]\n\nvar rkeyEvent = /^key|input/\nvar rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/\n\nmodule.exports = ProxyEvent\n\nfunction ProxyEvent(ev) {\n    if (!(this instanceof ProxyEvent)) {\n        return new ProxyEvent(ev)\n    }\n\n    if (rkeyEvent.test(ev.type)) {\n        return new KeyEvent(ev)\n    } else if (rmouseEvent.test(ev.type)) {\n        return new MouseEvent(ev)\n    }\n\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    this._rawEvent = ev\n    this._bubbles = false;\n}\n\nProxyEvent.prototype.preventDefault = function () {\n    this._rawEvent.preventDefault()\n}\n\nProxyEvent.prototype.startPropagation = function () {\n    this._bubbles = true;\n}\n\nfunction MouseEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < MOUSE_PROPS.length; j++) {\n        var mousePropKey = MOUSE_PROPS[j]\n        this[mousePropKey] = ev[mousePropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(MouseEvent, ProxyEvent)\n\nfunction KeyEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < KEY_PROPS.length; j++) {\n        var keyPropKey = KEY_PROPS[j]\n        this[keyPropKey] = ev[keyPropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(KeyEvent, ProxyEvent)\n\n},{\"inherits\":12}],16:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = removeEvent\n\nfunction removeEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        return\n    } else if (Array.isArray(events)) {\n        var index = events.indexOf(handler)\n        if (index !== -1) {\n            events.splice(index, 1)\n        }\n    } else if (events === handler) {\n        ds[type] = null\n    }\n}\n\n},{\"data-set\":2}],17:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"vtree/is-vhook\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, props, previous, propName);\n        } else if (isHook(propValue)) {\n            propValue.hook(node,\n                propName,\n                previous ? previous[propName] : undefined)\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else if (propValue !== undefined) {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, props, previous, propName) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{\"is-object\":21,\"vtree/is-vhook\":29}],18:[function(require,module,exports){\nvar document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"vtree/is-vnode\")\nvar isVText = require(\"vtree/is-vtext\")\nvar isWidget = require(\"vtree/is-widget\")\nvar handleThunk = require(\"vtree/handle-thunk\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{\"./apply-properties\":17,\"global/document\":20,\"vtree/handle-thunk\":27,\"vtree/is-vnode\":30,\"vtree/is-vtext\":31,\"vtree/is-widget\":32}],19:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxindex)=\"\" {=\"\" currentindex=\"((maxIndex\" +=\"\" minindex)=\"\" 2)=\"\">> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= 1=\"\" right=\"\" }=\"\" else=\"\" if=\"\" (currentitem=\"\" <=\"\" left)=\"\" {=\"\" minindex=\"currentIndex\" +=\"\"> right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],20:[function(require,module,exports){\nmodule.exports=require(10)\n},{\"min-document\":40}],21:[function(require,module,exports){\nmodule.exports = isObject\n\nfunction isObject(x) {\n    return typeof x === \"object\" && x !== null\n}\n\n},{}],22:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n\n},{}],23:[function(require,module,exports){\nvar applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"vtree/is-widget\")\nvar VPatch = require(\"vtree/vpatch\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    if (updateWidget(leftVNode, widget)) {\n        return widget.update(leftVNode, domNode) || domNode\n    }\n\n    var parentNode = domNode.parentNode\n    var newWidget = render(widget, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newWidget, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newWidget\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, bIndex) {\n    var children = []\n    var childNodes = domNode.childNodes\n    var len = childNodes.length\n    var i\n    var reverseIndex = bIndex.reverse\n\n    for (i = 0; i < len; i++) {\n        children.push(domNode.childNodes[i])\n    }\n\n    var insertOffset = 0\n    var move\n    var node\n    var insertNode\n    for (i = 0; i < len; i++) {\n        move = bIndex[i]\n        if (move !== undefined && move !== i) {\n            // the element currently at this index will be moved later so increase the insert offset\n            if (reverseIndex[i] > i) {\n                insertOffset++\n            }\n\n            node = children[move]\n            insertNode = childNodes[i + insertOffset] || null\n            if (node !== insertNode) {\n                domNode.insertBefore(node, insertNode)\n            }\n\n            // the moved element came from the front of the array so reduce the insert offset\n            if (move < i) {\n                insertOffset--\n            }\n        }\n\n        // element at this index is scheduled to be removed so increase insert offset\n        if (i in bIndex.removes) {\n            insertOffset++\n        }\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        console.log(oldRoot)\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{\"./apply-properties\":17,\"./create-element\":18,\"./update-widget\":25,\"vtree/is-widget\":32,\"vtree/vpatch\":37}],24:[function(require,module,exports){\nvar document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{\"./dom-index\":19,\"./patch-op\":23,\"global/document\":20,\"x-is-array\":22}],25:[function(require,module,exports){\nvar isWidget = require(\"vtree/is-widget\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{\"vtree/is-widget\":32}],26:[function(require,module,exports){\nvar isArray = require(\"x-is-array\")\nvar isObject = require(\"is-object\")\n\nvar VPatch = require(\"./vpatch\")\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar handleThunk = require(\"./handle-thunk\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        if (isThunk(a) || isThunk(b)) {\n            thunks(a, b, patch, index)\n        } else {\n            hooks(b, patch, index)\n        }\n        return\n    }\n\n    var apply = patch[index]\n\n    if (b == null) {\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n        destroyWidgets(a, patch, index)\n    } else if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties, b.hooks)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                destroyWidgets(a, patch, index)\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            destroyWidgets(a, patch, index)\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            destroyWidgets(a, patch, index)\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n\n        if (!isWidget(a)) {\n            destroyWidgets(a, patch, index)\n        }\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n}\n\nfunction diffProps(a, b, hooks) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (hooks && aKey in hooks) {\n            diff = diff || {}\n            diff[aKey] = bValue\n        } else {\n            if (isObject(aValue) && isObject(bValue)) {\n                if (getPrototype(bValue) !== getPrototype(aValue)) {\n                    diff = diff || {}\n                    diff[aKey] = bValue\n                } else {\n                    var objectDiff = diffProps(aValue, bValue)\n                    if (objectDiff) {\n                        diff = diff || {}\n                        diff[aKey] = objectDiff\n                    }\n                }\n            } else if (aValue !== bValue) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            }\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var bChildren = reorder(aChildren, b.children)\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else if (!rightNode) {\n            if (leftNode) {\n                // Excess nodes in a need to be removed\n                patch[index] = new VPatch(VPatch.REMOVE, leftNode, null)\n                destroyWidgets(leftNode, patch, index)\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (bChildren.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, bChildren.moves))\n    }\n\n    return apply\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = new VPatch(VPatch.REMOVE, vNode, null)\n        }\n    } else if (isVNode(vNode) && vNode.hasWidgets) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b);\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// Execute hooks when two nodes are identical\nfunction hooks(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = new VPatch(VPatch.PROPS, vNode.hooks, vNode.hooks)\n        }\n\n        if (vNode.descendantHooks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                hooks(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    }\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n\n    var bKeys = keyIndex(bChildren)\n\n    if (!bKeys) {\n        return bChildren\n    }\n\n    var aKeys = keyIndex(aChildren)\n\n    if (!aKeys) {\n        return bChildren\n    }\n\n    var bMatch = {}, aMatch = {}\n\n    for (var key in bKeys) {\n        bMatch[bKeys[key]] = aKeys[key]\n    }\n\n    for (var key in aKeys) {\n        aMatch[aKeys[key]] = bKeys[key]\n    }\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n    var shuffle = []\n    var freeIndex = 0\n    var i = 0\n    var moveIndex = 0\n    var moves = {}\n    var removes = moves.removes = {}\n    var reverse = moves.reverse = {}\n    var hasMoves = false\n\n    while (freeIndex < len) {\n        var move = aMatch[i]\n        if (move !== undefined) {\n            shuffle[i] = bChildren[move]\n            if (move !== moveIndex) {\n                moves[move] = moveIndex\n                reverse[moveIndex] = move\n                hasMoves = true\n            }\n            moveIndex++\n        } else if (i in aMatch) {\n            shuffle[i] = undefined\n            removes[i] = moveIndex++\n            hasMoves = true\n        } else {\n            while (bMatch[freeIndex] !== undefined) {\n                freeIndex++\n            }\n\n            if (freeIndex < len) {\n                var freeChild = bChildren[freeIndex]\n                if (freeChild) {\n                    shuffle[i] = freeChild\n                    if (freeIndex !== moveIndex) {\n                        hasMoves = true\n                        moves[freeIndex] = moveIndex\n                        reverse[moveIndex] = freeIndex\n                    }\n                    moveIndex++\n                }\n                freeIndex++\n            }\n        }\n        i++\n    }\n\n    if (hasMoves) {\n        shuffle.moves = moves\n    }\n\n    return shuffle\n}\n\nfunction keyIndex(children) {\n    var i, keys\n\n    for (i = 0; i < children.length; i++) {\n        var child = children[i]\n\n        if (child.key !== undefined) {\n            keys = keys || {}\n            keys[child.key] = i\n        }\n    }\n\n    return keys\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{\"./handle-thunk\":27,\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32,\"./vpatch\":37,\"is-object\":33,\"x-is-array\":34}],27:[function(require,module,exports){\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n\n},{\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32}],28:[function(require,module,exports){\nmodule.exports = isThunk\n\nfunction isThunk(t) {\n    return t && t.type === \"Thunk\"\n}\n\n},{}],29:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook && typeof hook.hook === \"function\" &&\n        !hook.hasOwnProperty(\"hook\")\n}\n\n},{}],30:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n\n},{\"./version\":35}],31:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n\n},{\"./version\":35}],32:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n\n},{}],33:[function(require,module,exports){\nmodule.exports=require(21)\n},{}],34:[function(require,module,exports){\nmodule.exports=require(22)\n},{}],35:[function(require,module,exports){\nmodule.exports = \"1\"\n\n},{}],36:[function(require,module,exports){\nvar version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property)) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n\n},{\"./is-vhook\":29,\"./is-vnode\":30,\"./is-widget\":32,\"./version\":35}],37:[function(require,module,exports){\nvar version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n\n},{\"./version\":35}],38:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n\n},{\"./version\":35}],39:[function(require,module,exports){\n\nvar VNode = require('vtree/vnode');\nvar VText = require('vtree/vtext');\nvar diff = require('vtree/diff');\nvar patch = require('vdom/patch');\nvar createElement = require('vdom/create-element');\nvar DataSet = require(\"data-set\");\nvar Delegator = require(\"dom-delegator\");\nvar isHook = require(\"vtree/is-vhook\");\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.VirtualDom = elm.Native.VirtualDom || {};\n    if (elm.Native.VirtualDom.values) {\n        return elm.Native.VirtualDom.values;\n    }\n\n    // This manages event listeners. Somehow...\n    var delegator = Delegator();\n\n    var NativeElement = Elm.Native.Graphics.Element.make(elm);\n    var Element = Elm.Graphics.Element.make(elm);\n    var Json = Elm.Native.Json.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function listToObject(list) {\n        var object = {};\n        while (list.ctor !== '[]') {\n            var entry = list._0;\n            object[entry.key] = entry.value;\n            list = list._1;\n        }\n        return object;\n    }\n\n    function node(name, propertyList, contents) {\n        var props = listToObject(propertyList);\n\n        var key, namespace;\n        // support keys\n        if (props.key !== undefined) {\n            key = props.key;\n            props.key = undefined;\n        }\n\n        // support namespace\n        if (props.namespace !== undefined) {\n            namespace = props.namespace;\n            props.namespace = undefined;\n        }\n\n        // ensure that setting text of an input does not move the cursor\n        var useSoftSet =\n            name === 'input'\n            && props.value !== undefined\n            && !isHook(props.value);\n\n        if (useSoftSet) {\n            props.value = SoftSetHook(props.value);\n        }\n\n        return new VNode(name, props, List.toArray(contents), key, namespace);\n    }\n\n    function property(key, value) {\n        return {\n            key: key,\n            value: value\n        };\n    }\n\n    function on(name, decoder, createMessage) {\n        function eventHandler(event) {\n            var value = A2(Json.runDecoderValue, decoder, event);\n            if (value.ctor === 'Ok') {\n                createMessage(value._0)();\n            }\n        }\n        return property(name, DataSetHook(eventHandler));\n    }\n\n    function DataSetHook(value) {\n        if (!(this instanceof DataSetHook)) {\n            return new DataSetHook(value);\n        }\n\n        this.value = value;\n    }\n\n    DataSetHook.prototype.hook = function (node, propertyName) {\n        var ds = DataSet(node);\n        ds[propertyName] = this.value;\n    };\n\n\n    function SoftSetHook(value) {\n      if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n      }\n\n      this.value = value;\n    }\n\n    SoftSetHook.prototype.hook = function (node, propertyName) {\n      if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n      }\n    };\n\n    function text(string) {\n        return new VText(string);\n    }\n\n    function fromElement(element) {\n        return {\n            type: \"Widget\",\n\n            element: element,\n\n            init: function () {\n                return NativeElement.render(element);\n            },\n\n            update: function (previous, node) {\n                return NativeElement.update(node, previous.element, element);\n            }\n        };\n    }\n\n    function toElement(width, height, html) {\n        return A3(Element.newElement, width, height,\n                  { ctor: 'Custom'\n                  , type: 'evancz/elm-html'\n                  , render: render\n                  , update: update\n                  , model: html\n                  });\n    }\n\n    function render(model) {\n        var element = NativeElement.createNode('div');\n        element.appendChild(createElement(model));\n        return element;\n    }\n\n    function update(node, oldModel, newModel) {\n        var patches = diff(oldModel, newModel);\n        var newNode = patch(node.firstChild, patches)\n        if (newNode !== node.firstChild) {\n            node.replaceChild(newNode, node.firstChild)\n        }\n        return node;\n    }\n\n    function lazyRef(fn, a) {\n        function thunk() {\n            return fn(a);\n        }\n        return new Thunk(fn, [a], thunk);\n    }\n\n    function lazyRef2(fn, a, b) {\n        function thunk() {\n            return A2(fn, a, b);\n        }\n        return new Thunk(fn, [a,b], thunk);\n    }\n\n    function lazyRef3(fn, a, b, c) {\n        function thunk() {\n            return A3(fn, a, b, c);\n        }\n        return new Thunk(fn, [a,b,c], thunk);\n    }\n\n    function Thunk(fn, args, thunk) {\n        this.fn = fn;\n        this.args = args;\n        this.vnode = null;\n        this.key = undefined;\n        this.thunk = thunk;\n    }\n\n    Thunk.prototype.type = \"Thunk\";\n    Thunk.prototype.update = updateThunk;\n    Thunk.prototype.render = renderThunk;\n\n    function shouldUpdate(current, previous) {\n        if (current.fn !== previous.fn) {\n            return true;\n        }\n\n        // if it's the same function, we know the number of args must match\n        var cargs = current.args;\n        var pargs = previous.args;\n\n        for (var i = cargs.length; i--; ) {\n            if (cargs[i] !== pargs[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function updateThunk(previous, domNode) {\n        if (!shouldUpdate(this, previous)) {\n            this.vnode = previous.vnode;\n            return;\n        }\n\n        if (!this.vnode) {\n            this.vnode = this.thunk();\n        }\n\n        var patches = diff(previous.vnode, this.vnode);\n        patch(domNode, patches);\n    }\n\n    function renderThunk() {\n        return this.thunk();\n    }\n\n    return Elm.Native.VirtualDom.values = {\n        node: F3(node),\n        text: text,\n        on: F3(on),\n\n        property: F2(property),\n\n        lazy: F2(lazyRef),\n        lazy2: F3(lazyRef2),\n        lazy3: F4(lazyRef3),\n\n        toElement: F3(toElement),\n        fromElement: fromElement\n    };\n};\n\n},{\"data-set\":2,\"dom-delegator\":8,\"vdom/create-element\":18,\"vdom/patch\":24,\"vtree/diff\":26,\"vtree/is-vhook\":29,\"vtree/vnode\":36,\"vtree/vtext\":38}],40:[function(require,module,exports){\n\n},{}]},{},[39]);\n\nElm.Native = Elm.Native || {};\nElm.Native.Window = {};\nElm.Native.Window.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Window = localRuntime.Native.Window || {};\n    if (localRuntime.Native.Window.values) {\n        return localRuntime.Native.Window.values;\n    }\n\n    var Signal = Elm.Signal.make(localRuntime);\n    var NS = Elm.Native.Signal.make(localRuntime);\n    var Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\n    function getWidth() {\n        return localRuntime.node.clientWidth;\n    }\n    function getHeight() {\n        if (localRuntime.isFullscreen()) {\n            return window.innerHeight;\n        }\n        return localRuntime.node.clientHeight;\n    }\n\n    var dimensions = NS.input(Tuple2(getWidth(), getHeight()));\n    dimensions.defaultNumberOfKids = 2;\n\n    // Do not move width and height into Elm. By setting the default number of kids,\n    // the resize listener can be detached.\n    var width  = A2(Signal.map, function(p){return p._0;}, dimensions);\n    width.defaultNumberOfKids = 0;\n\n    var height = A2(Signal.map, function(p){return p._1;}, dimensions);\n    height.defaultNumberOfKids = 0;\n\n    function resizeIfNeeded() {\n        // Do not trigger event if the dimensions have not changed.\n        // This should be most of the time.\n        var w = getWidth();\n        var h = getHeight();\n        if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n\n        setTimeout(function () {\n            // Check again to see if the dimensions have changed.\n            // It is conceivable that the dimensions have changed\n            // again while some other event was being processed.\n            var w = getWidth();\n            var h = getHeight();\n            if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n            localRuntime.notify(dimensions.id, Tuple2(w,h));\n        }, 0);\n    }\n    localRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\n    return localRuntime.Native.Window.values = {\n        dimensions: dimensions,\n        width: width,\n        height: height,\n        resizeIfNeeded: resizeIfNeeded\n    };\n\n};\n\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   \"use strict\";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values)\n   return _elm.Result.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Result\",\n   $Maybe = Elm.Maybe.make(_elm);\n   var toMaybe = function (result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return $Maybe.Nothing;\n            case \"Ok\":\n            return $Maybe.Just(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 110 and 123\");\n      }();\n   };\n   var Err = function (a) {\n      return {ctor: \"Err\",_0: a};\n   };\n   var andThen = F2(function (result,\n   callback) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return callback(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 72 and 91\");\n      }();\n   });\n   var Ok = function (a) {\n      return {ctor: \"Ok\",_0: a};\n   };\n   var map = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return Ok(f(result._0));}\n         _U.badCase($moduleName,\n         \"between lines 32 and 69\");\n      }();\n   });\n   var formatError = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(f(result._0));\n            case \"Ok\":\n            return Ok(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 94 and 107\");\n      }();\n   });\n   var fromMaybe = F2(function (err,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Ok(maybe._0);\n            case \"Nothing\":\n            return Err(err);}\n         _U.badCase($moduleName,\n         \"between lines 126 and 128\");\n      }();\n   });\n   _elm.Result.values = {_op: _op\n                        ,Ok: Ok\n                        ,Err: Err\n                        ,map: map\n                        ,andThen: andThen\n                        ,formatError: formatError\n                        ,toMaybe: toMaybe\n                        ,fromMaybe: fromMaybe};\n   return _elm.Result.values;\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values)\n   return _elm.Signal.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Signal\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm);\n   var subscribe = $Native$Signal.subscribe;\n   var send = $Native$Signal.send;\n   var channel = $Native$Signal.input;\n   var Message = {ctor: \"Message\"};\n   var Channel = {ctor: \"Channel\"};\n   _op[\"~\"] = F2(function (sf,s) {\n      return A3($Native$Signal.map2,\n      F2(function (f,x) {\n         return f(x);\n      }),\n      sf,\n      s);\n   });\n   _op[\"</=></=></r.length;o++)s(r[o]);return></=></internal></'></function'></https:></https:></=></=></=></=></=></=></=></=></\"]></=\"]></\"]></|\"]>","excerpt":"","more":"var Elm = Elm || { Native: {} };\nElm.Array = Elm.Array || {};\nElm.Array.make = function (_elm) {\n   \"use strict\";\n   _elm.Array = _elm.Array || {};\n   if (_elm.Array.values)\n   return _elm.Array.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Array\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Array = Elm.Native.Array.make(_elm);\n   var append = $Native$Array.append;\n   var length = $Native$Array.length;\n   var slice = $Native$Array.slice;\n   var set = $Native$Array.set;\n   var get = F2(function (i,\n   array) {\n      return _U.cmp(0,\n      i) < 1 && _U.cmp(i,\n      $Native$Array.length(array)) < 0 ? $Maybe.Just(A2($Native$Array.get,\n      i,\n      array)) : $Maybe.Nothing;\n   });\n   var push = $Native$Array.push;\n   var empty = $Native$Array.empty;\n   var filter = F2(function (isOkay,\n   arr) {\n      return function () {\n         var update = F2(function (x,\n         xs) {\n            return isOkay(x) ? A2($Native$Array.push,\n            x,\n            xs) : xs;\n         });\n         return A3($Native$Array.foldl,\n         update,\n         $Native$Array.empty,\n         arr);\n      }();\n   });\n   var foldr = $Native$Array.foldr;\n   var foldl = $Native$Array.foldl;\n   var indexedMap = $Native$Array.indexedMap;\n   var map = $Native$Array.map;\n   var toIndexedList = function (array) {\n      return A3($List.map2,\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      _L.range(0,\n      $Native$Array.length(array) - 1),\n      $Native$Array.toList(array));\n   };\n   var toList = $Native$Array.toList;\n   var fromList = $Native$Array.fromList;\n   var initialize = $Native$Array.initialize;\n   var repeat = F2(function (n,e) {\n      return A2(initialize,\n      n,\n      $Basics.always(e));\n   });\n   var Array = {ctor: \"Array\"};\n   _elm.Array.values = {_op: _op\n                       ,Array: Array\n                       ,initialize: initialize\n                       ,repeat: repeat\n                       ,fromList: fromList\n                       ,toList: toList\n                       ,toIndexedList: toIndexedList\n                       ,map: map\n                       ,indexedMap: indexedMap\n                       ,foldl: foldl\n                       ,foldr: foldr\n                       ,filter: filter\n                       ,empty: empty\n                       ,push: push\n                       ,get: get\n                       ,set: set\n                       ,slice: slice\n                       ,length: length\n                       ,append: append};\n   return _elm.Array.values;\n};\nElm.Basics = Elm.Basics || {};\nElm.Basics.make = function (_elm) {\n   \"use strict\";\n   _elm.Basics = _elm.Basics || {};\n   if (_elm.Basics.values)\n   return _elm.Basics.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Basics\",\n   $Native$Basics = Elm.Native.Basics.make(_elm),\n   $Native$Show = Elm.Native.Show.make(_elm),\n   $Native$Utils = Elm.Native.Utils.make(_elm);\n   var uncurry = F2(function (f,\n   _v0) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"_Tuple2\": return A2(f,\n              _v0._0,\n              _v0._1);}\n         _U.badCase($moduleName,\n         \"on line 458, column 19 to 24\");\n      }();\n   });\n   var curry = F3(function (f,\n   a,\n   b) {\n      return f({ctor: \"_Tuple2\"\n               ,_0: a\n               ,_1: b});\n   });\n   var flip = F3(function (f,b,a) {\n      return A2(f,a,b);\n   });\n   var snd = function (_v4) {\n      return function () {\n         switch (_v4.ctor)\n         {case \"_Tuple2\": return _v4._1;}\n         _U.badCase($moduleName,\n         \"on line 442, column 13 to 14\");\n      }();\n   };\n   var fst = function (_v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\": return _v8._0;}\n         _U.badCase($moduleName,\n         \"on line 438, column 13 to 14\");\n      }();\n   };\n   var always = F2(function (a,\n   _v12) {\n      return function () {\n         return a;\n      }();\n   });\n   var identity = function (x) {\n      return x;\n   };\n   _op[\"<|\"] = F2(function (f,x) {\n      return f(x);\n   });\n   _op[\"|>\"] = F2(function (x,f) {\n      return f(x);\n   });\n   _op[\">>\"] = F3(function (f,\n   g,\n   x) {\n      return g(f(x));\n   });\n   _op[\"<<\"] = F3(function (g,\n   f,\n   x) {\n      return g(f(x));\n   });\n   _op[\"++\"] = $Native$Utils.append;\n   var toString = $Native$Show.toString;\n   var isInfinite = $Native$Basics.isInfinite;\n   var isNaN = $Native$Basics.isNaN;\n   var toFloat = $Native$Basics.toFloat;\n   var ceiling = $Native$Basics.ceiling;\n   var floor = $Native$Basics.floor;\n   var truncate = $Native$Basics.truncate;\n   var round = $Native$Basics.round;\n   var otherwise = true;\n   var not = $Native$Basics.not;\n   var xor = $Native$Basics.xor;\n   _op[\"||\"] = $Native$Basics.or;\n   _op[\"&&\"] = $Native$Basics.and;\n   var max = $Native$Basics.max;\n   var min = $Native$Basics.min;\n   var GT = {ctor: \"GT\"};\n   var EQ = {ctor: \"EQ\"};\n   var LT = {ctor: \"LT\"};\n   var compare = $Native$Basics.compare;\n   _op[\">=\"] = $Native$Basics.ge;\n   _op[\"<=\"] = $Native$Basics.le;\n   _op[\">\"] = $Native$Basics.gt;\n   _op[\"<\"] = $Native$Basics.lt;\n   _op[\"/=\"] = $Native$Basics.neq;\n   _op[\"==\"] = $Native$Basics.eq;\n   var e = $Native$Basics.e;\n   var pi = $Native$Basics.pi;\n   var clamp = $Native$Basics.clamp;\n   var logBase = $Native$Basics.logBase;\n   var abs = $Native$Basics.abs;\n   var negate = $Native$Basics.negate;\n   var sqrt = $Native$Basics.sqrt;\n   var atan2 = $Native$Basics.atan2;\n   var atan = $Native$Basics.atan;\n   var asin = $Native$Basics.asin;\n   var acos = $Native$Basics.acos;\n   var tan = $Native$Basics.tan;\n   var sin = $Native$Basics.sin;\n   var cos = $Native$Basics.cos;\n   _op[\"^\"] = $Native$Basics.exp;\n   _op[\"%\"] = $Native$Basics.mod;\n   var rem = $Native$Basics.rem;\n   _op[\"//\"] = $Native$Basics.div;\n   _op[\"/\"] = $Native$Basics.floatDiv;\n   _op[\"*\"] = $Native$Basics.mul;\n   _op[\"-\"] = $Native$Basics.sub;\n   _op[\"+\"] = $Native$Basics.add;\n   var toPolar = $Native$Basics.toPolar;\n   var fromPolar = $Native$Basics.fromPolar;\n   var turns = $Native$Basics.turns;\n   var degrees = $Native$Basics.degrees;\n   var radians = function (t) {\n      return t;\n   };\n   _elm.Basics.values = {_op: _op\n                        ,radians: radians\n                        ,degrees: degrees\n                        ,turns: turns\n                        ,fromPolar: fromPolar\n                        ,toPolar: toPolar\n                        ,rem: rem\n                        ,cos: cos\n                        ,sin: sin\n                        ,tan: tan\n                        ,acos: acos\n                        ,asin: asin\n                        ,atan: atan\n                        ,atan2: atan2\n                        ,sqrt: sqrt\n                        ,negate: negate\n                        ,abs: abs\n                        ,logBase: logBase\n                        ,clamp: clamp\n                        ,pi: pi\n                        ,e: e\n                        ,compare: compare\n                        ,LT: LT\n                        ,EQ: EQ\n                        ,GT: GT\n                        ,min: min\n                        ,max: max\n                        ,xor: xor\n                        ,not: not\n                        ,otherwise: otherwise\n                        ,round: round\n                        ,truncate: truncate\n                        ,floor: floor\n                        ,ceiling: ceiling\n                        ,toFloat: toFloat\n                        ,isNaN: isNaN\n                        ,isInfinite: isInfinite\n                        ,toString: toString\n                        ,identity: identity\n                        ,always: always\n                        ,fst: fst\n                        ,snd: snd\n                        ,flip: flip\n                        ,curry: curry\n                        ,uncurry: uncurry};\n   return _elm.Basics.values;\n};\nElm.Char = Elm.Char || {};\nElm.Char.make = function (_elm) {\n   \"use strict\";\n   _elm.Char = _elm.Char || {};\n   if (_elm.Char.values)\n   return _elm.Char.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Char\",\n   $Native$Char = Elm.Native.Char.make(_elm);\n   var fromCode = $Native$Char.fromCode;\n   var toCode = $Native$Char.toCode;\n   var toLocaleLower = $Native$Char.toLocaleLower;\n   var toLocaleUpper = $Native$Char.toLocaleUpper;\n   var toLower = $Native$Char.toLower;\n   var toUpper = $Native$Char.toUpper;\n   var isHexDigit = $Native$Char.isHexDigit;\n   var isOctDigit = $Native$Char.isOctDigit;\n   var isDigit = $Native$Char.isDigit;\n   var isLower = $Native$Char.isLower;\n   var isUpper = $Native$Char.isUpper;\n   _elm.Char.values = {_op: _op\n                      ,isUpper: isUpper\n                      ,isLower: isLower\n                      ,isDigit: isDigit\n                      ,isOctDigit: isOctDigit\n                      ,isHexDigit: isHexDigit\n                      ,toUpper: toUpper\n                      ,toLower: toLower\n                      ,toLocaleUpper: toLocaleUpper\n                      ,toLocaleLower: toLocaleLower\n                      ,toCode: toCode\n                      ,fromCode: fromCode};\n   return _elm.Char.values;\n};\nElm.Color = Elm.Color || {};\nElm.Color.make = function (_elm) {\n   \"use strict\";\n   _elm.Color = _elm.Color || {};\n   if (_elm.Color.values)\n   return _elm.Color.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Color\",\n   $Basics = Elm.Basics.make(_elm);\n   var Radial = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"Radial\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var radial = Radial;\n   var Linear = F3(function (a,\n   b,\n   c) {\n      return {ctor: \"Linear\"\n             ,_0: a\n             ,_1: b\n             ,_2: c};\n   });\n   var linear = Linear;\n   var fmod = F2(function (f,n) {\n      return function () {\n         var integer = $Basics.floor(f);\n         return $Basics.toFloat(A2($Basics._op[\"%\"],\n         integer,\n         n)) + f - $Basics.toFloat(integer);\n      }();\n   });\n   var rgbToHsl = F3(function (red,\n   green,\n   blue) {\n      return function () {\n         var b = $Basics.toFloat(blue) / 255;\n         var g = $Basics.toFloat(green) / 255;\n         var r = $Basics.toFloat(red) / 255;\n         var cMax = A2($Basics.max,\n         A2($Basics.max,r,g),\n         b);\n         var cMin = A2($Basics.min,\n         A2($Basics.min,r,g),\n         b);\n         var c = cMax - cMin;\n         var lightness = (cMax + cMin) / 2;\n         var saturation = _U.eq(lightness,\n         0) ? 0 : c / (1 - $Basics.abs(2 * lightness - 1));\n         var hue = $Basics.degrees(60) * (_U.eq(cMax,\n         r) ? A2(fmod,\n         (g - b) / c,\n         6) : _U.eq(cMax,\n         g) ? (b - r) / c + 2 : _U.eq(cMax,\n         b) ? (r - g) / c + 4 : _U.badIf($moduleName,\n         \"between lines 141 and 143\"));\n         return {ctor: \"_Tuple3\"\n                ,_0: hue\n                ,_1: saturation\n                ,_2: lightness};\n      }();\n   });\n   var hslToRgb = F3(function (hue,\n   saturation,\n   lightness) {\n      return function () {\n         var hue$ = hue / $Basics.degrees(60);\n         var chroma = (1 - $Basics.abs(2 * lightness - 1)) * saturation;\n         var x = chroma * (1 - $Basics.abs(A2(fmod,\n         hue$,\n         2) - 1));\n         var $ = _U.cmp(hue$,\n         0) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: 0\n                  ,_2: 0} : _U.cmp(hue$,\n         1) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: x\n                  ,_2: 0} : _U.cmp(hue$,\n         2) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: chroma\n                  ,_2: 0} : _U.cmp(hue$,\n         3) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: chroma\n                  ,_2: x} : _U.cmp(hue$,\n         4) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: 0\n                  ,_1: x\n                  ,_2: chroma} : _U.cmp(hue$,\n         5) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: x\n                  ,_1: 0\n                  ,_2: chroma} : _U.cmp(hue$,\n         6) < 0 ? {ctor: \"_Tuple3\"\n                  ,_0: chroma\n                  ,_1: 0\n                  ,_2: x} : {ctor: \"_Tuple3\"\n                            ,_0: 0\n                            ,_1: 0\n                            ,_2: 0},\n         r = $._0,\n         g = $._1,\n         b = $._2;\n         var m = lightness - chroma / 2;\n         return {ctor: \"_Tuple3\"\n                ,_0: r + m\n                ,_1: g + m\n                ,_2: b + m};\n      }();\n   });\n   var toRgb = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\":\n            return function () {\n                 var $ = A3(hslToRgb,\n                 color._0,\n                 color._1,\n                 color._2),\n                 r = $._0,\n                 g = $._1,\n                 b = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,blue: $Basics.round(255 * b)\n                        ,green: $Basics.round(255 * g)\n                        ,red: $Basics.round(255 * r)};\n              }();\n            case \"RGBA\": return {_: {}\n                                ,alpha: color._3\n                                ,blue: color._2\n                                ,green: color._1\n                                ,red: color._0};}\n         _U.badCase($moduleName,\n         \"between lines 115 and 123\");\n      }();\n   };\n   var toHsl = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return {_: {}\n                              ,alpha: color._3\n                              ,hue: color._0\n                              ,lightness: color._2\n                              ,saturation: color._1};\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return {_: {}\n                        ,alpha: color._3\n                        ,hue: h\n                        ,lightness: l\n                        ,saturation: s};\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 105 and 112\");\n      }();\n   };\n   var HSLA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"HSLA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var hsla = F4(function (hue,\n   saturation,\n   lightness,\n   alpha) {\n      return A4(HSLA,\n      hue - $Basics.turns($Basics.toFloat($Basics.floor(hue / (2 * $Basics.pi)))),\n      saturation,\n      lightness,\n      alpha);\n   });\n   var hsl = F3(function (hue,\n   saturation,\n   lightness) {\n      return A4(hsla,\n      hue,\n      saturation,\n      lightness,\n      1);\n   });\n   var complement = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"HSLA\": return A4(hsla,\n              color._0 + $Basics.degrees(180),\n              color._1,\n              color._2,\n              color._3);\n            case \"RGBA\":\n            return function () {\n                 var $ = A3(rgbToHsl,\n                 color._0,\n                 color._1,\n                 color._2),\n                 h = $._0,\n                 s = $._1,\n                 l = $._2;\n                 return A4(hsla,\n                 h + $Basics.degrees(180),\n                 s,\n                 l,\n                 color._3);\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 96 and 102\");\n      }();\n   };\n   var grayscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var greyscale = function (p) {\n      return A4(HSLA,0,0,1 - p,1);\n   };\n   var RGBA = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"RGBA\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var rgba = RGBA;\n   var rgb = F3(function (r,g,b) {\n      return A4(RGBA,r,g,b,1);\n   });\n   var lightRed = A4(RGBA,\n   239,\n   41,\n   41,\n   1);\n   var red = A4(RGBA,204,0,0,1);\n   var darkRed = A4(RGBA,\n   164,\n   0,\n   0,\n   1);\n   var lightOrange = A4(RGBA,\n   252,\n   175,\n   62,\n   1);\n   var orange = A4(RGBA,\n   245,\n   121,\n   0,\n   1);\n   var darkOrange = A4(RGBA,\n   206,\n   92,\n   0,\n   1);\n   var lightYellow = A4(RGBA,\n   255,\n   233,\n   79,\n   1);\n   var yellow = A4(RGBA,\n   237,\n   212,\n   0,\n   1);\n   var darkYellow = A4(RGBA,\n   196,\n   160,\n   0,\n   1);\n   var lightGreen = A4(RGBA,\n   138,\n   226,\n   52,\n   1);\n   var green = A4(RGBA,\n   115,\n   210,\n   22,\n   1);\n   var darkGreen = A4(RGBA,\n   78,\n   154,\n   6,\n   1);\n   var lightBlue = A4(RGBA,\n   114,\n   159,\n   207,\n   1);\n   var blue = A4(RGBA,\n   52,\n   101,\n   164,\n   1);\n   var darkBlue = A4(RGBA,\n   32,\n   74,\n   135,\n   1);\n   var lightPurple = A4(RGBA,\n   173,\n   127,\n   168,\n   1);\n   var purple = A4(RGBA,\n   117,\n   80,\n   123,\n   1);\n   var darkPurple = A4(RGBA,\n   92,\n   53,\n   102,\n   1);\n   var lightBrown = A4(RGBA,\n   233,\n   185,\n   110,\n   1);\n   var brown = A4(RGBA,\n   193,\n   125,\n   17,\n   1);\n   var darkBrown = A4(RGBA,\n   143,\n   89,\n   2,\n   1);\n   var black = A4(RGBA,0,0,0,1);\n   var white = A4(RGBA,\n   255,\n   255,\n   255,\n   1);\n   var lightGrey = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var grey = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGrey = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightGray = A4(RGBA,\n   238,\n   238,\n   236,\n   1);\n   var gray = A4(RGBA,\n   211,\n   215,\n   207,\n   1);\n   var darkGray = A4(RGBA,\n   186,\n   189,\n   182,\n   1);\n   var lightCharcoal = A4(RGBA,\n   136,\n   138,\n   133,\n   1);\n   var charcoal = A4(RGBA,\n   85,\n   87,\n   83,\n   1);\n   var darkCharcoal = A4(RGBA,\n   46,\n   52,\n   54,\n   1);\n   _elm.Color.values = {_op: _op\n                       ,RGBA: RGBA\n                       ,HSLA: HSLA\n                       ,rgba: rgba\n                       ,rgb: rgb\n                       ,hsla: hsla\n                       ,hsl: hsl\n                       ,grayscale: grayscale\n                       ,greyscale: greyscale\n                       ,complement: complement\n                       ,toHsl: toHsl\n                       ,toRgb: toRgb\n                       ,fmod: fmod\n                       ,rgbToHsl: rgbToHsl\n                       ,hslToRgb: hslToRgb\n                       ,Linear: Linear\n                       ,Radial: Radial\n                       ,linear: linear\n                       ,radial: radial\n                       ,lightRed: lightRed\n                       ,red: red\n                       ,darkRed: darkRed\n                       ,lightOrange: lightOrange\n                       ,orange: orange\n                       ,darkOrange: darkOrange\n                       ,lightYellow: lightYellow\n                       ,yellow: yellow\n                       ,darkYellow: darkYellow\n                       ,lightGreen: lightGreen\n                       ,green: green\n                       ,darkGreen: darkGreen\n                       ,lightBlue: lightBlue\n                       ,blue: blue\n                       ,darkBlue: darkBlue\n                       ,lightPurple: lightPurple\n                       ,purple: purple\n                       ,darkPurple: darkPurple\n                       ,lightBrown: lightBrown\n                       ,brown: brown\n                       ,darkBrown: darkBrown\n                       ,black: black\n                       ,white: white\n                       ,lightGrey: lightGrey\n                       ,grey: grey\n                       ,darkGrey: darkGrey\n                       ,lightGray: lightGray\n                       ,gray: gray\n                       ,darkGray: darkGray\n                       ,lightCharcoal: lightCharcoal\n                       ,charcoal: charcoal\n                       ,darkCharcoal: darkCharcoal};\n   return _elm.Color.values;\n};\nElm.Dict = Elm.Dict || {};\nElm.Dict.make = function (_elm) {\n   \"use strict\";\n   _elm.Dict = _elm.Dict || {};\n   if (_elm.Dict.values)\n   return _elm.Dict.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Dict\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Debug = Elm.Native.Debug.make(_elm),\n   $String = Elm.String.make(_elm);\n   var foldr = F3(function (f,\n   acc,\n   t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            switch (t._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldr,\n              f,\n              A3(f,\n              t._1,\n              t._2,\n              A3(foldr,f,acc,t._4)),\n              t._3);}\n         _U.badCase($moduleName,\n         \"between lines 410 and 418\");\n      }();\n   });\n   var keys = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      keyList) {\n         return A2($List._op[\"::\"],\n         key,\n         keyList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var values = function (dict) {\n      return A3(foldr,\n      F3(function (key,\n      value,\n      valueList) {\n         return A2($List._op[\"::\"],\n         value,\n         valueList);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var toList = function (dict) {\n      return A3(foldr,\n      F3(function (key,value,list) {\n         return A2($List._op[\"::\"],\n         {ctor: \"_Tuple2\"\n         ,_0: key\n         ,_1: value},\n         list);\n      }),\n      _L.fromArray([]),\n      dict);\n   };\n   var foldl = F3(function (f,\n   acc,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return acc;}\n              break;\n            case \"RBNode\": return A3(foldl,\n              f,\n              A3(f,\n              dict._1,\n              dict._2,\n              A3(foldl,f,acc,dict._3)),\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 399 and 407\");\n      }();\n   });\n   var isBBlack = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\": return true;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"BBlack\": return true;}\n              break;}\n         return false;\n      }();\n   };\n   var showFlag = function (f) {\n      return function () {\n         switch (f.ctor)\n         {case \"Insert\": return \"Insert\";\n            case \"Remove\": return \"Remove\";\n            case \"Same\": return \"Same\";}\n         _U.badCase($moduleName,\n         \"between lines 175 and 181\");\n      }();\n   };\n   var Same = {ctor: \"Same\"};\n   var Remove = {ctor: \"Remove\"};\n   var Insert = {ctor: \"Insert\"};\n   var get = F2(function (targetKey,\n   dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Maybe.Nothing;}\n              break;\n            case \"RBNode\":\n            return function () {\n                 var _v29 = A2($Basics.compare,\n                 targetKey,\n                 dict._1);\n                 switch (_v29.ctor)\n                 {case \"EQ\":\n                    return $Maybe.Just(dict._2);\n                    case \"GT\": return A2(get,\n                      targetKey,\n                      dict._4);\n                    case \"LT\": return A2(get,\n                      targetKey,\n                      dict._3);}\n                 _U.badCase($moduleName,\n                 \"between lines 131 and 137\");\n              }();}\n         _U.badCase($moduleName,\n         \"between lines 126 and 137\");\n      }();\n   });\n   var member = F2(function (key,\n   dict) {\n      return function () {\n         var _v30 = A2(get,key,dict);\n         switch (_v30.ctor)\n         {case \"Just\": return true;\n            case \"Nothing\": return false;}\n         _U.badCase($moduleName,\n         \"between lines 140 and 142\");\n      }();\n   });\n   var max = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"(max Empty) is not defined\");\n            case \"RBNode\":\n            switch (dict._4.ctor)\n              {case \"RBEmpty\":\n                 return {ctor: \"_Tuple2\"\n                        ,_0: dict._1\n                        ,_1: dict._2};}\n              return max(dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 100 and 123\");\n      }();\n   };\n   var min = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return $Native$Debug.crash(\"(min Empty) is not defined\");}\n              break;\n            case \"RBNode\":\n            switch (dict._3.ctor)\n              {case \"RBEmpty\":\n                 switch (dict._3._0.ctor)\n                   {case \"LBlack\":\n                      return {ctor: \"_Tuple2\"\n                             ,_0: dict._1\n                             ,_1: dict._2};}\n                   break;}\n              return min(dict._3);}\n         _U.badCase($moduleName,\n         \"between lines 87 and 95\");\n      }();\n   };\n   var RBEmpty = function (a) {\n      return {ctor: \"RBEmpty\"\n             ,_0: a};\n   };\n   var RBNode = F5(function (a,\n   b,\n   c,\n   d,\n   e) {\n      return {ctor: \"RBNode\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d\n             ,_4: e};\n   });\n   var showLColor = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"LBBlack\":\n            return \"LBBlack\";\n            case \"LBlack\": return \"LBlack\";}\n         _U.badCase($moduleName,\n         \"between lines 70 and 72\");\n      }();\n   };\n   var LBBlack = {ctor: \"LBBlack\"};\n   var LBlack = {ctor: \"LBlack\"};\n   var empty = RBEmpty(LBlack);\n   var map = F2(function (f,dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              dict._0,\n              dict._1,\n              A2(f,dict._1,dict._2),\n              A2(map,f,dict._3),\n              A2(map,f,dict._4));}\n         _U.badCase($moduleName,\n         \"between lines 387 and 396\");\n      }();\n   });\n   var showNColor = function (c) {\n      return function () {\n         switch (c.ctor)\n         {case \"BBlack\": return \"BBlack\";\n            case \"Black\": return \"Black\";\n            case \"NBlack\": return \"NBlack\";\n            case \"Red\": return \"Red\";}\n         _U.badCase($moduleName,\n         \"between lines 56 and 60\");\n      }();\n   };\n   var reportRemBug = F4(function (msg,\n   c,\n   lgot,\n   rgot) {\n      return $Native$Debug.crash($String.concat(_L.fromArray([\"Internal red-black tree invariant violated, expected \"\n                                                             ,msg\n                                                             ,\" and got \"\n                                                             ,showNColor(c)\n                                                             ,\"/\"\n                                                             ,lgot\n                                                             ,\"/\"\n                                                             ,rgot\n                                                             ,\"\\nPlease report this bug to <https://github.com/elm-lang/Elm/issues>\"])));\n   });\n   var NBlack = {ctor: \"NBlack\"};\n   var BBlack = {ctor: \"BBlack\"};\n   var Black = {ctor: \"Black\"};\n   var ensureBlackRoot = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBlack\": return dict;}\n              break;\n            case \"RBNode\":\n            switch (dict._0.ctor)\n              {case \"Black\": return dict;\n                 case \"Red\": return A5(RBNode,\n                   Black,\n                   dict._1,\n                   dict._2,\n                   dict._3,\n                   dict._4);}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 147 and 159\");\n      }();\n   };\n   var blackish = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\": return true;\n            case \"RBNode\":\n            return _U.eq(t._0,\n              Black) || _U.eq(t._0,BBlack);}\n         _U.badCase($moduleName,\n         \"between lines 332 and 334\");\n      }();\n   };\n   var blacken = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return RBEmpty(LBlack);\n            case \"RBNode\": return A5(RBNode,\n              Black,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 371 and 373\");\n      }();\n   };\n   var Red = {ctor: \"Red\"};\n   var moreBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a double black node more black!\");\n            case \"Black\": return BBlack;\n            case \"NBlack\": return Red;\n            case \"Red\": return Black;}\n         _U.badCase($moduleName,\n         \"between lines 237 and 241\");\n      }();\n   };\n   var lessBlack = function (color) {\n      return function () {\n         switch (color.ctor)\n         {case \"BBlack\": return Black;\n            case \"Black\": return Red;\n            case \"NBlack\":\n            return $Native$Debug.crash(\"Can\\'t make a negative black node less black!\");\n            case \"Red\": return NBlack;}\n         _U.badCase($moduleName,\n         \"between lines 246 and 250\");\n      }();\n   };\n   var lessBlackTree = function (dict) {\n      return function () {\n         switch (dict.ctor)\n         {case \"RBEmpty\":\n            switch (dict._0.ctor)\n              {case \"LBBlack\":\n                 return RBEmpty(LBlack);}\n              break;\n            case \"RBNode\": return A5(RBNode,\n              lessBlack(dict._0),\n              dict._1,\n              dict._2,\n              dict._3,\n              dict._4);}\n         _U.badCase($moduleName,\n         \"between lines 255 and 257\");\n      }();\n   };\n   var redden = function (t) {\n      return function () {\n         switch (t.ctor)\n         {case \"RBEmpty\":\n            return $Native$Debug.crash(\"can\\'t make a Leaf red\");\n            case \"RBNode\": return A5(RBNode,\n              Red,\n              t._1,\n              t._2,\n              t._3,\n              t._4);}\n         _U.badCase($moduleName,\n         \"between lines 379 and 384\");\n      }();\n   };\n   var balance_node = function (t) {\n      return function () {\n         var assemble = function (col) {\n            return function (xk) {\n               return function (xv) {\n                  return function (yk) {\n                     return function (yv) {\n                        return function (zk) {\n                           return function (zv) {\n                              return function (a) {\n                                 return function (b) {\n                                    return function (c) {\n                                       return function (d) {\n                                          return A5(RBNode,\n                                          lessBlack(col),\n                                          yk,\n                                          yv,\n                                          A5(RBNode,Black,xk,xv,a,b),\n                                          A5(RBNode,Black,zk,zv,c,d));\n                                       };\n                                    };\n                                 };\n                              };\n                           };\n                        };\n                     };\n                  };\n               };\n            };\n         };\n         return blackish(t) ? function () {\n            switch (t.ctor)\n            {case \"RBNode\":\n               switch (t._3.ctor)\n                 {case \"RBNode\":\n                    switch (t._3._0.ctor)\n                      {case \"Red\":\n                         switch (t._3._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._3._1)(t._3._3._2)(t._3._1)(t._3._2)(t._1)(t._2)(t._3._3._3)(t._3._3._4)(t._3._4)(t._4);}\n                                break;}\n                           switch (t._3._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._3._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._3._1)(t._3._2)(t._3._4._1)(t._3._4._2)(t._1)(t._2)(t._3._3)(t._3._4._3)(t._3._4._4)(t._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._4.ctor)\n                 {case \"RBNode\":\n                    switch (t._4._0.ctor)\n                      {case \"Red\":\n                         switch (t._4._3.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._3._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._3._1)(t._4._3._2)(t._4._1)(t._4._2)(t._3)(t._4._3._3)(t._4._3._4)(t._4._4);}\n                                break;}\n                           switch (t._4._4.ctor)\n                           {case \"RBNode\":\n                              switch (t._4._4._0.ctor)\n                                {case \"Red\":\n                                   return assemble(t._0)(t._1)(t._2)(t._4._1)(t._4._2)(t._4._4._1)(t._4._4._2)(t._3)(t._4._3)(t._4._4._3)(t._4._4._4);}\n                                break;}\n                           break;}\n                      break;}\n                 switch (t._0.ctor)\n                 {case \"BBlack\":\n                    switch (t._4.ctor)\n                      {case \"RBNode\":\n                         switch (t._4._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._4._3.ctor)\n                                {case \"RBNode\":\n                                   switch (t._4._3._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._4._4.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._4._4._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._4._3._1,\n                                                       t._4._3._2,\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3,\n                                                       t._4._3._3),\n                                                       A5(balance,\n                                                       Black,\n                                                       t._4._1,\n                                                       t._4._2,\n                                                       t._4._3._4,\n                                                       redden(t._4._4)));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      switch (t._3.ctor)\n                      {case \"RBNode\":\n                         switch (t._3._0.ctor)\n                           {case \"NBlack\":\n                              switch (t._3._4.ctor)\n                                {case \"RBNode\":\n                                   switch (t._3._4._0.ctor)\n                                     {case \"Black\":\n                                        return function () {\n                                             switch (t._3._3.ctor)\n                                             {case \"RBNode\":\n                                                switch (t._3._3._0.ctor)\n                                                  {case \"Black\":\n                                                     return A5(RBNode,\n                                                       Black,\n                                                       t._3._4._1,\n                                                       t._3._4._2,\n                                                       A5(balance,\n                                                       Black,\n                                                       t._3._1,\n                                                       t._3._2,\n                                                       redden(t._3._3),\n                                                       t._3._4._3),\n                                                       A5(RBNode,\n                                                       Black,\n                                                       t._1,\n                                                       t._2,\n                                                       t._3._4._4,\n                                                       t._4));}\n                                                  break;}\n                                             return t;\n                                          }();}\n                                     break;}\n                                break;}\n                           break;}\n                      break;}\n                 break;}\n            return t;\n         }() : t;\n      }();\n   };\n   var balance = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return balance_node(A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r));\n   });\n   var bubble = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return isBBlack(l) || isBBlack(r) ? A5(balance,\n      moreBlack(c),\n      k,\n      v,\n      lessBlackTree(l),\n      lessBlackTree(r)) : A5(RBNode,\n      c,\n      k,\n      v,\n      l,\n      r);\n   });\n   var remove_max = F5(function (c,\n   k,\n   v,\n   l,\n   r) {\n      return function () {\n         switch (r.ctor)\n         {case \"RBEmpty\": return A3(rem,\n              c,\n              l,\n              r);\n            case \"RBNode\": return A5(bubble,\n              c,\n              k,\n              v,\n              l,\n              A5(remove_max,\n              r._0,\n              r._1,\n              r._2,\n              r._3,\n              r._4));}\n         _U.badCase($moduleName,\n         \"between lines 316 and 321\");\n      }();\n   });\n   var rem = F3(function (c,l,r) {\n      return function () {\n         var _v169 = {ctor: \"_Tuple2\"\n                     ,_0: l\n                     ,_1: r};\n         switch (_v169.ctor)\n         {case \"_Tuple2\":\n            switch (_v169._0.ctor)\n              {case \"RBEmpty\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           switch (c.ctor)\n                           {case \"Black\":\n                              return RBEmpty(LBBlack);\n                              case \"Red\":\n                              return RBEmpty(LBlack);}\n                           _U.badCase($moduleName,\n                           \"between lines 275 and 279\");\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var _v191 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v191.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v191._0.ctor)\n                                {case \"Black\":\n                                   switch (_v191._1.ctor)\n                                     {case \"LBlack\":\n                                        switch (_v191._2.ctor)\n                                          {case \"Red\": return A5(RBNode,\n                                               Black,\n                                               _v169._1._1,\n                                               _v169._1._2,\n                                               _v169._1._3,\n                                               _v169._1._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/LBlack/Red\",\n                           c,\n                           showLColor(_v169._0._0),\n                           showNColor(_v169._1._0));\n                        }();}\n                   break;\n                 case \"RBNode\":\n                 switch (_v169._1.ctor)\n                   {case \"RBEmpty\":\n                      return function () {\n                           var _v195 = {ctor: \"_Tuple3\"\n                                       ,_0: c\n                                       ,_1: _v169._0._0\n                                       ,_2: _v169._1._0};\n                           switch (_v195.ctor)\n                           {case \"_Tuple3\":\n                              switch (_v195._0.ctor)\n                                {case \"Black\":\n                                   switch (_v195._1.ctor)\n                                     {case \"Red\":\n                                        switch (_v195._2.ctor)\n                                          {case \"LBlack\":\n                                             return A5(RBNode,\n                                               Black,\n                                               _v169._0._1,\n                                               _v169._0._2,\n                                               _v169._0._3,\n                                               _v169._0._4);}\n                                          break;}\n                                     break;}\n                                break;}\n                           return A4(reportRemBug,\n                           \"Black/Red/LBlack\",\n                           c,\n                           showNColor(_v169._0._0),\n                           showLColor(_v169._1._0));\n                        }();\n                      case \"RBNode\":\n                      return function () {\n                           var l$ = A5(remove_max,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var r = A5(RBNode,\n                           _v169._1._0,\n                           _v169._1._1,\n                           _v169._1._2,\n                           _v169._1._3,\n                           _v169._1._4);\n                           var l = A5(RBNode,\n                           _v169._0._0,\n                           _v169._0._1,\n                           _v169._0._2,\n                           _v169._0._3,\n                           _v169._0._4);\n                           var $ = max(l),\n                           k = $._0,\n                           v = $._1;\n                           return A5(bubble,c,k,v,l$,r);\n                        }();}\n                   break;}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 273 and 302\");\n      }();\n   });\n   var update = F3(function (k,\n   alter,\n   dict) {\n      return function () {\n         var up = function (dict) {\n            return function () {\n               switch (dict.ctor)\n               {case \"RBEmpty\":\n                  switch (dict._0.ctor)\n                    {case \"LBlack\":\n                       return function () {\n                            var _v206 = alter($Maybe.Nothing);\n                            switch (_v206.ctor)\n                            {case \"Just\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Insert\n                                      ,_1: A5(RBNode,\n                                      Red,\n                                      k,\n                                      _v206._0,\n                                      empty,\n                                      empty)};\n                               case \"Nothing\":\n                               return {ctor: \"_Tuple2\"\n                                      ,_0: Same\n                                      ,_1: empty};}\n                            _U.badCase($moduleName,\n                            \"between lines 187 and 191\");\n                         }();}\n                    break;\n                  case \"RBNode\":\n                  return function () {\n                       var _v208 = A2($Basics.compare,\n                       k,\n                       dict._1);\n                       switch (_v208.ctor)\n                       {case \"EQ\": return function () {\n                               var _v209 = alter($Maybe.Just(dict._2));\n                               switch (_v209.ctor)\n                               {case \"Just\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Same\n                                         ,_1: A5(RBNode,\n                                         dict._0,\n                                         dict._1,\n                                         _v209._0,\n                                         dict._3,\n                                         dict._4)};\n                                  case \"Nothing\":\n                                  return {ctor: \"_Tuple2\"\n                                         ,_0: Remove\n                                         ,_1: A3(rem,\n                                         dict._0,\n                                         dict._3,\n                                         dict._4)};}\n                               _U.badCase($moduleName,\n                               \"between lines 194 and 199\");\n                            }();\n                          case \"GT\": return function () {\n                               var $ = up(dict._4),\n                               flag = $._0,\n                               newRight = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            dict._3,\n                                            newRight)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 208 and 213\");\n                               }();\n                            }();\n                          case \"LT\": return function () {\n                               var $ = up(dict._3),\n                               flag = $._0,\n                               newLeft = $._1;\n                               return function () {\n                                  switch (flag.ctor)\n                                  {case \"Insert\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Insert\n                                            ,_1: A5(balance,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Remove\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Remove\n                                            ,_1: A5(bubble,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};\n                                     case \"Same\":\n                                     return {ctor: \"_Tuple2\"\n                                            ,_0: Same\n                                            ,_1: A5(RBNode,\n                                            dict._0,\n                                            dict._1,\n                                            dict._2,\n                                            newLeft,\n                                            dict._4)};}\n                                  _U.badCase($moduleName,\n                                  \"between lines 201 and 206\");\n                               }();\n                            }();}\n                       _U.badCase($moduleName,\n                       \"between lines 192 and 213\");\n                    }();}\n               _U.badCase($moduleName,\n               \"between lines 185 and 213\");\n            }();\n         };\n         var $ = up(dict),\n         flag = $._0,\n         updatedDict = $._1;\n         return function () {\n            switch (flag.ctor)\n            {case \"Insert\":\n               return ensureBlackRoot(updatedDict);\n               case \"Remove\":\n               return blacken(updatedDict);\n               case \"Same\":\n               return updatedDict;}\n            _U.badCase($moduleName,\n            \"between lines 215 and 221\");\n         }();\n      }();\n   });\n   var insert = F3(function (key,\n   value,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Just(value)),\n      dict);\n   });\n   var singleton = F2(function (key,\n   value) {\n      return A3(insert,\n      key,\n      value,\n      RBEmpty(LBlack));\n   });\n   var union = F2(function (t1,\n   t2) {\n      return A3(foldl,\n      insert,\n      t2,\n      t1);\n   });\n   var fromList = function (assocs) {\n      return A3($List.foldl,\n      F2(function (_v214,dict) {\n         return function () {\n            switch (_v214.ctor)\n            {case \"_Tuple2\":\n               return A3(insert,\n                 _v214._0,\n                 _v214._1,\n                 dict);}\n            _U.badCase($moduleName,\n            \"on line 459, column 38 to 59\");\n         }();\n      }),\n      empty,\n      assocs);\n   };\n   var filter = F2(function (predicate,\n   dictionary) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         dict) {\n            return A2(predicate,\n            key,\n            value) ? A3(insert,\n            key,\n            value,\n            dict) : dict;\n         });\n         return A3(foldl,\n         add,\n         empty,\n         dictionary);\n      }();\n   });\n   var intersect = F2(function (t1,\n   t2) {\n      return A2(filter,\n      F2(function (k,_v218) {\n         return function () {\n            return A2(member,k,t2);\n         }();\n      }),\n      t1);\n   });\n   var partition = F2(function (predicate,\n   dict) {\n      return function () {\n         var add = F3(function (key,\n         value,\n         _v220) {\n            return function () {\n               switch (_v220.ctor)\n               {case \"_Tuple2\":\n                  return A2(predicate,\n                    key,\n                    value) ? {ctor: \"_Tuple2\"\n                             ,_0: A3(insert,\n                             key,\n                             value,\n                             _v220._0)\n                             ,_1: _v220._1} : {ctor: \"_Tuple2\"\n                                              ,_0: _v220._0\n                                              ,_1: A3(insert,\n                                              key,\n                                              value,\n                                              _v220._1)};}\n               _U.badCase($moduleName,\n               \"between lines 480 and 482\");\n            }();\n         });\n         return A3(foldl,\n         add,\n         {ctor: \"_Tuple2\"\n         ,_0: empty\n         ,_1: empty},\n         dict);\n      }();\n   });\n   var remove = F2(function (key,\n   dict) {\n      return A3(update,\n      key,\n      $Basics.always($Maybe.Nothing),\n      dict);\n   });\n   var diff = F2(function (t1,t2) {\n      return A3(foldl,\n      F3(function (k,v,t) {\n         return A2(remove,k,t);\n      }),\n      t1,\n      t2);\n   });\n   _elm.Dict.values = {_op: _op\n                      ,empty: empty\n                      ,singleton: singleton\n                      ,insert: insert\n                      ,update: update\n                      ,get: get\n                      ,remove: remove\n                      ,member: member\n                      ,filter: filter\n                      ,partition: partition\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,map: map\n                      ,union: union\n                      ,intersect: intersect\n                      ,diff: diff\n                      ,keys: keys\n                      ,values: values\n                      ,toList: toList\n                      ,fromList: fromList};\n   return _elm.Dict.values;\n};\nElm.Graphics = Elm.Graphics || {};\nElm.Graphics.Element = Elm.Graphics.Element || {};\nElm.Graphics.Element.make = function (_elm) {\n   \"use strict\";\n   _elm.Graphics = _elm.Graphics || {};\n   _elm.Graphics.Element = _elm.Graphics.Element || {};\n   if (_elm.Graphics.Element.values)\n   return _elm.Graphics.Element.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Graphics.Element\",\n   $Basics = Elm.Basics.make(_elm),\n   $Color = Elm.Color.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Graphics$Element = Elm.Native.Graphics.Element.make(_elm);\n   var DOut = {ctor: \"DOut\"};\n   var outward = DOut;\n   var DIn = {ctor: \"DIn\"};\n   var inward = DIn;\n   var DRight = {ctor: \"DRight\"};\n   var right = DRight;\n   var DLeft = {ctor: \"DLeft\"};\n   var left = DLeft;\n   var DDown = {ctor: \"DDown\"};\n   var down = DDown;\n   var DUp = {ctor: \"DUp\"};\n   var up = DUp;\n   var Position = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,horizontal: a\n             ,vertical: b\n             ,x: c\n             ,y: d};\n   });\n   var Relative = function (a) {\n      return {ctor: \"Relative\"\n             ,_0: a};\n   };\n   var relative = Relative;\n   var Absolute = function (a) {\n      return {ctor: \"Absolute\"\n             ,_0: a};\n   };\n   var absolute = Absolute;\n   var N = {ctor: \"N\"};\n   var bottomLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var Z = {ctor: \"Z\"};\n   var middle = {_: {}\n                ,horizontal: Z\n                ,vertical: Z\n                ,x: Relative(0.5)\n                ,y: Relative(0.5)};\n   var midLeft = _U.replace([[\"horizontal\"\n                             ,N]\n                            ,[\"x\",Absolute(0)]],\n   middle);\n   var middleAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midBottomAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var P = {ctor: \"P\"};\n   var topLeft = {_: {}\n                 ,horizontal: N\n                 ,vertical: P\n                 ,x: Absolute(0)\n                 ,y: Absolute(0)};\n   var bottomLeft = _U.replace([[\"vertical\"\n                                ,N]],\n   topLeft);\n   var topRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   topLeft);\n   var bottomRight = _U.replace([[\"horizontal\"\n                                 ,P]],\n   bottomLeft);\n   var midRight = _U.replace([[\"horizontal\"\n                              ,P]],\n   midLeft);\n   var midTop = _U.replace([[\"vertical\"\n                            ,P]\n                           ,[\"y\",Absolute(0)]],\n   middle);\n   var midBottom = _U.replace([[\"vertical\"\n                               ,N]],\n   midTop);\n   var topLeftAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: N\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var topRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var bottomRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: N\n             ,x: x\n             ,y: y};\n   });\n   var midRightAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: P\n             ,vertical: Z\n             ,x: x\n             ,y: y};\n   });\n   var midTopAt = F2(function (x,\n   y) {\n      return {_: {}\n             ,horizontal: Z\n             ,vertical: P\n             ,x: x\n             ,y: y};\n   });\n   var Tiled = {ctor: \"Tiled\"};\n   var Cropped = function (a) {\n      return {ctor: \"Cropped\"\n             ,_0: a};\n   };\n   var Fitted = {ctor: \"Fitted\"};\n   var Plain = {ctor: \"Plain\"};\n   var Custom = {ctor: \"Custom\"};\n   var RawHtml = {ctor: \"RawHtml\"};\n   var Spacer = {ctor: \"Spacer\"};\n   var Flow = F2(function (a,b) {\n      return {ctor: \"Flow\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Container = F2(function (a,\n   b) {\n      return {ctor: \"Container\"\n             ,_0: a\n             ,_1: b};\n   });\n   var Image = F4(function (a,\n   b,\n   c,\n   d) {\n      return {ctor: \"Image\"\n             ,_0: a\n             ,_1: b\n             ,_2: c\n             ,_3: d};\n   });\n   var link = F2(function (href,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"href\"\n                                    ,href]],\n                p)};\n      }();\n   });\n   var tag = F2(function (name,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"tag\"\n                                    ,name]],\n                p)};\n      }();\n   });\n   var color = F2(function (c,e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"color\"\n                                    ,$Maybe.Just(c)]],\n                p)};\n      }();\n   });\n   var opacity = F2(function (o,\n   e) {\n      return function () {\n         var p = e.props;\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"opacity\"\n                                    ,o]],\n                p)};\n      }();\n   });\n   var height = F2(function (nh,\n   e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v0 = e.element;\n            switch (_v0.ctor)\n            {case \"Image\":\n               return _U.replace([[\"width\"\n                                  ,$Basics.round($Basics.toFloat(_v0._1) / $Basics.toFloat(_v0._2) * $Basics.toFloat(nh))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"height\"\n                                    ,nh]],\n                p)};\n      }();\n   });\n   var width = F2(function (nw,e) {\n      return function () {\n         var p = e.props;\n         var props = function () {\n            var _v5 = e.element;\n            switch (_v5.ctor)\n            {case \"Image\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.round($Basics.toFloat(_v5._2) / $Basics.toFloat(_v5._1) * $Basics.toFloat(nw))]],\n                 p);\n               case \"RawHtml\":\n               return _U.replace([[\"height\"\n                                  ,$Basics.snd(A2($Native$Graphics$Element.htmlHeight,\n                                  nw,\n                                  e.element))]],\n                 p);}\n            return p;\n         }();\n         return {_: {}\n                ,element: e.element\n                ,props: _U.replace([[\"width\"\n                                    ,nw]],\n                props)};\n      }();\n   });\n   var size = F3(function (w,h,e) {\n      return A2(height,\n      h,\n      A2(width,w,e));\n   });\n   var sizeOf = function (e) {\n      return {ctor: \"_Tuple2\"\n             ,_0: e.props.width\n             ,_1: e.props.height};\n   };\n   var heightOf = function (e) {\n      return e.props.height;\n   };\n   var widthOf = function (e) {\n      return e.props.width;\n   };\n   var Element = F2(function (a,\n   b) {\n      return {_: {}\n             ,element: b\n             ,props: a};\n   });\n   var Properties = F9(function (a,\n   b,\n   c,\n   d,\n   e,\n   f,\n   g,\n   h,\n   i) {\n      return {_: {}\n             ,click: i\n             ,color: e\n             ,height: c\n             ,hover: h\n             ,href: f\n             ,id: a\n             ,opacity: d\n             ,tag: g\n             ,width: b};\n   });\n   var newElement = F3(function (w,\n   h,\n   e) {\n      return {_: {}\n             ,element: e\n             ,props: A9(Properties,\n             $Native$Graphics$Element.guid({ctor: \"_Tuple0\"}),\n             w,\n             h,\n             1,\n             $Maybe.Nothing,\n             \"\",\n             \"\",\n             {ctor: \"_Tuple0\"},\n             {ctor: \"_Tuple0\"})};\n   });\n   var image = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Plain,w,h,src));\n   });\n   var fittedImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Fitted,w,h,src));\n   });\n   var croppedImage = F4(function (pos,\n   w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Cropped(pos),w,h,src));\n   });\n   var tiledImage = F3(function (w,\n   h,\n   src) {\n      return A3(newElement,\n      w,\n      h,\n      A4(Image,Tiled,w,h,src));\n   });\n   var container = F4(function (w,\n   h,\n   pos,\n   e) {\n      return A3(newElement,\n      w,\n      h,\n      A2(Container,pos,e));\n   });\n   var spacer = F2(function (w,h) {\n      return A3(newElement,\n      w,\n      h,\n      Spacer);\n   });\n   var empty = A2(spacer,0,0);\n   var flow = F2(function (dir,\n   es) {\n      return function () {\n         var newFlow = F2(function (w,\n         h) {\n            return A3(newElement,\n            w,\n            h,\n            A2(Flow,dir,es));\n         });\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return _U.eq(es,\n         _L.fromArray([])) ? empty : function () {\n            switch (dir.ctor)\n            {case \"DDown\":\n               return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));\n               case \"DIn\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DLeft\": return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DOut\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.maximum(hs));\n               case \"DRight\":\n               return A2(newFlow,\n                 $List.sum(ws),\n                 $List.maximum(hs));\n               case \"DUp\": return A2(newFlow,\n                 $List.maximum(ws),\n                 $List.sum(hs));}\n            _U.badCase($moduleName,\n            \"between lines 280 and 291\");\n         }();\n      }();\n   });\n   var above = F2(function (hi,\n   lo) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var below = F2(function (lo,\n   hi) {\n      return A3(newElement,\n      A2($Basics.max,\n      widthOf(hi),\n      widthOf(lo)),\n      heightOf(hi) + heightOf(lo),\n      A2(Flow,\n      DDown,\n      _L.fromArray([hi,lo])));\n   });\n   var beside = F2(function (lft,\n   rht) {\n      return A3(newElement,\n      widthOf(lft) + widthOf(rht),\n      A2($Basics.max,\n      heightOf(lft),\n      heightOf(rht)),\n      A2(Flow,\n      right,\n      _L.fromArray([lft,rht])));\n   });\n   var layers = function (es) {\n      return function () {\n         var hs = A2($List.map,\n         heightOf,\n         es);\n         var ws = A2($List.map,\n         widthOf,\n         es);\n         return A3(newElement,\n         $List.maximum(ws),\n         $List.maximum(hs),\n         A2(Flow,DOut,es));\n      }();\n   };\n   _elm.Graphics.Element.values = {_op: _op\n                                  ,Properties: Properties\n                                  ,Element: Element\n                                  ,empty: empty\n                                  ,widthOf: widthOf\n                                  ,heightOf: heightOf\n                                  ,sizeOf: sizeOf\n                                  ,width: width\n                                  ,height: height\n                                  ,size: size\n                                  ,opacity: opacity\n                                  ,color: color\n                                  ,tag: tag\n                                  ,link: link\n                                  ,newElement: newElement\n                                  ,Image: Image\n                                  ,Container: Container\n                                  ,Flow: Flow\n                                  ,Spacer: Spacer\n                                  ,RawHtml: RawHtml\n                                  ,Custom: Custom\n                                  ,Plain: Plain\n                                  ,Fitted: Fitted\n                                  ,Cropped: Cropped\n                                  ,Tiled: Tiled\n                                  ,image: image\n                                  ,fittedImage: fittedImage\n                                  ,croppedImage: croppedImage\n                                  ,tiledImage: tiledImage\n                                  ,P: P\n                                  ,Z: Z\n                                  ,N: N\n                                  ,Absolute: Absolute\n                                  ,Relative: Relative\n                                  ,Position: Position\n                                  ,container: container\n                                  ,spacer: spacer\n                                  ,DUp: DUp\n                                  ,DDown: DDown\n                                  ,DLeft: DLeft\n                                  ,DRight: DRight\n                                  ,DIn: DIn\n                                  ,DOut: DOut\n                                  ,flow: flow\n                                  ,above: above\n                                  ,below: below\n                                  ,beside: beside\n                                  ,layers: layers\n                                  ,absolute: absolute\n                                  ,relative: relative\n                                  ,middle: middle\n                                  ,topLeft: topLeft\n                                  ,topRight: topRight\n                                  ,bottomLeft: bottomLeft\n                                  ,bottomRight: bottomRight\n                                  ,midLeft: midLeft\n                                  ,midRight: midRight\n                                  ,midTop: midTop\n                                  ,midBottom: midBottom\n                                  ,middleAt: middleAt\n                                  ,topLeftAt: topLeftAt\n                                  ,topRightAt: topRightAt\n                                  ,bottomLeftAt: bottomLeftAt\n                                  ,bottomRightAt: bottomRightAt\n                                  ,midLeftAt: midLeftAt\n                                  ,midRightAt: midRightAt\n                                  ,midTopAt: midTopAt\n                                  ,midBottomAt: midBottomAt\n                                  ,up: up\n                                  ,down: down\n                                  ,left: left\n                                  ,right: right\n                                  ,inward: inward\n                                  ,outward: outward};\n   return _elm.Graphics.Element.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   if (_elm.Html.values)\n   return _elm.Html.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var fromElement = $VirtualDom.fromElement;\n   var toElement = $VirtualDom.toElement;\n   var text = $VirtualDom.text;\n   var node = $VirtualDom.node;\n   var body = node(\"body\");\n   var section = node(\"section\");\n   var nav = node(\"nav\");\n   var article = node(\"article\");\n   var aside = node(\"aside\");\n   var h1 = node(\"h1\");\n   var h2 = node(\"h2\");\n   var h3 = node(\"h3\");\n   var h4 = node(\"h4\");\n   var h5 = node(\"h5\");\n   var h6 = node(\"h6\");\n   var header = node(\"header\");\n   var footer = node(\"footer\");\n   var address = node(\"address\");\n   var main$ = node(\"main\");\n   var p = node(\"p\");\n   var hr = node(\"hr\");\n   var pre = node(\"pre\");\n   var blockquote = node(\"blockquote\");\n   var ol = node(\"ol\");\n   var ul = node(\"ul\");\n   var li = node(\"li\");\n   var dl = node(\"dl\");\n   var dt = node(\"dt\");\n   var dd = node(\"dd\");\n   var figure = node(\"figure\");\n   var figcaption = node(\"figcaption\");\n   var div = node(\"div\");\n   var a = node(\"a\");\n   var em = node(\"em\");\n   var strong = node(\"strong\");\n   var small = node(\"small\");\n   var s = node(\"s\");\n   var cite = node(\"cite\");\n   var q = node(\"q\");\n   var dfn = node(\"dfn\");\n   var abbr = node(\"abbr\");\n   var time = node(\"time\");\n   var code = node(\"code\");\n   var $var = node(\"var\");\n   var samp = node(\"samp\");\n   var kbd = node(\"kbd\");\n   var sub = node(\"sub\");\n   var sup = node(\"sup\");\n   var i = node(\"i\");\n   var b = node(\"b\");\n   var u = node(\"u\");\n   var mark = node(\"mark\");\n   var ruby = node(\"ruby\");\n   var rt = node(\"rt\");\n   var rp = node(\"rp\");\n   var bdi = node(\"bdi\");\n   var bdo = node(\"bdo\");\n   var span = node(\"span\");\n   var br = node(\"br\");\n   var wbr = node(\"wbr\");\n   var ins = node(\"ins\");\n   var del = node(\"del\");\n   var img = node(\"img\");\n   var iframe = node(\"iframe\");\n   var embed = node(\"embed\");\n   var object = node(\"object\");\n   var param = node(\"param\");\n   var video = node(\"video\");\n   var audio = node(\"audio\");\n   var source = node(\"source\");\n   var track = node(\"track\");\n   var canvas = node(\"canvas\");\n   var svg = node(\"svg\");\n   var math = node(\"math\");\n   var table = node(\"table\");\n   var caption = node(\"caption\");\n   var colgroup = node(\"colgroup\");\n   var col = node(\"col\");\n   var tbody = node(\"tbody\");\n   var thead = node(\"thead\");\n   var tfoot = node(\"tfoot\");\n   var tr = node(\"tr\");\n   var td = node(\"td\");\n   var th = node(\"th\");\n   var form = node(\"form\");\n   var fieldset = node(\"fieldset\");\n   var legend = node(\"legend\");\n   var label = node(\"label\");\n   var input = node(\"input\");\n   var button = node(\"button\");\n   var select = node(\"select\");\n   var datalist = node(\"datalist\");\n   var optgroup = node(\"optgroup\");\n   var option = node(\"option\");\n   var textarea = node(\"textarea\");\n   var keygen = node(\"keygen\");\n   var output = node(\"output\");\n   var progress = node(\"progress\");\n   var meter = node(\"meter\");\n   var details = node(\"details\");\n   var summary = node(\"summary\");\n   var menuitem = node(\"menuitem\");\n   var menu = node(\"menu\");\n   _elm.Html.values = {_op: _op\n                      ,node: node\n                      ,text: text\n                      ,toElement: toElement\n                      ,fromElement: fromElement\n                      ,body: body\n                      ,section: section\n                      ,nav: nav\n                      ,article: article\n                      ,aside: aside\n                      ,h1: h1\n                      ,h2: h2\n                      ,h3: h3\n                      ,h4: h4\n                      ,h5: h5\n                      ,h6: h6\n                      ,header: header\n                      ,footer: footer\n                      ,address: address\n                      ,main$: main$\n                      ,p: p\n                      ,hr: hr\n                      ,pre: pre\n                      ,blockquote: blockquote\n                      ,ol: ol\n                      ,ul: ul\n                      ,li: li\n                      ,dl: dl\n                      ,dt: dt\n                      ,dd: dd\n                      ,figure: figure\n                      ,figcaption: figcaption\n                      ,div: div\n                      ,a: a\n                      ,em: em\n                      ,strong: strong\n                      ,small: small\n                      ,s: s\n                      ,cite: cite\n                      ,q: q\n                      ,dfn: dfn\n                      ,abbr: abbr\n                      ,time: time\n                      ,code: code\n                      ,$var: $var\n                      ,samp: samp\n                      ,kbd: kbd\n                      ,sub: sub\n                      ,sup: sup\n                      ,i: i\n                      ,b: b\n                      ,u: u\n                      ,mark: mark\n                      ,ruby: ruby\n                      ,rt: rt\n                      ,rp: rp\n                      ,bdi: bdi\n                      ,bdo: bdo\n                      ,span: span\n                      ,br: br\n                      ,wbr: wbr\n                      ,ins: ins\n                      ,del: del\n                      ,img: img\n                      ,iframe: iframe\n                      ,embed: embed\n                      ,object: object\n                      ,param: param\n                      ,video: video\n                      ,audio: audio\n                      ,source: source\n                      ,track: track\n                      ,canvas: canvas\n                      ,svg: svg\n                      ,math: math\n                      ,table: table\n                      ,caption: caption\n                      ,colgroup: colgroup\n                      ,col: col\n                      ,tbody: tbody\n                      ,thead: thead\n                      ,tfoot: tfoot\n                      ,tr: tr\n                      ,td: td\n                      ,th: th\n                      ,form: form\n                      ,fieldset: fieldset\n                      ,legend: legend\n                      ,label: label\n                      ,input: input\n                      ,button: button\n                      ,select: select\n                      ,datalist: datalist\n                      ,optgroup: optgroup\n                      ,option: option\n                      ,textarea: textarea\n                      ,keygen: keygen\n                      ,output: output\n                      ,progress: progress\n                      ,meter: meter\n                      ,details: details\n                      ,summary: summary\n                      ,menuitem: menuitem\n                      ,menu: menu};\n   return _elm.Html.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Attributes = Elm.Html.Attributes || {};\nElm.Html.Attributes.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Attributes = _elm.Html.Attributes || {};\n   if (_elm.Html.Attributes.values)\n   return _elm.Html.Attributes.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Attributes\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $String = Elm.String.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var property = $VirtualDom.property;\n   var stringProperty = F2(function (name,\n   string) {\n      return A2(property,\n      name,\n      $Json$Encode.string(string));\n   });\n   var $class = function (name) {\n      return A2(stringProperty,\n      \"className\",\n      name);\n   };\n   var id = function (name) {\n      return A2(stringProperty,\n      \"id\",\n      name);\n   };\n   var title = function (name) {\n      return A2(stringProperty,\n      \"title\",\n      name);\n   };\n   var accesskey = function ($char) {\n      return A2(stringProperty,\n      \"accesskey\",\n      $String.fromList(_L.fromArray([$char])));\n   };\n   var contextmenu = function (value) {\n      return A2(stringProperty,\n      \"contextmenu\",\n      value);\n   };\n   var dir = function (value) {\n      return A2(stringProperty,\n      \"dir\",\n      value);\n   };\n   var draggable = function (value) {\n      return A2(stringProperty,\n      \"draggable\",\n      value);\n   };\n   var dropzone = function (value) {\n      return A2(stringProperty,\n      \"dropzone\",\n      value);\n   };\n   var itemprop = function (value) {\n      return A2(stringProperty,\n      \"itemprop\",\n      value);\n   };\n   var lang = function (value) {\n      return A2(stringProperty,\n      \"lang\",\n      value);\n   };\n   var tabindex = function (n) {\n      return A2(stringProperty,\n      \"tabIndex\",\n      $Basics.toString(n));\n   };\n   var charset = function (value) {\n      return A2(stringProperty,\n      \"charset\",\n      value);\n   };\n   var content = function (value) {\n      return A2(stringProperty,\n      \"content\",\n      value);\n   };\n   var httpEquiv = function (value) {\n      return A2(stringProperty,\n      \"httpEquiv\",\n      value);\n   };\n   var language = function (value) {\n      return A2(stringProperty,\n      \"language\",\n      value);\n   };\n   var src = function (value) {\n      return A2(stringProperty,\n      \"src\",\n      value);\n   };\n   var height = function (value) {\n      return A2(stringProperty,\n      \"height\",\n      $Basics.toString(value));\n   };\n   var width = function (value) {\n      return A2(stringProperty,\n      \"width\",\n      $Basics.toString(value));\n   };\n   var alt = function (value) {\n      return A2(stringProperty,\n      \"alt\",\n      value);\n   };\n   var poster = function (value) {\n      return A2(stringProperty,\n      \"poster\",\n      value);\n   };\n   var kind = function (value) {\n      return A2(stringProperty,\n      \"kind\",\n      value);\n   };\n   var srclang = function (value) {\n      return A2(stringProperty,\n      \"srclang\",\n      value);\n   };\n   var sandbox = function (value) {\n      return A2(stringProperty,\n      \"sandbox\",\n      value);\n   };\n   var srcdoc = function (value) {\n      return A2(stringProperty,\n      \"srcdoc\",\n      value);\n   };\n   var type$ = function (value) {\n      return A2(stringProperty,\n      \"type\",\n      value);\n   };\n   var value = function (value) {\n      return A2(stringProperty,\n      \"value\",\n      value);\n   };\n   var placeholder = function (value) {\n      return A2(stringProperty,\n      \"placeholder\",\n      value);\n   };\n   var accept = function (value) {\n      return A2(stringProperty,\n      \"accept\",\n      value);\n   };\n   var acceptCharset = function (value) {\n      return A2(stringProperty,\n      \"acceptCharset\",\n      value);\n   };\n   var action = function (value) {\n      return A2(stringProperty,\n      \"action\",\n      value);\n   };\n   var autocomplete = function (bool) {\n      return A2(stringProperty,\n      \"autocomplete\",\n      bool ? \"on\" : \"off\");\n   };\n   var autosave = function (value) {\n      return A2(stringProperty,\n      \"autosave\",\n      value);\n   };\n   var enctype = function (value) {\n      return A2(stringProperty,\n      \"enctype\",\n      value);\n   };\n   var formaction = function (value) {\n      return A2(stringProperty,\n      \"formaction\",\n      value);\n   };\n   var list = function (value) {\n      return A2(stringProperty,\n      \"list\",\n      value);\n   };\n   var maxlength = function (n) {\n      return A2(stringProperty,\n      \"maxLength\",\n      $Basics.toString(n));\n   };\n   var method = function (value) {\n      return A2(stringProperty,\n      \"method\",\n      value);\n   };\n   var name = function (value) {\n      return A2(stringProperty,\n      \"name\",\n      value);\n   };\n   var pattern = function (value) {\n      return A2(stringProperty,\n      \"pattern\",\n      value);\n   };\n   var size = function (n) {\n      return A2(stringProperty,\n      \"size\",\n      $Basics.toString(n));\n   };\n   var $for = function (value) {\n      return A2(stringProperty,\n      \"htmlFor\",\n      value);\n   };\n   var form = function (value) {\n      return A2(stringProperty,\n      \"form\",\n      value);\n   };\n   var max = function (value) {\n      return A2(stringProperty,\n      \"max\",\n      value);\n   };\n   var min = function (value) {\n      return A2(stringProperty,\n      \"min\",\n      value);\n   };\n   var step = function (n) {\n      return A2(stringProperty,\n      \"step\",\n      $Basics.toString(n));\n   };\n   var cols = function (n) {\n      return A2(stringProperty,\n      \"cols\",\n      $Basics.toString(n));\n   };\n   var rows = function (n) {\n      return A2(stringProperty,\n      \"rows\",\n      $Basics.toString(n));\n   };\n   var wrap = function (value) {\n      return A2(stringProperty,\n      \"wrap\",\n      value);\n   };\n   var ismap = function (value) {\n      return A2(stringProperty,\n      \"ismap\",\n      value);\n   };\n   var usemap = function (value) {\n      return A2(stringProperty,\n      \"usemap\",\n      value);\n   };\n   var shape = function (value) {\n      return A2(stringProperty,\n      \"shape\",\n      value);\n   };\n   var coords = function (value) {\n      return A2(stringProperty,\n      \"coords\",\n      value);\n   };\n   var challenge = function (value) {\n      return A2(stringProperty,\n      \"challenge\",\n      value);\n   };\n   var keytype = function (value) {\n      return A2(stringProperty,\n      \"keytype\",\n      value);\n   };\n   var align = function (value) {\n      return A2(stringProperty,\n      \"align\",\n      value);\n   };\n   var cite = function (value) {\n      return A2(stringProperty,\n      \"cite\",\n      value);\n   };\n   var href = function (value) {\n      return A2(stringProperty,\n      \"href\",\n      value);\n   };\n   var target = function (value) {\n      return A2(stringProperty,\n      \"target\",\n      value);\n   };\n   var downloadAs = function (value) {\n      return A2(stringProperty,\n      \"download\",\n      value);\n   };\n   var hreflang = function (value) {\n      return A2(stringProperty,\n      \"hreflang\",\n      value);\n   };\n   var media = function (value) {\n      return A2(stringProperty,\n      \"media\",\n      value);\n   };\n   var ping = function (value) {\n      return A2(stringProperty,\n      \"ping\",\n      value);\n   };\n   var rel = function (value) {\n      return A2(stringProperty,\n      \"rel\",\n      value);\n   };\n   var datetime = function (value) {\n      return A2(stringProperty,\n      \"datetime\",\n      value);\n   };\n   var pubdate = function (value) {\n      return A2(stringProperty,\n      \"pubdate\",\n      value);\n   };\n   var start = function (n) {\n      return A2(stringProperty,\n      \"start\",\n      $Basics.toString(n));\n   };\n   var colspan = function (value) {\n      return A2(stringProperty,\n      \"colSpan\",\n      value);\n   };\n   var headers = function (value) {\n      return A2(stringProperty,\n      \"headers\",\n      value);\n   };\n   var rowspan = function (value) {\n      return A2(stringProperty,\n      \"rowSpan\",\n      value);\n   };\n   var scope = function (value) {\n      return A2(stringProperty,\n      \"scope\",\n      value);\n   };\n   var manifest = function (value) {\n      return A2(stringProperty,\n      \"manifest\",\n      value);\n   };\n   var boolProperty = F2(function (name,\n   bool) {\n      return A2(property,\n      name,\n      $Json$Encode.bool(bool));\n   });\n   var hidden = function (bool) {\n      return A2(boolProperty,\n      \"hidden\",\n      bool);\n   };\n   var contenteditable = function (bool) {\n      return A2(boolProperty,\n      \"contentEditable\",\n      bool);\n   };\n   var spellcheck = function (bool) {\n      return A2(boolProperty,\n      \"spellcheck\",\n      bool);\n   };\n   var async = function (bool) {\n      return A2(boolProperty,\n      \"async\",\n      bool);\n   };\n   var defer = function (bool) {\n      return A2(boolProperty,\n      \"defer\",\n      bool);\n   };\n   var scoped = function (bool) {\n      return A2(boolProperty,\n      \"scoped\",\n      bool);\n   };\n   var autoplay = function (bool) {\n      return A2(boolProperty,\n      \"autoplay\",\n      bool);\n   };\n   var controls = function (bool) {\n      return A2(boolProperty,\n      \"controls\",\n      bool);\n   };\n   var loop = function (bool) {\n      return A2(boolProperty,\n      \"loop\",\n      bool);\n   };\n   var preload = function (bool) {\n      return A2(boolProperty,\n      \"preload\",\n      bool);\n   };\n   var $default = function (bool) {\n      return A2(boolProperty,\n      \"default\",\n      bool);\n   };\n   var seamless = function (bool) {\n      return A2(boolProperty,\n      \"seamless\",\n      bool);\n   };\n   var checked = function (bool) {\n      return A2(boolProperty,\n      \"checked\",\n      bool);\n   };\n   var selected = function (bool) {\n      return A2(boolProperty,\n      \"selected\",\n      bool);\n   };\n   var autofocus = function (bool) {\n      return A2(boolProperty,\n      \"autofocus\",\n      bool);\n   };\n   var disabled = function (bool) {\n      return A2(boolProperty,\n      \"disabled\",\n      bool);\n   };\n   var multiple = function (bool) {\n      return A2(boolProperty,\n      \"multiple\",\n      bool);\n   };\n   var novalidate = function (bool) {\n      return A2(boolProperty,\n      \"novalidate\",\n      bool);\n   };\n   var readonly = function (bool) {\n      return A2(boolProperty,\n      \"readonly\",\n      bool);\n   };\n   var required = function (bool) {\n      return A2(boolProperty,\n      \"required\",\n      bool);\n   };\n   var download = function (bool) {\n      return A2(boolProperty,\n      \"download\",\n      bool);\n   };\n   var reversed = function (bool) {\n      return A2(boolProperty,\n      \"reversed\",\n      bool);\n   };\n   var style = function (props) {\n      return property(\"style\")($Json$Encode.object($List.map(function (_v0) {\n         return function () {\n            switch (_v0.ctor)\n            {case \"_Tuple2\":\n               return {ctor: \"_Tuple2\"\n                      ,_0: _v0._0\n                      ,_1: $Json$Encode.string(_v0._1)};}\n            _U.badCase($moduleName,\n            \"on line 136, column 35 to 57\");\n         }();\n      })(props)));\n   };\n   var key = function (k) {\n      return A2(stringProperty,\n      \"key\",\n      k);\n   };\n   _elm.Html.Attributes.values = {_op: _op\n                                 ,key: key\n                                 ,style: style\n                                 ,property: property\n                                 ,stringProperty: stringProperty\n                                 ,boolProperty: boolProperty\n                                 ,$class: $class\n                                 ,hidden: hidden\n                                 ,id: id\n                                 ,title: title\n                                 ,accesskey: accesskey\n                                 ,contenteditable: contenteditable\n                                 ,contextmenu: contextmenu\n                                 ,dir: dir\n                                 ,draggable: draggable\n                                 ,dropzone: dropzone\n                                 ,itemprop: itemprop\n                                 ,lang: lang\n                                 ,spellcheck: spellcheck\n                                 ,tabindex: tabindex\n                                 ,async: async\n                                 ,charset: charset\n                                 ,content: content\n                                 ,defer: defer\n                                 ,httpEquiv: httpEquiv\n                                 ,language: language\n                                 ,scoped: scoped\n                                 ,src: src\n                                 ,height: height\n                                 ,width: width\n                                 ,alt: alt\n                                 ,autoplay: autoplay\n                                 ,controls: controls\n                                 ,loop: loop\n                                 ,preload: preload\n                                 ,poster: poster\n                                 ,$default: $default\n                                 ,kind: kind\n                                 ,srclang: srclang\n                                 ,sandbox: sandbox\n                                 ,seamless: seamless\n                                 ,srcdoc: srcdoc\n                                 ,type$: type$\n                                 ,value: value\n                                 ,checked: checked\n                                 ,placeholder: placeholder\n                                 ,selected: selected\n                                 ,accept: accept\n                                 ,acceptCharset: acceptCharset\n                                 ,action: action\n                                 ,autocomplete: autocomplete\n                                 ,autofocus: autofocus\n                                 ,autosave: autosave\n                                 ,disabled: disabled\n                                 ,enctype: enctype\n                                 ,formaction: formaction\n                                 ,list: list\n                                 ,maxlength: maxlength\n                                 ,method: method\n                                 ,multiple: multiple\n                                 ,name: name\n                                 ,novalidate: novalidate\n                                 ,pattern: pattern\n                                 ,readonly: readonly\n                                 ,required: required\n                                 ,size: size\n                                 ,$for: $for\n                                 ,form: form\n                                 ,max: max\n                                 ,min: min\n                                 ,step: step\n                                 ,cols: cols\n                                 ,rows: rows\n                                 ,wrap: wrap\n                                 ,ismap: ismap\n                                 ,usemap: usemap\n                                 ,shape: shape\n                                 ,coords: coords\n                                 ,challenge: challenge\n                                 ,keytype: keytype\n                                 ,align: align\n                                 ,cite: cite\n                                 ,href: href\n                                 ,target: target\n                                 ,download: download\n                                 ,downloadAs: downloadAs\n                                 ,hreflang: hreflang\n                                 ,media: media\n                                 ,ping: ping\n                                 ,rel: rel\n                                 ,datetime: datetime\n                                 ,pubdate: pubdate\n                                 ,reversed: reversed\n                                 ,start: start\n                                 ,colspan: colspan\n                                 ,headers: headers\n                                 ,rowspan: rowspan\n                                 ,scope: scope\n                                 ,manifest: manifest};\n   return _elm.Html.Attributes.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Events = Elm.Html.Events || {};\nElm.Html.Events.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Events = _elm.Html.Events || {};\n   if (_elm.Html.Events.values)\n   return _elm.Html.Events.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Events\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var keyCode = A2($Json$Decode._op[\":=\"],\n   \"keyCode\",\n   $Json$Decode.$int);\n   var targetChecked = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"checked\"]),\n   $Json$Decode.bool);\n   var targetValue = A2($Json$Decode.at,\n   _L.fromArray([\"target\"\n                ,\"value\"]),\n   $Json$Decode.string);\n   var on = $VirtualDom.on;\n   var messageOn = F2(function (name,\n   msg) {\n      return A3(on,\n      name,\n      $Json$Decode.value,\n      $Basics.always(msg));\n   });\n   var onClick = messageOn(\"click\");\n   var onDoubleClick = messageOn(\"dblclick\");\n   var onMouseMove = messageOn(\"mousemove\");\n   var onMouseDown = messageOn(\"mousedown\");\n   var onMouseUp = messageOn(\"mouseup\");\n   var onMouseEnter = messageOn(\"mouseenter\");\n   var onMouseLeave = messageOn(\"mouseleave\");\n   var onMouseOver = messageOn(\"mouseover\");\n   var onMouseOut = messageOn(\"mouseout\");\n   var onBlur = messageOn(\"blur\");\n   var onFocus = messageOn(\"focus\");\n   var onSubmit = messageOn(\"submit\");\n   var onKey = function (name) {\n      return A2(on,name,keyCode);\n   };\n   var onKeyUp = onKey(\"keyup\");\n   var onKeyDown = onKey(\"keydown\");\n   var onKeyPress = onKey(\"keypress\");\n   _elm.Html.Events.values = {_op: _op\n                             ,on: on\n                             ,targetValue: targetValue\n                             ,targetChecked: targetChecked\n                             ,keyCode: keyCode\n                             ,messageOn: messageOn\n                             ,onClick: onClick\n                             ,onDoubleClick: onDoubleClick\n                             ,onMouseMove: onMouseMove\n                             ,onMouseDown: onMouseDown\n                             ,onMouseUp: onMouseUp\n                             ,onMouseEnter: onMouseEnter\n                             ,onMouseLeave: onMouseLeave\n                             ,onMouseOver: onMouseOver\n                             ,onMouseOut: onMouseOut\n                             ,onKey: onKey\n                             ,onKeyUp: onKeyUp\n                             ,onKeyDown: onKeyDown\n                             ,onKeyPress: onKeyPress\n                             ,onBlur: onBlur\n                             ,onFocus: onFocus\n                             ,onSubmit: onSubmit};\n   return _elm.Html.Events.values;\n};\nElm.Html = Elm.Html || {};\nElm.Html.Lazy = Elm.Html.Lazy || {};\nElm.Html.Lazy.make = function (_elm) {\n   \"use strict\";\n   _elm.Html = _elm.Html || {};\n   _elm.Html.Lazy = _elm.Html.Lazy || {};\n   if (_elm.Html.Lazy.values)\n   return _elm.Html.Lazy.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Html.Lazy\",\n   $Html = Elm.Html.make(_elm),\n   $VirtualDom = Elm.VirtualDom.make(_elm);\n   var lazy3 = $VirtualDom.lazy3;\n   var lazy2 = $VirtualDom.lazy2;\n   var lazy = $VirtualDom.lazy;\n   _elm.Html.Lazy.values = {_op: _op\n                           ,lazy: lazy\n                           ,lazy2: lazy2\n                           ,lazy3: lazy3};\n   return _elm.Html.Lazy.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Decode = Elm.Json.Decode || {};\nElm.Json.Decode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Decode = _elm.Json.Decode || {};\n   if (_elm.Json.Decode.values)\n   return _elm.Json.Decode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Decode\",\n   $Array = Elm.Array.make(_elm),\n   $Dict = Elm.Dict.make(_elm),\n   $Json$Encode = Elm.Json.Encode.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var tuple8 = $Native$Json.decodeTuple8;\n   var tuple7 = $Native$Json.decodeTuple7;\n   var tuple6 = $Native$Json.decodeTuple6;\n   var tuple5 = $Native$Json.decodeTuple5;\n   var tuple4 = $Native$Json.decodeTuple4;\n   var tuple3 = $Native$Json.decodeTuple3;\n   var tuple2 = $Native$Json.decodeTuple2;\n   var tuple1 = $Native$Json.decodeTuple1;\n   var succeed = $Native$Json.succeed;\n   var fail = $Native$Json.fail;\n   var andThen = $Native$Json.andThen;\n   var customDecoder = $Native$Json.customDecoder;\n   var decodeValue = $Native$Json.runDecoderValue;\n   var value = $Native$Json.decodeValue;\n   var maybe = $Native$Json.decodeMaybe;\n   var $null = $Native$Json.decodeNull;\n   var array = $Native$Json.decodeArray;\n   var list = $Native$Json.decodeList;\n   var bool = $Native$Json.decodeBool;\n   var $int = $Native$Json.decodeInt;\n   var $float = $Native$Json.decodeFloat;\n   var string = $Native$Json.decodeString;\n   var oneOf = $Native$Json.oneOf;\n   var keyValuePairs = $Native$Json.decodeKeyValuePairs;\n   var object8 = $Native$Json.decodeObject8;\n   var object7 = $Native$Json.decodeObject7;\n   var object6 = $Native$Json.decodeObject6;\n   var object5 = $Native$Json.decodeObject5;\n   var object4 = $Native$Json.decodeObject4;\n   var object3 = $Native$Json.decodeObject3;\n   var object2 = $Native$Json.decodeObject2;\n   var object1 = $Native$Json.decodeObject1;\n   _op[\":=\"] = $Native$Json.decodeField;\n   var at = F2(function (fields,\n   decoder) {\n      return A3($List.foldr,\n      F2(function (x,y) {\n         return A2(_op[\":=\"],x,y);\n      }),\n      decoder,\n      fields);\n   });\n   var decodeString = $Native$Json.runDecoderString;\n   var map = $Native$Json.decodeObject1;\n   var dict = function (decoder) {\n      return A2(map,\n      $Dict.fromList,\n      keyValuePairs(decoder));\n   };\n   var Decoder = {ctor: \"Decoder\"};\n   _elm.Json.Decode.values = {_op: _op\n                             ,Decoder: Decoder\n                             ,map: map\n                             ,decodeString: decodeString\n                             ,at: at\n                             ,object1: object1\n                             ,object2: object2\n                             ,object3: object3\n                             ,object4: object4\n                             ,object5: object5\n                             ,object6: object6\n                             ,object7: object7\n                             ,object8: object8\n                             ,keyValuePairs: keyValuePairs\n                             ,dict: dict\n                             ,oneOf: oneOf\n                             ,string: string\n                             ,$float: $float\n                             ,$int: $int\n                             ,bool: bool\n                             ,list: list\n                             ,array: array\n                             ,$null: $null\n                             ,maybe: maybe\n                             ,value: value\n                             ,decodeValue: decodeValue\n                             ,customDecoder: customDecoder\n                             ,andThen: andThen\n                             ,fail: fail\n                             ,succeed: succeed\n                             ,tuple1: tuple1\n                             ,tuple2: tuple2\n                             ,tuple3: tuple3\n                             ,tuple4: tuple4\n                             ,tuple5: tuple5\n                             ,tuple6: tuple6\n                             ,tuple7: tuple7\n                             ,tuple8: tuple8};\n   return _elm.Json.Decode.values;\n};\nElm.Json = Elm.Json || {};\nElm.Json.Encode = Elm.Json.Encode || {};\nElm.Json.Encode.make = function (_elm) {\n   \"use strict\";\n   _elm.Json = _elm.Json || {};\n   _elm.Json.Encode = _elm.Json.Encode || {};\n   if (_elm.Json.Encode.values)\n   return _elm.Json.Encode.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Json.Encode\",\n   $Array = Elm.Array.make(_elm),\n   $Native$Json = Elm.Native.Json.make(_elm);\n   var list = $Native$Json.encodeList;\n   var array = $Native$Json.encodeArray;\n   var object = $Native$Json.encodeObject;\n   var $null = $Native$Json.encodeNull;\n   var bool = $Native$Json.identity;\n   var $float = $Native$Json.identity;\n   var $int = $Native$Json.identity;\n   var string = $Native$Json.identity;\n   var encode = $Native$Json.encode;\n   var Value = {ctor: \"Value\"};\n   _elm.Json.Encode.values = {_op: _op\n                             ,Value: Value\n                             ,encode: encode\n                             ,string: string\n                             ,$int: $int\n                             ,$float: $float\n                             ,bool: bool\n                             ,$null: $null\n                             ,object: object\n                             ,array: array\n                             ,list: list};\n   return _elm.Json.Encode.values;\n};\nElm.List = Elm.List || {};\nElm.List.make = function (_elm) {\n   \"use strict\";\n   _elm.List = _elm.List || {};\n   if (_elm.List.values)\n   return _elm.List.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"List\",\n   $Basics = Elm.Basics.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$List = Elm.Native.List.make(_elm);\n   var sortWith = $Native$List.sortWith;\n   var sortBy = $Native$List.sortBy;\n   var sort = $Native$List.sort;\n   var repeat = $Native$List.repeat;\n   var drop = $Native$List.drop;\n   var take = $Native$List.take;\n   var map5 = $Native$List.map5;\n   var map4 = $Native$List.map4;\n   var map3 = $Native$List.map3;\n   var map2 = $Native$List.map2;\n   var append = $Native$List.append;\n   var any = $Native$List.any;\n   var all = $Native$List.all;\n   var reverse = $Native$List.reverse;\n   var length = $Native$List.length;\n   var filter = $Native$List.filter;\n   var scanl1 = $Native$List.scanl1;\n   var scanl = $Native$List.scanl;\n   var foldr1 = $Native$List.foldr1;\n   var foldl1 = $Native$List.foldl1;\n   var maximum = foldl1($Basics.max);\n   var minimum = foldl1($Basics.min);\n   var foldr = $Native$List.foldr;\n   var concat = function (lists) {\n      return A3(foldr,\n      append,\n      _L.fromArray([]),\n      lists);\n   };\n   var foldl = $Native$List.foldl;\n   var sum = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x + y;\n      }),\n      0,\n      numbers);\n   };\n   var product = function (numbers) {\n      return A3(foldl,\n      F2(function (x,y) {\n         return x * y;\n      }),\n      1,\n      numbers);\n   };\n   var indexedMap = F2(function (f,\n   xs) {\n      return A3(map2,\n      f,\n      _L.range(0,length(xs) - 1),\n      xs);\n   });\n   var map = $Native$List.map;\n   var concatMap = F2(function (f,\n   list) {\n      return concat(A2(map,\n      f,\n      list));\n   });\n   var member = $Native$List.member;\n   var isEmpty = function (xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"[]\": return true;}\n         return false;\n      }();\n   };\n   var tail = $Native$List.tail;\n   var head = $Native$List.head;\n   _op[\"::\"] = $Native$List.cons;\n   var maybeCons = F3(function (f,\n   mx,\n   xs) {\n      return function () {\n         var _v1 = f(mx);\n         switch (_v1.ctor)\n         {case \"Just\":\n            return A2(_op[\"::\"],_v1._0,xs);\n            case \"Nothing\": return xs;}\n         _U.badCase($moduleName,\n         \"between lines 162 and 169\");\n      }();\n   });\n   var filterMap = F2(function (f,\n   xs) {\n      return A3(foldr,\n      maybeCons(f),\n      _L.fromArray([]),\n      xs);\n   });\n   var partition = F2(function (pred,\n   list) {\n      return function () {\n         var step = F2(function (x,\n         _v3) {\n            return function () {\n               switch (_v3.ctor)\n               {case \"_Tuple2\":\n                  return pred(x) ? {ctor: \"_Tuple2\"\n                                   ,_0: A2(_op[\"::\"],x,_v3._0)\n                                   ,_1: _v3._1} : {ctor: \"_Tuple2\"\n                                                  ,_0: _v3._0\n                                                  ,_1: A2(_op[\"::\"],x,_v3._1)};}\n               _U.badCase($moduleName,\n               \"between lines 270 and 272\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         list);\n      }();\n   });\n   var unzip = function (pairs) {\n      return function () {\n         var step = F2(function (_v7,\n         _v8) {\n            return function () {\n               switch (_v8.ctor)\n               {case \"_Tuple2\":\n                  return function () {\n                       switch (_v7.ctor)\n                       {case \"_Tuple2\":\n                          return {ctor: \"_Tuple2\"\n                                 ,_0: A2(_op[\"::\"],_v7._0,_v8._0)\n                                 ,_1: A2(_op[\"::\"],\n                                 _v7._1,\n                                 _v8._1)};}\n                       _U.badCase($moduleName,\n                       \"on line 308, column 12 to 28\");\n                    }();}\n               _U.badCase($moduleName,\n               \"on line 308, column 12 to 28\");\n            }();\n         });\n         return A3(foldr,\n         step,\n         {ctor: \"_Tuple2\"\n         ,_0: _L.fromArray([])\n         ,_1: _L.fromArray([])},\n         pairs);\n      }();\n   };\n   var intersperse = F2(function (sep,\n   xs) {\n      return function () {\n         switch (xs.ctor)\n         {case \"::\": return function () {\n                 var step = F2(function (x,\n                 rest) {\n                    return A2(_op[\"::\"],\n                    sep,\n                    A2(_op[\"::\"],x,rest));\n                 });\n                 var spersed = A3(foldr,\n                 step,\n                 _L.fromArray([]),\n                 xs._1);\n                 return A2(_op[\"::\"],\n                 xs._0,\n                 spersed);\n              }();\n            case \"[]\":\n            return _L.fromArray([]);}\n         _U.badCase($moduleName,\n         \"between lines 319 and 330\");\n      }();\n   });\n   _elm.List.values = {_op: _op\n                      ,head: head\n                      ,tail: tail\n                      ,isEmpty: isEmpty\n                      ,member: member\n                      ,map: map\n                      ,indexedMap: indexedMap\n                      ,foldl: foldl\n                      ,foldr: foldr\n                      ,foldl1: foldl1\n                      ,foldr1: foldr1\n                      ,scanl: scanl\n                      ,scanl1: scanl1\n                      ,filter: filter\n                      ,filterMap: filterMap\n                      ,maybeCons: maybeCons\n                      ,length: length\n                      ,reverse: reverse\n                      ,all: all\n                      ,any: any\n                      ,append: append\n                      ,concat: concat\n                      ,concatMap: concatMap\n                      ,sum: sum\n                      ,product: product\n                      ,maximum: maximum\n                      ,minimum: minimum\n                      ,partition: partition\n                      ,map2: map2\n                      ,map3: map3\n                      ,map4: map4\n                      ,map5: map5\n                      ,unzip: unzip\n                      ,intersperse: intersperse\n                      ,take: take\n                      ,drop: drop\n                      ,repeat: repeat\n                      ,sort: sort\n                      ,sortBy: sortBy\n                      ,sortWith: sortWith};\n   return _elm.List.values;\n};\nElm.LocalChannel = Elm.LocalChannel || {};\nElm.LocalChannel.make = function (_elm) {\n   \"use strict\";\n   _elm.LocalChannel = _elm.LocalChannel || {};\n   if (_elm.LocalChannel.values)\n   return _elm.LocalChannel.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"LocalChannel\",\n   $Signal = Elm.Signal.make(_elm);\n   var send = F2(function (_v0,\n   value) {\n      return function () {\n         switch (_v0.ctor)\n         {case \"LocalChannel\":\n            return _v0._0(value);}\n         _U.badCase($moduleName,\n         \"on line 91, column 3 to 22\");\n      }();\n   });\n   var LocalChannel = function (a) {\n      return {ctor: \"LocalChannel\"\n             ,_0: a};\n   };\n   var create = F2(function (generalize,\n   channel) {\n      return LocalChannel(function (v) {\n         return A2($Signal.send,\n         channel,\n         generalize(v));\n      });\n   });\n   var localize = F2(function (generalize,\n   _v3) {\n      return function () {\n         switch (_v3.ctor)\n         {case \"LocalChannel\":\n            return LocalChannel(function (v) {\n                 return _v3._0(generalize(v));\n              });}\n         _U.badCase($moduleName,\n         \"on line 83, column 3 to 41\");\n      }();\n   });\n   _elm.LocalChannel.values = {_op: _op\n                              ,create: create\n                              ,localize: localize\n                              ,send: send};\n   return _elm.LocalChannel.values;\n};\nElm.Maybe = Elm.Maybe || {};\nElm.Maybe.make = function (_elm) {\n   \"use strict\";\n   _elm.Maybe = _elm.Maybe || {};\n   if (_elm.Maybe.values)\n   return _elm.Maybe.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Maybe\";\n   var withDefault = F2(function ($default,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\": return maybe._0;\n            case \"Nothing\":\n            return $default;}\n         _U.badCase($moduleName,\n         \"between lines 45 and 56\");\n      }();\n   });\n   var Nothing = {ctor: \"Nothing\"};\n   var oneOf = function (maybes) {\n      return function () {\n         switch (maybes.ctor)\n         {case \"::\": return function () {\n                 switch (maybes._0.ctor)\n                 {case \"Just\": return maybes._0;\n                    case \"Nothing\":\n                    return oneOf(maybes._1);}\n                 _U.badCase($moduleName,\n                 \"between lines 64 and 73\");\n              }();\n            case \"[]\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 59 and 73\");\n      }();\n   };\n   var andThen = F2(function (maybeValue,\n   callback) {\n      return function () {\n         switch (maybeValue.ctor)\n         {case \"Just\":\n            return callback(maybeValue._0);\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 110 and 112\");\n      }();\n   });\n   var Just = function (a) {\n      return {ctor: \"Just\",_0: a};\n   };\n   var map = F2(function (f,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Just(f(maybe._0));\n            case \"Nothing\": return Nothing;}\n         _U.badCase($moduleName,\n         \"between lines 76 and 107\");\n      }();\n   });\n   _elm.Maybe.values = {_op: _op\n                       ,andThen: andThen\n                       ,map: map\n                       ,withDefault: withDefault\n                       ,oneOf: oneOf\n                       ,Just: Just\n                       ,Nothing: Nothing};\n   return _elm.Maybe.values;\n};\nElm.Native.Array = {};\nElm.Native.Array.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Array = elm.Native.Array || {};\n    if (elm.Native.Array.values) return elm.Native.Array.values;\n    if ('values' in Elm.Native.Array)\n      return elm.Native.Array.values = Elm.Native.Array.values;\n\n    var List = Elm.Native.List.make(elm);\n\n    // A RRB-Tree has two distinct data types.\n    // Leaf -> \"height\"  is always 0\n    //         \"table\"   is an array of elements\n    // Node -> \"height\"  is always greater than 0\n    //         \"table\"   is an array of child nodes\n    //         \"lengths\" is an array of accumulated lengths of the child nodes\n\n    // M is the maximal table size. 32 seems fast. E is the allowed increase\n    // of search steps when concatting to find an index. Lower values will\n    // decrease balancing, but will increase search steps.\n    var M = 32;\n    var E = 2;\n\n    // An empty array.\n    var empty = { ctor:\"_Array\", height:0, table:new Array() };\n\n    function get(i, array) {\n        if (i < 0 || i >= length(array)) {\n            throw new Error(\"Index \" + i + \" is out of range. Check the length of \" +\n                            \"your array first or use getMaybe or getWithDefault.\");\n        }\n        return unsafeGet(i, array);\n    }\n\n    function unsafeGet(i, array) {\n      for (var x = array.height; x > 0; x--) {\n        var slot = i >> (x * 5);\n        while (array.lengths[slot] <= i) {\n          slot++;\n        }\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array = array.table[slot];\n      }\n      return array.table[i];\n    }\n\n    // Sets the value at the index i. Only the nodes leading to i will get\n    // copied and updated.\n    function set(i, item, array) {\n      if (i < 0 || length(array) <= i) {\n        return array;\n      }\n      return unsafeSet(i, item, array);\n    }\n\n    function unsafeSet(i, item, array) {\n      array = nodeCopy(array);\n\n      if (array.height == 0) {\n        array.table[i] = item;\n      } else {\n        var slot = getSlot(i, array);\n        if (slot > 0) {\n          i -= array.lengths[slot - 1];\n        }\n        array.table[slot] = unsafeSet(i, item, array.table[slot]);\n      }\n      return array;\n    }\n\n    function initialize(len, f) {\n      if (len == 0) { return empty; }\n      var h = Math.floor(Math.log(len)/Math.log(M));\n      return initialize_(f, h, 0, len);\n    }\n\n    function initialize_(f, h, from, to) {\n      if (h == 0) {\n        var table = new Array((to - from) % (M + 1));\n        for (var i = 0; i < table.length; i++) {\n          table[i] = f(from + i);\n        }\n        return { ctor:\"_Array\", height:0, table:table };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = initialize_( f, h - 1, from + (i * step)\n                              , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    function fromList(list) {\n      if (list == List.Nil) { return empty; }\n\n      // Allocate M sized blocks (table) and write list elements to it.\n      var table = new Array(M);\n      var nodes = new Array();\n      var i = 0;\n\n      while (list.ctor !== '[]') {\n        table[i] = list._0;\n        list = list._1;\n        i++;\n\n        // table is full, so we can push a leaf containing it into the\n        // next node.\n        if (i == M) {\n          fromListPush({ ctor:\"_Array\", height:0, table:table }\n                      , nodes);\n          table = new Array(M);\n          i = 0;\n        }\n      }\n\n      // Maybe there is something left on the table.\n      if (i > 0) {\n        fromListPush({ ctor:\"_Array\", height:0, table:table.splice(0,i) }\n                    , nodes);\n      }\n\n      // Go through all of the nodes and eventually push them into higher nodes.\n      for (var h = 0; h < nodes.length - 1; h++) {\n        if (nodes[h].table.length > 0) {\n          fromListPush(nodes[h], nodes);\n        }\n      }\n\n      var head = nodes[nodes.length - 1];\n      if (head.height > 0 && head.table.length == 1) {\n        return head.table[0];\n      } else {\n        return head;\n      }\n    }\n\n    // Push a node into a higher node as a child.\n    function fromListPush(toPush, nodes) {\n      var h = toPush.height;\n\n      // Maybe the node on this height does not exist.\n      if (nodes.length == h) {\n        nodes.push({ ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() });\n      }\n\n      nodes[h].table.push(toPush);\n      var len = length(toPush);\n      if (nodes[h].lengths.length > 0) {\n        len += nodes[h].lengths[nodes[h].lengths.length - 1];\n      }\n      nodes[h].lengths.push(len);\n\n      if (nodes[h].table.length == M) {\n        fromListPush(nodes[h], nodes);\n        nodes[h] = { ctor:\"_Array\", height:h + 1\n                                  , table:new Array()\n                                  , lengths:new Array() };\n      }\n    }\n\n    // Pushes an item via push_ to the bottom right of a tree.\n    function push(item, a) {\n      var pushed = push_(item, a);\n      if (pushed !== null) {\n        return pushed;\n      }\n\n      var newTree = create(item, a.height);\n      return siblise(a, newTree);\n    }\n\n    // Recursively tries to push an item to the bottom-right most\n    // tree possible. If there is no space left for the item,\n    // null will be returned.\n    function push_(item, a) {\n      // Handle resursion stop at leaf level.\n      if (a.height == 0) {\n        if (a.table.length < M) {\n          var newA = { ctor:\"_Array\", height:0, table:a.table.slice() };\n          newA.table.push(item);\n          return newA;\n        } else {\n          return null;\n        }\n      }\n\n      // Recursively push\n      var pushed = push_(item, botRight(a));\n\n      // There was space in the bottom right tree, so the slot will\n      // be updated.\n      if (pushed != null) {\n        var newA = nodeCopy(a);\n        newA.table[newA.table.length - 1] = pushed;\n        newA.lengths[newA.lengths.length - 1]++;\n        return newA\n      }\n\n      // When there was no space left, check if there is space left\n      // for a new slot with a tree which contains only the item\n      // at the bottom.\n      if (a.table.length < M) {\n        var newSlot = create(item, a.height - 1);\n        var newA = nodeCopy(a);\n        newA.table.push(newSlot);\n        newA.lengths.push(newA.lengths[newA.lengths.length - 1] + length(newSlot));\n        return newA\n      } else {\n        return null;\n      }\n    }\n\n    // Converts an array into a list of elements.\n    function toList(a) {\n      return toList_(List.Nil, a);\n    }\n\n    function toList_(list, a) {\n      for (var i = a.table.length - 1; i >= 0; i--) {\n        list = a.height == 0 ? List.Cons(a.table[i], list) : toList_(list, a.table[i]);\n      }\n      return list;\n    }\n\n    // Maps a function over the elements of an array.\n    function map(f, a) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? f(a.table[i]) : map(f, a.table[i]);\n      }\n      return newA;\n    }\n\n    // Maps a function over the elements with their index as first argument.\n    function indexedMap(f, a) {\n      return indexedMap_(f, a, 0);\n    }\n\n    function indexedMap_(f, a, from) {\n      var newA = { ctor:\"_Array\", height:a.height, table:new Array(a.table) };\n      if (a.height > 0) { newA.lengths = a.lengths; }\n      for (var i = 0; i < a.table.length; i++) {\n        newA.table[i] = a.height == 0 ? A2(f, from + i, a.table[i])\n                                      : indexedMap_( f, a.table[i]\n                                                   , i == 0 ? 0 : a.lengths[i - 1]);\n      }\n      return newA;\n    }\n\n    function foldl(f, b, a) {\n      if (a.height == 0) {\n        for (var i = 0; i < a.table.length; i++) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = 0; i < a.table.length; i++) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    function foldr(f, b, a) {\n      if (a.height == 0) {\n        for (var i = a.table.length; i--; ) {\n          b = A2(f, a.table[i], b);\n        }\n      } else {\n        for (var i = a.table.length; i--; ) {\n          b = foldl(f, b, a.table[i]);\n        }\n      }\n      return b;\n    }\n\n    // TODO: currently, it slices the right, then the left. This can be\n    // optimized.\n    function slice(from, to, a) {\n      if (from < 0) { from += length(a); }\n      if (to < 0)   { to += length(a); }\n      return sliceLeft(from, sliceRight(to, a));\n    }\n\n    function sliceRight(to, a) {\n      if (to == length(a)) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(0, to);\n        return newA;\n      }\n\n      // Slice the right recursively.\n      var right = getSlot(to, a);\n      var sliced = sliceRight(to - (right > 0 ? a.lengths[right - 1] : 0), a.table[right]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (right == 0) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(0, right)\n                                , lengths:a.lengths.slice(0, right) };\n      if (sliced.table.length > 0) {\n        newA.table[right] = sliced;\n        newA.lengths[right] = length(sliced) + (right > 0 ? newA.lengths[right - 1] : 0);\n      }\n      return newA;\n    }\n\n    function sliceLeft(from, a) {\n      if (from == 0) {\n        return a;\n      }\n\n      // Handle leaf level.\n      if (a.height == 0) {\n        var newA = { ctor:\"_Array\", height:0 };\n        newA.table = a.table.slice(from, a.table.length + 1);\n        return newA;\n      }\n\n      // Slice the left recursively.\n      var left = getSlot(from, a);\n      var sliced = sliceLeft(from - (left > 0 ? a.lengths[left - 1] : 0), a.table[left]);\n\n      // Maybe the a node is not even needed, as sliced contains the whole slice.\n      if (left == a.table.length - 1) {\n        return sliced;\n      }\n\n      // Create new node.\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice(left, a.table.length + 1)\n                                , lengths:new Array(a.table.length - left) };\n      newA.table[0] = sliced;\n      var len = 0;\n      for (var i = 0; i < newA.table.length; i++) {\n        len += length(newA.table[i]);\n        newA.lengths[i] = len;\n      }\n\n      return newA;\n    }\n\n    // Appends two trees.\n    function append(a,b) {\n      if (a.table.length === 0) {\n        return b;\n      }\n      if (b.table.length === 0) {\n        return a;\n      }\n\n      var c = append_(a, b);\n\n      // Check if both nodes can be crunshed together.\n      if (c[0].table.length + c[1].table.length <= M) {\n        if (c[0].table.length === 0) {\n          return c[1];\n        }\n        if (c[1].table.length === 0) {\n          return c[0];\n        }\n\n        // Adjust .table and .lengths\n        c[0].table = c[0].table.concat(c[1].table);\n        if (c[0].height > 0) {\n          var len = length(c[0]);\n          for (var i = 0; i < c[1].lengths.length; i++) {\n            c[1].lengths[i] += len;\n          }\n          c[0].lengths = c[0].lengths.concat(c[1].lengths);\n        }\n\n        return c[0];\n      }\n\n      if (c[0].height > 0) {\n        var toRemove = calcToRemove(a, b);\n        if (toRemove > E) {\n          c = shuffle(c[0], c[1], toRemove);\n        }\n      }\n\n      return siblise(c[0], c[1]);\n    }\n\n    // Returns an array of two nodes; right and left. One node _may_ be empty.\n    function append_(a, b) {\n      if (a.height === 0 && b.height === 0) {\n        return [a, b];\n      }\n\n      if (a.height !== 1 || b.height !== 1) {\n        if (a.height === b.height) {\n          a = nodeCopy(a);\n          b = nodeCopy(b);\n          var appended = append_(botRight(a), botLeft(b));\n\n          insertRight(a, appended[1]);\n          insertLeft(b, appended[0]);\n        } else if (a.height > b.height) {\n          a = nodeCopy(a);\n          var appended = append_(botRight(a), b);\n\n          insertRight(a, appended[0]);\n          b = parentise(appended[1], appended[1].height + 1);\n        } else {\n          b = nodeCopy(b);\n          var appended = append_(a, botLeft(b));\n\n          var left = appended[0].table.length === 0 ? 0 : 1;\n          var right = left === 0 ? 1 : 0;\n          insertLeft(b, appended[left]);\n          a = parentise(appended[right], appended[right].height + 1);\n        }\n      }\n\n      // Check if balancing is needed and return based on that.\n      if (a.table.length === 0 || b.table.length === 0) {\n        return [a,b];\n      }\n\n      var toRemove = calcToRemove(a, b);\n      if (toRemove <= E) {\n        return [a,b];\n      }\n      return shuffle(a, b, toRemove);\n    }\n\n    // Helperfunctions for append_. Replaces a child node at the side of the parent.\n    function insertRight(parent, node) {\n      var index = parent.table.length - 1;\n      parent.table[index] = node;\n      parent.lengths[index] = length(node)\n      parent.lengths[index] += index > 0 ? parent.lengths[index - 1] : 0;\n    }\n\n    function insertLeft(parent, node) {\n      if (node.table.length > 0) {\n        parent.table[0] = node;\n        parent.lengths[0] = length(node);\n\n        var len = length(parent.table[0]);\n        for (var i = 1; i < parent.lengths.length; i++) {\n          len += length(parent.table[i]);\n          parent.lengths[i] = len;\n        }\n      } else {\n        parent.table.shift();\n        for (var i = 1; i < parent.lengths.length; i++) {\n          parent.lengths[i] = parent.lengths[i] - parent.lengths[0];\n        }\n        parent.lengths.shift();\n      }\n    }\n\n    // Returns the extra search steps for E. Refer to the paper.\n    function calcToRemove(a, b) {\n      var subLengths = 0;\n      for (var i = 0; i < a.table.length; i++) {\n        subLengths += a.table[i].table.length;\n      }\n      for (var i = 0; i < b.table.length; i++) {\n        subLengths += b.table[i].table.length;\n      }\n\n      var toRemove = a.table.length + b.table.length\n      return toRemove - (Math.floor((subLengths - 1) / M) + 1);\n    }\n\n    // get2, set2 and saveSlot are helpers for accessing elements over two arrays.\n    function get2(a, b, index) {\n      return index < a.length ? a[index] : b[index - a.length];\n    }\n\n    function set2(a, b, index, value) {\n      if (index < a.length) {\n        a[index] = value;\n      } else {\n        b[index - a.length] = value;\n      }\n    }\n\n    function saveSlot(a, b, index, slot) {\n      set2(a.table, b.table, index, slot);\n\n      var l = (index == 0 || index == a.lengths.length) ?\n                0 : get2(a.lengths, a.lengths, index - 1);\n      set2(a.lengths, b.lengths, index, l + length(slot));\n    }\n\n    // Creates a node or leaf with a given length at their arrays for perfomance.\n    // Is only used by shuffle.\n    function createNode(h, length) {\n      if (length < 0) { length = 0; }\n      var a = { ctor:\"_Array\", height:h, table:new Array(length) };\n      if (h > 0) {\n        a.lengths = new Array(length);\n      }\n      return a;\n    }\n\n    // Returns an array of two balanced nodes.\n    function shuffle(a, b, toRemove) {\n      var newA = createNode(a.height, Math.min(M, a.table.length + b.table.length - toRemove));\n      var newB = createNode(a.height, newA.table.length - (a.table.length + b.table.length - toRemove));\n\n      // Skip the slots with size M. More precise: copy the slot references\n      // to the new node\n      var read = 0;\n      while (get2(a.table, b.table, read).table.length % M == 0) {\n        set2(newA.table, newB.table, read, get2(a.table, b.table, read));\n        set2(newA.lengths, newB.lengths, read, get2(a.lengths, b.lengths, read));\n        read++;\n      }\n\n      // Pulling items from left to right, caching in a slot before writing\n      // it into the new nodes.\n      var write = read;\n      var slot = new createNode(a.height - 1, 0);\n      var from = 0;\n\n      // If the current slot is still containing data, then there will be at\n      // least one more write, so we do not break this loop yet.\n      while (read - write - (slot.table.length > 0 ? 1 : 0) < toRemove) {\n        // Find out the max possible items for copying.\n        var source = get2(a.table, b.table, read);\n        var to = Math.min(M - slot.table.length, source.table.length)\n\n        // Copy and adjust size table.\n        slot.table = slot.table.concat(source.table.slice(from, to));\n        if (slot.height > 0) {\n          var len = slot.lengths.length;\n          for (var i = len; i < len + to - from; i++) {\n            slot.lengths[i] = length(slot.table[i]);\n            slot.lengths[i] += (i > 0 ? slot.lengths[i - 1] : 0);\n          }\n        }\n\n        from += to;\n\n        // Only proceed to next slots[i] if the current one was\n        // fully copied.\n        if (source.table.length <= to) {\n          read++; from = 0;\n        }\n\n        // Only create a new slot if the current one is filled up.\n        if (slot.table.length == M) {\n          saveSlot(newA, newB, write, slot);\n          slot = createNode(a.height - 1,0);\n          write++;\n        }\n      }\n\n      // Cleanup after the loop. Copy the last slot into the new nodes.\n      if (slot.table.length > 0) {\n        saveSlot(newA, newB, write, slot);\n        write++;\n      }\n\n      // Shift the untouched slots to the left\n      while (read < a.table.length + b.table.length ) {\n        saveSlot(newA, newB, write, get2(a.table, b.table, read));\n        read++; write++;\n      }\n\n      return [newA, newB];\n    }\n\n    // Navigation functions\n    function botRight(a) { return a.table[a.table.length - 1]; }\n    function botLeft(a)  { return a.table[0]; }\n\n    // Copies a node for updating. Note that you should not use this if\n    // only updating only one of \"table\" or \"lengths\" for performance reasons.\n    function nodeCopy(a) {\n      var newA = { ctor:\"_Array\", height:a.height\n                                , table:a.table.slice() };\n      if (a.height > 0) { newA.lengths = a.lengths.slice(); }\n      return newA;\n    }\n\n    // Returns how many items are in the tree.\n    function length(array) {\n      if (array.height == 0) {\n        return array.table.length;\n      } else {\n        return array.lengths[array.lengths.length - 1];\n      }\n    }\n\n    // Calculates in which slot of \"table\" the item probably is, then\n    // find the exact slot via forward searching in  \"lengths\". Returns the index.\n    function getSlot(i, a) {\n      var slot = i >> (5 * a.height);\n      while (a.lengths[slot] <= i) {\n        slot++;\n      }\n      return slot;\n    }\n\n    // Recursively creates a tree with a given height containing\n    // only the given item.\n    function create(item, h) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:[item] };\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[create(item, h - 1)]\n                              , lengths:[1] };\n      }\n    }\n\n    // Recursively creates a tree that contains the given tree.\n    function parentise(tree, h) {\n      if (h == tree.height) {\n        return tree;\n      } else {\n        return { ctor:\"_Array\", height:h\n                              , table:[parentise(tree, h - 1)]\n                              , lengths:[length(tree)] };\n      }\n    }\n\n    // Emphasizes blood brotherhood beneath two trees.\n    function siblise(a, b) {\n      return { ctor:\"_Array\", height:a.height + 1\n                            , table:[a, b]\n                            , lengths:[length(a), length(a) + length(b)] };\n    }\n\n    function toJSArray(a) {\n      var jsArray = new Array(length(a));\n      toJSArray_(jsArray, 0, a);\n      return jsArray;\n    }\n\n    function toJSArray_(jsArray, i, a) {\n      for (var t = 0; t < a.table.length; t++) {\n        if (a.height == 0) {\n          jsArray[i + t] = a.table[t];\n        } else {\n          var inc = t == 0 ? 0 : a.lengths[t - 1];\n          toJSArray_(jsArray, i + inc, a.table[t]);\n        }\n      }\n    }\n\n    function fromJSArray(jsArray) {\n      if (jsArray.length == 0) { return empty; }\n      var h = Math.floor(Math.log(jsArray.length) / Math.log(M));\n      return fromJSArray_(jsArray, h, 0, jsArray.length);\n    }\n\n    function fromJSArray_(jsArray, h, from, to) {\n      if (h == 0) {\n        return { ctor:\"_Array\", height:0\n                              , table:jsArray.slice(from, to) };\n      }\n\n      var step = Math.pow(M, h);\n      var table = new Array(Math.ceil((to - from) / step));\n      var lengths = new Array(table.length);\n      for (var i = 0; i < table.length; i++) {\n        table[i] = fromJSArray_( jsArray, h - 1, from + (i * step)\n                               , Math.min(from + ((i + 1) * step), to));\n        lengths[i] = length(table[i]) + (i > 0 ? lengths[i-1] : 0);\n      }\n      return { ctor:\"_Array\", height:h, table:table, lengths:lengths };\n    }\n\n    Elm.Native.Array.values = {\n      empty:empty,\n      fromList:fromList,\n      toList:toList,\n      initialize:F2(initialize),\n      append:F2(append),\n      push:F2(push),\n      slice:F3(slice),\n      get:F2(get),\n      set:F3(set),\n      map:F2(map),\n      indexedMap:F2(indexedMap),\n      foldl:F3(foldl),\n      foldr:F3(foldr),\n      length:length,\n\n      toJSArray:toJSArray,\n      fromJSArray:fromJSArray\n    };\n\n    return elm.Native.Array.values = Elm.Native.Array.values;\n}\n\n\nElm.Native.Basics = {};\nElm.Native.Basics.make = function(elm) {\n  elm.Native = elm.Native || {};\n  elm.Native.Basics = elm.Native.Basics || {};\n  if (elm.Native.Basics.values) return elm.Native.Basics.values;\n\n  var Utils = Elm.Native.Utils.make(elm);\n\n  function div(a, b) {\n      return (a/b)|0;\n  }\n  function rem(a, b) {\n      return a % b;\n  }\n  function mod(a, b) {\n        if (b === 0) {\n            throw new Error(\"Cannot perform mod 0. Division by zero error.\");\n        }\n        var r = a % b;\n        var m = a === 0 ? 0 : (b > 0 ? (a >= 0 ? r : r+b) : -mod(-a,-b));\n\n        return m === b ? 0 : m;\n  }\n  function logBase(base, n) {\n      return Math.log(n) / Math.log(base);\n  }\n  function negate(n) {\n      return -n;\n  }\n  function abs(n) {\n      return n < 0 ? -n : n;\n  }\n\n  function min(a, b) {\n      return Utils.cmp(a,b) < 0 ? a : b;\n  }\n  function max(a, b) {\n      return Utils.cmp(a,b) > 0 ? a : b;\n  }\n  function clamp(lo, hi, n) {\n      return Utils.cmp(n,lo) < 0 ? lo : Utils.cmp(n,hi) > 0 ? hi : n;\n  }\n\n  function xor(a, b) {\n      return a !== b;\n  }\n  function not(b) {\n      return !b;\n  }\n  function isInfinite(n) {\n      return n === Infinity || n === -Infinity\n  }\n\n  function truncate(n) {\n      return n|0;\n  }\n\n  function degrees(d) {\n      return d * Math.PI / 180;\n  }\n  function turns(t) {\n      return 2 * Math.PI * t;\n  }\n  function fromPolar(point) {\n      var r = point._0;\n      var t = point._1;\n      return Utils.Tuple2(r * Math.cos(t), r * Math.sin(t));\n  }\n  function toPolar(point) {\n      var x = point._0;\n      var y = point._1;\n      return Utils.Tuple2(Math.sqrt(x * x + y * y), Math.atan2(y,x));\n  }\n\n  var basics = {\n      div: F2(div),\n      rem: F2(rem),\n      mod: F2(mod),\n\n      pi: Math.PI,\n      e: Math.E,\n      cos: Math.cos,\n      sin: Math.sin,\n      tan: Math.tan,\n      acos: Math.acos,\n      asin: Math.asin,\n      atan: Math.atan,\n      atan2: F2(Math.atan2),\n\n      degrees:  degrees,\n      turns:  turns,\n      fromPolar:  fromPolar,\n      toPolar:  toPolar,\n\n      sqrt: Math.sqrt,\n      logBase: F2(logBase),\n      negate: negate,\n      abs: abs,\n      min: F2(min),\n      max: F2(max),\n      clamp: F3(clamp),\n      compare: Utils.compare,\n\n      xor: F2(xor),\n      not: not,\n\n      truncate: truncate,\n      ceiling: Math.ceil,\n      floor: Math.floor,\n      round: Math.round,\n      toFloat: function(x) { return x; },\n      isNaN: isNaN,\n      isInfinite: isInfinite\n  };\n\n  return elm.Native.Basics.values = basics;\n};\n\nElm.Native.Char = {};\nElm.Native.Char.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Char = elm.Native.Char || {};\n    if (elm.Native.Char.values) return elm.Native.Char.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isBetween(lo,hi) { return function(chr) {\n\tvar c = chr.charCodeAt(0);\n\treturn lo <= c && c <= hi;\n    };\n                              }\n    var isDigit = isBetween('0'.charCodeAt(0),'9'.charCodeAt(0));\n    var chk1 = isBetween('a'.charCodeAt(0),'f'.charCodeAt(0));\n    var chk2 = isBetween('A'.charCodeAt(0),'F'.charCodeAt(0));\n\n    return elm.Native.Char.values = {\n        fromCode : function(c) { return String.fromCharCode(c); },\n        toCode   : function(c) { return c.toUpperCase().charCodeAt(0); },\n        toUpper  : function(c) { return Utils.chr(c.toUpperCase()); },\n        toLower  : function(c) { return Utils.chr(c.toLowerCase()); },\n        toLocaleUpper : function(c) { return Utils.chr(c.toLocaleUpperCase()); },\n        toLocaleLower : function(c) { return Utils.chr(c.toLocaleLowerCase()); },\n        isLower    : isBetween('a'.charCodeAt(0),'z'.charCodeAt(0)),\n        isUpper    : isBetween('A'.charCodeAt(0),'Z'.charCodeAt(0)),\n        isDigit    : isDigit,\n        isOctDigit : isBetween('0'.charCodeAt(0),'7'.charCodeAt(0)),\n        isHexDigit : function(c) { return isDigit(c) || chk1(c) || chk2(c); }\n    };\n};\n\nElm.Native.Color = {};\nElm.Native.Color.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Color = elm.Native.Color || {};\n    if (elm.Native.Color.values) return elm.Native.Color.values;\n\n    function toCss(c) {\n        var format = '';\n        var colors = '';\n        if (c.ctor === 'RGBA') {\n            format = 'rgb';\n            colors = c._0 + ', ' + c._1 + ', ' + c._2;\n        } else {\n            format = 'hsl';\n            colors = (c._0 * 180 / Math.PI) + ', ' +\n                     (c._1 * 100) + '%, ' +\n                     (c._2 * 100) + '%';\n        }\n        if (c._3 === 1) {\n            return format + '(' + colors + ')';\n        } else {\n            return format + 'a(' + colors + ', ' + c._3 + ')';\n        }\n    }\n\n    return elm.Native.Color.values = {\n        toCss:toCss\n    };\n\n};\n\nElm.Native.Debug = {};\nElm.Native.Debug.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Debug = elm.Native.Debug || {};\n    if (elm.Native.Debug.values) return elm.Native.Debug.values;\n    if ('values' in Elm.Native.Debug)\n        return elm.Native.Debug.values = Elm.Native.Debug.values;\n\n    var toString = Elm.Native.Show.make(elm).toString;\n    var replace = Elm.Native.Utils.make(elm).replace;\n\n    function log(tag, value) {\n        var msg = tag + ': ' + toString(value);\n        var process = process || {};\n        if (process.stdout) {\n            process.stdout.write(msg);\n        } else {\n            console.log(msg);\n        }\n        return value;\n    }\n\n    function crash(message) {\n        throw new Error(message);\n    }\n\n    function tracePath(debugId, form) {\n        return replace([[\"debugTracePathId\",debugId]], form);\n    }\n\n    function WatchTracker() {\n        this.frames = [{}];\n        this.clear = function() {\n            this.watches = {};\n        };\n        this.pushFrame = function() {\n            var lastFrame = this.frames[this.frames.length - 1];\n            this.frames.push(lastFrame);\n        }\n        this.notify = function(tag, value) {\n            this.frames[this.frames.length - 1][tag] = value;\n        };\n    }\n    var watchTracker = new WatchTracker();\n\n    function watch(tag, value) {\n        watchTracker.notify(tag, value);\n        return value;\n    }\n\n    function watchSummary(tag, f, value) {\n        watchTracker.notify(tag, f(value));\n        return value;\n    }\n\n    Elm.Native.Debug.values = {\n        crash: crash,\n        tracePath: F2(tracePath),\n        log: F2(log),\n        watch: F2(watch),\n        watchSummary:F3(watchSummary),\n        watchTracker: watchTracker\n    };\n    return elm.Native.Debug.values = Elm.Native.Debug.values;\n};\n\n\n// setup\nElm.Native = Elm.Native || {};\nElm.Native.Graphics = Elm.Native.Graphics || {};\nElm.Native.Graphics.Element = Elm.Native.Graphics.Element || {};\n\n// definition\nElm.Native.Graphics.Element.make = function(localRuntime) {\n    'use strict';\n\n    // attempt to short-circuit\n    if ('values' in Elm.Native.Graphics.Element) {\n        return Elm.Native.Graphics.Element.values;\n    }\n\n    var Color = Elm.Native.Color.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function createNode(elementType) {\n        var node = document.createElement(elementType);\n        node.style.padding = \"0\";\n        node.style.margin = \"0\";\n        return node;\n    }\n\n    function setProps(elem, node) {\n        var props = elem.props;\n\n        var element = elem.element;\n        var width = props.width - (element.adjustWidth || 0);\n        var height = props.height - (element.adjustHeight || 0);\n        node.style.width  = (width |0) + 'px';\n        node.style.height = (height|0) + 'px';\n\n        if (props.opacity !== 1) {\n            node.style.opacity = props.opacity;\n        }\n\n        if (props.color.ctor === 'Just') {\n            node.style.backgroundColor = Color.toCss(props.color._0);\n        }\n\n        if (props.tag !== '') {\n            node.id = props.tag;\n        }\n\n        if (props.hover.ctor !== '_Tuple0') {\n            addHover(node, props.hover);\n        }\n\n        if (props.click.ctor !== '_Tuple0') {\n            addClick(node, props.click);\n        }\n\n        if (props.href !== '') {\n            var anchor = createNode('a');\n            anchor.href = props.href;\n            anchor.style.display = 'block';\n            anchor.style.pointerEvents = 'auto';\n            anchor.appendChild(node);\n            node = anchor;\n        }\n\n        return node;\n    }\n\n    function addClick(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_click_handler = handler;\n        function trigger(ev) {\n            e.elm_click_handler(Utils.Tuple0);\n            ev.stopPropagation();\n        }\n        e.elm_click_trigger = trigger;\n        e.addEventListener('click', trigger);\n    }\n\n    function removeClick(e, handler) {\n        if (e.elm_click_trigger) {\n            e.removeEventListener('click', e.elm_click_trigger);\n            e.elm_click_trigger = null;\n            e.elm_click_handler = null;\n        }\n    }\n\n    function addHover(e, handler) {\n        e.style.pointerEvents = 'auto';\n        e.elm_hover_handler = handler;\n        e.elm_hover_count = 0;\n\n        function over(evt) {\n            if (e.elm_hover_count++ > 0) return;\n            e.elm_hover_handler(true);\n            evt.stopPropagation();\n        }\n        function out(evt) {\n            if (e.contains(evt.toElement || evt.relatedTarget)) return;\n            e.elm_hover_count = 0;\n            e.elm_hover_handler(false);\n            evt.stopPropagation();\n        }\n        e.elm_hover_over = over;\n        e.elm_hover_out = out;\n        e.addEventListener('mouseover', over);\n        e.addEventListener('mouseout', out);\n    }\n\n    function removeHover(e) {\n        e.elm_hover_handler = null;\n        if (e.elm_hover_over) {\n            e.removeEventListener('mouseover', e.elm_hover_over);\n            e.elm_hover_over = null;\n        }\n        if (e.elm_hover_out) {\n            e.removeEventListener('mouseout', e.elm_hover_out);\n            e.elm_hover_out = null;\n        }\n    }\n\n    function image(props, img) {\n        switch (img._0.ctor) {\n        case 'Plain':   return plainImage(img._3);\n        case 'Fitted':  return fittedImage(props.width, props.height, img._3);\n        case 'Cropped': return croppedImage(img,props.width,props.height,img._3);\n        case 'Tiled':   return tiledImage(img._3);\n        }\n    }\n\n    function plainImage(src) {\n        var img = createNode('img');\n        img.src = src;\n        img.name = src;\n        img.style.display = \"block\";\n        return img;\n    }\n\n    function tiledImage(src) {\n        var div = createNode('div');\n        div.style.backgroundImage = 'url(' + src + ')';\n        return div;\n    }\n\n    function fittedImage(w, h, src) {\n        var div = createNode('div');\n        div.style.background = 'url(' + src + ') no-repeat center';\n        div.style.webkitBackgroundSize = 'cover';\n        div.style.MozBackgroundSize = 'cover';\n        div.style.OBackgroundSize = 'cover';\n        div.style.backgroundSize = 'cover';\n        return div;\n    }\n\n    function croppedImage(elem, w, h, src) {\n        var pos = elem._0._0;\n        var e = createNode('div');\n        e.style.overflow = \"hidden\";\n\n        var img = createNode('img');\n        img.onload = function() {\n            var sw = w / elem._1, sh = h / elem._2;\n            img.style.width = ((this.width * sw)|0) + 'px';\n            img.style.height = ((this.height * sh)|0) + 'px';\n            img.style.marginLeft = ((- pos._0 * sw)|0) + 'px';\n            img.style.marginTop = ((- pos._1 * sh)|0) + 'px';\n        };\n        img.src = src;\n        img.name = src;\n        e.appendChild(img);\n        return e;\n    }\n\n    function goOut(node) {\n        node.style.position = 'absolute';\n        return node;\n    }\n    function goDown(node) {\n        return node;\n    }\n    function goRight(node) {\n        node.style.styleFloat = 'left';\n        node.style.cssFloat = 'left';\n        return node;\n    }\n\n    var directionTable = {\n        DUp    : goDown,\n        DDown  : goDown,\n        DLeft  : goRight,\n        DRight : goRight,\n        DIn    : goOut,\n        DOut   : goOut\n    };\n    function needsReversal(dir) {\n        return dir == 'DUp' || dir == 'DLeft' || dir == 'DIn';\n    }\n\n    function flow(dir,elist) {\n        var array = List.toArray(elist);\n        var container = createNode('div');\n        var goDir = directionTable[dir];\n        if (goDir == goOut) {\n            container.style.pointerEvents = 'none';\n        }\n        if (needsReversal(dir)) {\n            array.reverse();\n        }\n        var len = array.length;\n        for (var i = 0; i < len; ++i) {\n            container.appendChild(goDir(render(array[i])));\n        }\n        return container;\n    }\n\n    function toPos(pos) {\n        switch(pos.ctor) {\n        case \"Absolute\": return  pos._0 + \"px\";\n        case \"Relative\": return (pos._0 * 100) + \"%\";\n        }\n    }\n\n    // must clear right, left, top, bottom, and transform\n    // before calling this function\n    function setPos(pos,elem,e) {\n        var element = elem.element;\n        var props = elem.props;\n        var w = props.width + (element.adjustWidth ? element.adjustWidth : 0);\n        var h = props.height + (element.adjustHeight ? element.adjustHeight : 0);\n\n        e.style.position = 'absolute';\n        e.style.margin = 'auto';\n        var transform = '';\n        switch(pos.horizontal.ctor) {\n        case 'P': e.style.right = toPos(pos.x); e.style.removeProperty('left'); break;\n        case 'Z': transform = 'translateX(' + ((-w/2)|0) + 'px) ';\n        case 'N': e.style.left = toPos(pos.x); e.style.removeProperty('right'); break;\n        }\n        switch(pos.vertical.ctor) {\n        case 'N': e.style.bottom = toPos(pos.y); e.style.removeProperty('top'); break;\n        case 'Z': transform += 'translateY(' + ((-h/2)|0) + 'px)';\n        case 'P': e.style.top = toPos(pos.y); e.style.removeProperty('bottom'); break;\n        }\n        if (transform !== '') {\n            addTransform(e.style, transform);\n        }\n        return e;\n    }\n\n    function addTransform(style, transform) {\n        style.transform       = transform;\n        style.msTransform     = transform;\n        style.MozTransform    = transform;\n        style.webkitTransform = transform;\n        style.OTransform      = transform;\n    }\n\n    function container(pos,elem) {\n        var e = render(elem);\n        setPos(pos, elem, e);\n        var div = createNode('div');\n        div.style.position = 'relative';\n        div.style.overflow = 'hidden';\n        div.appendChild(e);\n        return div;\n    }\n\n    function rawHtml(elem) {\n        var html = elem.html;\n        var guid = elem.guid;\n        var align = elem.align;\n\n        var div = createNode('div');\n        div.innerHTML = html;\n        div.style.visibility = \"hidden\";\n        if (align) {\n            div.style.textAlign = align;\n        }\n        div.style.visibility = 'visible';\n        div.style.pointerEvents = 'auto';\n        return div;\n    }\n\n    function render(elem) {\n        return setProps(elem, makeElement(elem));\n    }\n    function makeElement(e) {\n        var elem = e.element;\n        switch(elem.ctor) {\n        case 'Image':     return image(e.props, elem);\n        case 'Flow':      return flow(elem._0.ctor, elem._1);\n        case 'Container': return container(elem._0, elem._1);\n        case 'Spacer':    return createNode('div');\n        case 'RawHtml':   return rawHtml(elem);\n        case 'Custom':    return elem.render(elem.model);\n        }\n    }\n\n    function updateAndReplace(node, curr, next) {\n        var newNode = update(node, curr, next);\n        if (newNode !== node) {\n            node.parentNode.replaceChild(newNode, node);\n        }\n        return newNode;\n    }\n\n    function update(node, curr, next) {\n        var rootNode = node;\n        if (node.tagName === 'A') {\n            node = node.firstChild;\n        }\n        if (curr.props.id === next.props.id) {\n            updateProps(node, curr, next);\n            return rootNode;\n        }\n        if (curr.element.ctor !== next.element.ctor) {\n            return render(next);\n        }\n        var nextE = next.element;\n        var currE = curr.element;\n        switch(nextE.ctor) {\n        case \"Spacer\":\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"RawHtml\":\n            // only markdown blocks have guids, so this must be a text block\n            if (nextE.guid === null) {\n                if(currE.html.valueOf() !== nextE.html.valueOf()) {\n                    node.innerHTML = nextE.html;\n                }\n                updateProps(node, curr, next);\n                return rootNode;\n            }\n            if (nextE.guid !== currE.guid) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Image\":\n            if (nextE._0.ctor === 'Plain') {\n                if (nextE._3 !== currE._3) {\n                    node.src = nextE._3;\n                }\n            } else if (!Utils.eq(nextE,currE) ||\n                       next.props.width !== curr.props.width ||\n                       next.props.height !== curr.props.height) {\n                return render(next);\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Flow\":\n            var arr = List.toArray(nextE._1);\n            for (var i = arr.length; i--; ) {\n                arr[i] = arr[i].element.ctor;\n            }\n            if (nextE._0.ctor !== currE._0.ctor) {\n                return render(next);\n            }\n            var nexts = List.toArray(nextE._1);\n            var kids = node.childNodes;\n            if (nexts.length !== kids.length) {\n                return render(next);\n            }\n            var currs = List.toArray(currE._1);\n            var dir = nextE._0.ctor;\n            var goDir = directionTable[dir];\n            var toReverse = needsReversal(dir);\n            var len = kids.length;\n            for (var i = len; i-- ;) {\n                var subNode = kids[toReverse ? len - i - 1 : i];\n                goDir(updateAndReplace(subNode, currs[i], nexts[i]));\n            }\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Container\":\n            var subNode = node.firstChild;\n            var newSubNode = updateAndReplace(subNode, currE._1, nextE._1);\n            setPos(nextE._0, nextE._1, newSubNode);\n            updateProps(node, curr, next);\n            return rootNode;\n\n        case \"Custom\":\n            if (currE.type === nextE.type) {\n                var updatedNode = nextE.update(node, currE.model, nextE.model);\n                updateProps(updatedNode, curr, next);\n                return updatedNode;\n            } else {\n                return render(next);\n            }\n        }\n    }\n\n    function updateProps(node, curr, next) {\n        var nextProps = next.props;\n        var currProps = curr.props;\n\n        var element = next.element;\n        var width = nextProps.width - (element.adjustWidth || 0);\n        var height = nextProps.height - (element.adjustHeight || 0);\n        if (width !== currProps.width) {\n            node.style.width = (width|0) + 'px';\n        }\n        if (height !== currProps.height) {\n            node.style.height = (height|0) + 'px';\n        }\n\n        if (nextProps.opacity !== currProps.opacity) {\n            node.style.opacity = nextProps.opacity;\n        }\n\n        var nextColor = nextProps.color.ctor === 'Just'\n            ? Color.toCss(nextProps.color._0)\n            : '';\n        if (node.style.backgroundColor !== nextColor) {\n            node.style.backgroundColor = nextColor;\n        }\n\n        if (nextProps.tag !== currProps.tag) {\n            node.id = nextProps.tag;\n        }\n\n        if (nextProps.href !== currProps.href) {\n            if (currProps.href === '') {\n                // add a surrounding href\n                var anchor = createNode('a');\n                anchor.href = nextProps.href;\n                anchor.style.display = 'block';\n                anchor.style.pointerEvents = 'auto';\n\n                node.parentNode.replaceChild(anchor, node);\n                anchor.appendChild(node);\n            } else if (nextProps.href === '') {\n                // remove the surrounding href\n                var anchor = node.parentNode;\n                anchor.parentNode.replaceChild(node, anchor);\n            } else {\n                // just update the link\n                node.parentNode.href = nextProps.href;\n            }\n        }\n\n        // update click and hover handlers\n        var removed = false;\n\n        // update hover handlers\n        if (currProps.hover.ctor === '_Tuple0') {\n            if (nextProps.hover.ctor !== '_Tuple0') {\n                addHover(node, nextProps.hover);\n            }\n        }\n        else {\n            if (nextProps.hover.ctor === '_Tuple0') {\n                removed = true;\n                removeHover(node);\n            }\n            else {\n                node.elm_hover_handler = nextProps.hover;\n            }\n        }\n\n        // update click handlers\n        if (currProps.click.ctor === '_Tuple0') {\n            if (nextProps.click.ctor !== '_Tuple0') {\n                addClick(node, nextProps.click);\n            }\n        }\n        else {\n            if (nextProps.click.ctor === '_Tuple0') {\n                removed = true;\n                removeClick(node);\n            } else {\n                node.elm_click_handler = nextProps.click;\n            }\n        }\n\n        // stop capturing clicks if\n        if (removed\n            && nextProps.hover.ctor === '_Tuple0'\n            && nextProps.click.ctor === '_Tuple0')\n        {\n            node.style.pointerEvents = 'none';\n        }\n    }\n\n\n    function htmlHeight(width, rawHtml) {\n        // create dummy node\n        var temp = document.createElement('div');\n        temp.innerHTML = rawHtml.html;\n        if (width > 0) {\n            temp.style.width = width + \"px\";\n        }\n        temp.style.visibility = \"hidden\";\n        temp.style.styleFloat = \"left\";\n        temp.style.cssFloat   = \"left\";\n\n        document.body.appendChild(temp);\n\n        // get dimensions\n        var style = window.getComputedStyle(temp, null);\n        var w = Math.ceil(style.getPropertyValue(\"width\").slice(0,-2) - 0);\n        var h = Math.ceil(style.getPropertyValue(\"height\").slice(0,-2) - 0);\n        document.body.removeChild(temp);\n        return Utils.Tuple2(w,h);\n    }\n\n\n    return Elm.Native.Graphics.Element.values = {\n        render: render,\n        update: update,\n        updateAndReplace: updateAndReplace,\n\n        createNode: createNode,\n        addTransform: addTransform,\n        htmlHeight: F2(htmlHeight),\n        guid: Utils.guid\n    };\n\n};\n\nElm.Native.Json = {};\nElm.Native.Json.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Json = localRuntime.Native.Json || {};\n    if (localRuntime.Native.Json.values) {\n        return localRuntime.Native.Json.values;\n    }\n\n    var ElmArray = Elm.Native.Array.make(localRuntime);\n    var List = Elm.Native.List.make(localRuntime);\n    var Maybe = Elm.Maybe.make(localRuntime);\n    var Result = Elm.Result.make(localRuntime);\n    var Utils = Elm.Native.Utils.make(localRuntime);\n\n\n    function crash(expected, actual) {\n        throw new Error(\n            'expecting ' + expected + ' but got ' + JSON.stringify(actual)\n        );\n    }\n\n\n    // PRIMITIVE VALUES\n\n    function decodeNull(successValue) {\n        return function(value) {\n            if (value === null) {\n                return successValue;\n            }\n            crash('null', value);\n        };\n    }\n\n\n    function decodeString(value) {\n        if (typeof value === 'string' || value instanceof String) {\n            return value;\n        }\n        crash('a String', value);\n    }\n\n\n    function decodeFloat(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        crash('a Float', value);\n    }\n\n\n    function decodeInt(value) {\n        if (typeof value === 'number' && (value|0) === value) {\n            return value;\n        }\n        crash('an Int', value);\n    }\n\n\n    function decodeBool(value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        crash('a Bool', value);\n    }\n\n\n    // ARRAY\n\n    function decodeArray(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var array = new Array(len);\n                for (var i = len; i-- ; ) {\n                    array[i] = decoder(value[i]);\n                }\n                return ElmArray.fromJSArray(array);\n            }\n            crash('an Array', value);\n        };\n    }\n\n\n    // LIST\n\n    function decodeList(decoder) {\n        return function(value) {\n            if (value instanceof Array) {\n                var len = value.length;\n                var list = List.Nil;\n                for (var i = len; i-- ; ) {\n                    list = List.Cons( decoder(value[i]), list );\n                }\n                return list;\n            }\n            crash('a List', value);\n        };\n    }\n\n\n    // MAYBE\n\n    function decodeMaybe(decoder) {\n        return function(value) {\n            try {\n                return Maybe.Just(decoder(value));\n            } catch(e) {\n                return Maybe.Nothing;\n            }\n        };\n    }\n\n\n    // FIELDS\n\n    function decodeField(field, decoder) {\n        return function(value) {\n            var subValue = value[field];\n            if (subValue !== undefined) {\n                return decoder(subValue);\n            }\n            crash(\"an object with field '\" + field + \"'\", value);\n        };\n    }\n\n\n    // OBJECTS\n\n    function decodeKeyValuePairs(decoder) {\n        return function(value) {\n            var isObject =\n                typeof value === 'object'\n                    && value !== null\n                    && !(value instanceof Array);\n\n            if (isObject) {\n                var keyValuePairs = List.Nil;\n                for (var key in value) {\n                    var elmValue = decoder(value[key]);\n                    var pair = Utils.Tuple2(key, elmValue);\n                    keyValuePairs = List.Cons(pair, keyValuePairs);\n                }\n                return keyValuePairs;\n            }\n\n            crash(\"an object\", value);\n        };\n    }\n\n    function decodeObject1(f, d1) {\n        return function(value) {\n            return f(d1(value));\n        };\n    }\n\n    function decodeObject2(f, d1, d2) {\n        return function(value) {\n            return A2( f, d1(value), d2(value) );\n        };\n    }\n\n    function decodeObject3(f, d1, d2, d3) {\n        return function(value) {\n            return A3( f, d1(value), d2(value), d3(value) );\n        };\n    }\n\n    function decodeObject4(f, d1, d2, d3, d4) {\n        return function(value) {\n            return A4( f, d1(value), d2(value), d3(value), d4(value) );\n        };\n    }\n\n    function decodeObject5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            return A5( f, d1(value), d2(value), d3(value), d4(value), d5(value) );\n        };\n    }\n\n    function decodeObject6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            return A6( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value)\n            );\n        };\n    }\n\n    function decodeObject7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            return A7( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value)\n            );\n        };\n    }\n\n    function decodeObject8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            return A8( f,\n                d1(value),\n                d2(value),\n                d3(value),\n                d4(value),\n                d5(value),\n                d6(value),\n                d7(value),\n                d8(value)\n            );\n        };\n    }\n\n\n    // TUPLES\n\n    function decodeTuple1(f, d1) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 1 ) {\n                crash('a Tuple of length 1', value);\n            }\n            return f( d1(value[0]) );\n        };\n    }\n\n    function decodeTuple2(f, d1, d2) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 2 ) {\n                crash('a Tuple of length 2', value);\n            }\n            return A2( f, d1(value[0]), d2(value[1]) );\n        };\n    }\n\n    function decodeTuple3(f, d1, d2, d3) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 3 ) {\n                crash('a Tuple of length 3', value);\n            }\n            return A3( f, d1(value[0]), d2(value[1]), d3(value[2]) );\n        };\n    }\n\n\n    function decodeTuple4(f, d1, d2, d3, d4) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 4 ) {\n                crash('a Tuple of length 4', value);\n            }\n            return A4( f, d1(value[0]), d2(value[1]), d3(value[2]), d4(value[3]) );\n        };\n    }\n\n\n    function decodeTuple5(f, d1, d2, d3, d4, d5) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 5 ) {\n                crash('a Tuple of length 5', value);\n            }\n            return A5( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4])\n            );\n        };\n    }\n\n\n    function decodeTuple6(f, d1, d2, d3, d4, d5, d6) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 6 ) {\n                crash('a Tuple of length 6', value);\n            }\n            return A6( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5])\n            );\n        };\n    }\n\n    function decodeTuple7(f, d1, d2, d3, d4, d5, d6, d7) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 7 ) {\n                crash('a Tuple of length 7', value);\n            }\n            return A7( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6])\n            );\n        };\n    }\n\n\n    function decodeTuple8(f, d1, d2, d3, d4, d5, d6, d7, d8) {\n        return function(value) {\n            if ( !(value instanceof Array) || value.length !== 8 ) {\n                crash('a Tuple of length 8', value);\n            }\n            return A8( f,\n                d1(value[0]),\n                d2(value[1]),\n                d3(value[2]),\n                d4(value[3]),\n                d5(value[4]),\n                d6(value[5]),\n                d7(value[6]),\n                d8(value[7])\n            );\n        };\n    }\n\n\n    // CUSTOM DECODERS\n\n    function decodeValue(value) {\n        return value;\n    }\n\n    function runDecoderValue(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function customDecoder(decoder, callback) {\n        return function(value) {\n            var result = callback(decoder(value));\n            if (result.ctor === 'Err') {\n                throw new Error('custom decoder failed: ' + result._0);\n            }\n            return result._0;\n        }\n    }\n\n    function andThen(decode, callback) {\n        return function(value) {\n            var result = decode(value);\n            return callback(result)(value);\n        }\n    }\n\n    function fail(msg) {\n        return function(value) {\n            throw new Error(msg);\n        }\n    }\n\n    function succeed(successValue) {\n        return function(value) {\n            return successValue;\n        }\n    }\n\n\n    // ONE OF MANY\n\n    function oneOf(decoders) {\n        return function(value) {\n            var errors = [];\n            var temp = decoders;\n            while (temp.ctor !== '[]') {\n                try {\n                    return temp._0(value);\n                } catch(e) {\n                    errors.push(e.message);\n                }\n                temp = temp._1;\n            }\n            throw new Error('expecting one of the following:\\n    ' + errors.join('\\n    '));\n        }\n    }\n\n    function get(decoder, value) {\n        try {\n            return Result.Ok(decoder(value));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n\n    // ENCODE / DECODE\n\n    function runDecoderString(decoder, string) {\n        try {\n            return Result.Ok(decoder(JSON.parse(string)));\n        } catch(e) {\n            return Result.Err(e.message);\n        }\n    }\n\n    function encode(indentLevel, value) {\n        return JSON.stringify(value, null, indentLevel);\n    }\n\n    function identity(value) {\n        return value;\n    }\n\n    function encodeObject(keyValuePairs) {\n        var obj = {};\n        while (keyValuePairs.ctor !== '[]') {\n            var pair = keyValuePairs._0;\n            obj[pair._0] = pair._1;\n            keyValuePairs = keyValuePairs._1;\n        }\n        return obj;\n    }\n\n    return localRuntime.Native.Json.values = {\n        encode: F2(encode),\n        runDecoderString: F2(runDecoderString),\n        runDecoderValue: F2(runDecoderValue),\n\n        get: F2(get),\n        oneOf: oneOf,\n\n        decodeNull: decodeNull,\n        decodeInt: decodeInt,\n        decodeFloat: decodeFloat,\n        decodeString: decodeString,\n        decodeBool: decodeBool,\n\n        decodeMaybe: decodeMaybe,\n\n        decodeList: decodeList,\n        decodeArray: decodeArray,\n\n        decodeField: F2(decodeField),\n\n        decodeObject1: F2(decodeObject1),\n        decodeObject2: F3(decodeObject2),\n        decodeObject3: F4(decodeObject3),\n        decodeObject4: F5(decodeObject4),\n        decodeObject5: F6(decodeObject5),\n        decodeObject6: F7(decodeObject6),\n        decodeObject7: F8(decodeObject7),\n        decodeObject8: F9(decodeObject8),\n        decodeKeyValuePairs: decodeKeyValuePairs,\n\n        decodeTuple1: F2(decodeTuple1),\n        decodeTuple2: F3(decodeTuple2),\n        decodeTuple3: F4(decodeTuple3),\n        decodeTuple4: F5(decodeTuple4),\n        decodeTuple5: F6(decodeTuple5),\n        decodeTuple6: F7(decodeTuple6),\n        decodeTuple7: F8(decodeTuple7),\n        decodeTuple8: F9(decodeTuple8),\n\n        andThen: F2(andThen),\n        decodeValue: decodeValue,\n        customDecoder: F2(customDecoder),\n        fail: fail,\n        succeed: succeed,\n\n        identity: identity,\n        encodeNull: null,\n        encodeArray: ElmArray.toJSArray,\n        encodeList: List.toArray,\n        encodeObject: encodeObject\n\n    };\n\n};\n\nElm.Native.List = {};\nElm.Native.List.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.List = elm.Native.List || {};\n    if (elm.Native.List.values) return elm.Native.List.values;\n    if ('values' in Elm.Native.List)\n        return elm.Native.List.values = Elm.Native.List.values;\n\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var Nil = Utils.Nil;\n    var Cons = Utils.Cons;\n\n    function throwError(f) {\n        throw new Error(\"Function '\" + f + \"' expects a non-empty list!\");\n    }\n\n    function toArray(xs) {\n        var out = [];\n        while (xs.ctor !== '[]') {\n            out.push(xs._0);\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function fromArray(arr) {\n        var out = Nil;\n        for (var i = arr.length; i--; ) {\n            out = Cons(arr[i], out);\n        }\n        return out;\n    }\n\n    function range(lo,hi) {\n        var lst = Nil;\n        if (lo <= hi) {\n            do { lst = Cons(hi,lst) } while (hi-->lo);\n        }\n        return lst\n    }\n\n    function head(v) {\n        return v.ctor === '[]' ? throwError('head') : v._0;\n    }\n    function tail(v) {\n        return v.ctor === '[]' ? throwError('tail') : v._1;\n    }\n\n    function last(xs) {\n        if (xs.ctor === '[]') { throwError('last'); }\n        var out = xs._0;\n        while (xs.ctor !== '[]') {\n            out = xs._0;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function map(f, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            arr.push(f(xs._0));\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    // f defined similarly for both foldl and foldr (NB: different from Haskell)\n    // ie, foldl : (a -> b -> b) -> b -> [a] -> b\n    function foldl(f, b, xs) {\n        var acc = b;\n        while (xs.ctor !== '[]') {\n            acc = A2(f, xs._0, acc);\n            xs = xs._1;\n        }\n        return acc;\n    }\n\n    function foldr(f, b, xs) {\n        var arr = toArray(xs);\n        var acc = b;\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function foldl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('foldl1') : foldl(f, xs._0, xs._1);\n    }\n\n    function foldr1(f, xs) {\n        if (xs.ctor === '[]') { throwError('foldr1'); }\n        var arr = toArray(xs);\n        var acc = arr.pop();\n        for (var i = arr.length; i--; ) {\n            acc = A2(f, arr[i], acc);\n        }\n        return acc;\n    }\n\n    function scanl(f, b, xs) {\n        var arr = toArray(xs);\n        arr.unshift(b);\n        var len = arr.length;\n        for (var i = 1; i < len; ++i) {\n            arr[i] = A2(f, arr[i], arr[i-1]);\n        }\n        return fromArray(arr);\n    }\n\n    function scanl1(f, xs) {\n        return xs.ctor === '[]' ? throwError('scanl1') : scanl(f, xs._0, xs._1);\n    }\n\n    function filter(pred, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) { arr.push(xs._0); }\n            xs = xs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function length(xs) {\n        var out = 0;\n        while (xs.ctor !== '[]') {\n            out += 1;\n            xs = xs._1;\n        }\n        return out;\n    }\n\n    function member(x, xs) {\n        while (xs.ctor !== '[]') {\n            if (Utils.eq(x,xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function reverse(xs) {\n        return fromArray(toArray(xs).reverse());\n    }\n\n    function append(xs, ys) {\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    function all(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (!pred(xs._0)) return false;\n            xs = xs._1;\n        }\n        return true;\n    }\n\n    function any(pred, xs) {\n        while (xs.ctor !== '[]') {\n            if (pred(xs._0)) return true;\n            xs = xs._1;\n        }\n        return false;\n    }\n\n    function map2(f, xs, ys) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]') {\n            arr.push(A2(f, xs._0, ys._0));\n            xs = xs._1;\n            ys = ys._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map3(f, xs, ys, zs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && ys.ctor !== '[]' && zs.ctor !== '[]') {\n            arr.push(A3(f, xs._0, ys._0, zs._0));\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map4(f, ws, xs, ys, zs) {\n        var arr = [];\n        while (   ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A4(f, ws._0, xs._0, ys._0, zs._0));\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function map5(f, vs, ws, xs, ys, zs) {\n        var arr = [];\n        while (   vs.ctor !== '[]'\n               && ws.ctor !== '[]'\n               && xs.ctor !== '[]'\n               && ys.ctor !== '[]'\n               && zs.ctor !== '[]')\n        {\n            arr.push(A5(f, vs._0, ws._0, xs._0, ys._0, zs._0));\n            vs = vs._1;\n            ws = ws._1;\n            xs = xs._1;\n            ys = ys._1;\n            zs = zs._1;\n        }\n        return fromArray(arr);\n    }\n\n    function sort(xs) {\n        return fromArray(toArray(xs).sort(Utils.cmp));\n    }\n\n    function sortBy(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            return Utils.cmp(f(a), f(b));\n        }));\n    }\n\n    function sortWith(f, xs) {\n        return fromArray(toArray(xs).sort(function(a,b){\n            var ord = f(a)(b).ctor;\n            return ord === 'EQ' ? 0 : ord === 'LT' ? -1 : 1;\n        }));\n    }\n\n    function nth(xs, n) {\n        return toArray(xs)[n];\n    }\n\n    function take(n, xs) {\n        var arr = [];\n        while (xs.ctor !== '[]' && n > 0) {\n            arr.push(xs._0);\n            xs = xs._1;\n            --n;\n        }\n        return fromArray(arr);\n    }\n\n    function drop(n, xs) {\n        while (xs.ctor !== '[]' && n > 0) {\n            xs = xs._1;\n            --n;\n        }\n        return xs;\n    }\n\n    function repeat(n, x) {\n        var arr = [];\n        var pattern = [x];\n        while (n > 0) {\n            if (n & 1) arr = arr.concat(pattern);\n            n >>= 1, pattern = pattern.concat(pattern);\n        }\n        return fromArray(arr);\n    }\n\n\n    Elm.Native.List.values = {\n        Nil:Nil,\n        Cons:Cons,\n        cons:F2(Cons),\n        toArray:toArray,\n        fromArray:fromArray,\n        range:range,\n        append: F2(append),\n\n        head:head,\n        tail:tail,\n        last:last,\n\n        map:F2(map),\n        foldl:F3(foldl),\n        foldr:F3(foldr),\n\n        foldl1:F2(foldl1),\n        foldr1:F2(foldr1),\n        scanl:F3(scanl),\n        scanl1:F2(scanl1),\n        filter:F2(filter),\n        length:length,\n        member:F2(member),\n        reverse:reverse,\n\n        all:F2(all),\n        any:F2(any),\n        map2:F3(map2),\n        map3:F4(map3),\n        map4:F5(map4),\n        map5:F6(map5),\n        sort:sort,\n        sortBy:F2(sortBy),\n        sortWith:F2(sortWith),\n        nth:F2(nth),\n        take:F2(take),\n        drop:F2(drop),\n        repeat:F2(repeat)\n    };\n    return elm.Native.List.values = Elm.Native.List.values;\n\n};\n\nElm.Native.Ports = {};\nElm.Native.Ports.make = function(localRuntime) {\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Ports = localRuntime.Native.Ports || {};\n    if (localRuntime.Native.Ports.values) {\n        return localRuntime.Native.Ports.values;\n    }\n\n    var Signal;\n\n    function incomingSignal(converter) {\n        converter.isSignal = true;\n        return converter;\n    }\n\n    function outgoingSignal(converter) {\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        return function(signal) {\n            var subscribers = []\n            function subscribe(handler) {\n                subscribers.push(handler);\n            }\n            function unsubscribe(handler) {\n                subscribers.pop(subscribers.indexOf(handler));\n            }\n            A2( Signal.map, function(value) {\n                var val = converter(value);\n                var len = subscribers.length;\n                for (var i = 0; i < len; ++i) {\n                    subscribers[i](val);\n                }\n            }, signal);\n            return { subscribe:subscribe, unsubscribe:unsubscribe };\n        }\n    }\n\n    function portIn(name, converter) {\n        var jsValue = localRuntime.ports.incoming[name];\n        if (jsValue === undefined) {\n            throw new Error(\"Initialization Error: port '\" + name +\n                            \"' was not given an input!\");\n        }\n        localRuntime.ports.uses[name] += 1;\n        try {\n            var elmValue = converter(jsValue);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n\n        // just return a static value if it is not a signal\n        if (!converter.isSignal) {\n            return elmValue;\n        }\n\n        // create a signal if necessary\n        if (!Signal) {\n            Signal = Elm.Signal.make(localRuntime);\n        }\n        var signal = Signal.constant(elmValue);\n        function send(jsValue) {\n            try {\n                var elmValue = converter(jsValue);\n            } catch(e) {\n                throw new Error(\"Error sending to port '\" + name + \"': \\n\" + e.message);\n            }\n            setTimeout(function() {\n                localRuntime.notify(signal.id, elmValue);\n            }, 0);\n        }\n        localRuntime.ports.outgoing[name] = { send:send };\n        return signal;\n    }\n\n    function portOut(name, converter, value) {\n        try {\n            localRuntime.ports.outgoing[name] = converter(value);\n        } catch(e) {\n            throw new Error(\"Initialization Error on port '\" + name + \"': \\n\" + e.message);\n        }\n        return value;\n    }\n\n    return localRuntime.Native.Ports.values = {\n        incomingSignal: incomingSignal,\n        outgoingSignal: outgoingSignal,\n        portOut: portOut,\n        portIn: portIn\n    };\n};\n\n\n\nif (!Elm.fullscreen) {\n\n    (function() {\n        'use strict';\n\n        var Display = { FULLSCREEN: 0, COMPONENT: 1, NONE: 2 };\n\n        Elm.fullscreen = function(module, ports) {\n            var container = document.createElement('div');\n            document.body.appendChild(container);\n            return init(Display.FULLSCREEN, container, module, ports || {});\n        };\n\n        Elm.embed = function(module, container, ports) {\n            var tag = container.tagName;\n            if (tag !== 'DIV') {\n                throw new Error('Elm.node must be given a DIV, not a ' + tag + '.');\n            } else if (container.hasChildNodes()) {\n                throw new Error('Elm.node must be given an empty DIV. No children allowed!');\n            }\n            return init(Display.COMPONENT, container, module, ports || {});\n        };\n\n        Elm.worker = function(module, ports) {\n            return init(Display.NONE, {}, module, ports || {});\n        };\n\n        function init(display, container, module, ports, moduleToReplace) {\n            // defining state needed for an instance of the Elm RTS\n            var inputs = [];\n\n            /* OFFSET\n             * Elm's time traveling debugger lets you interrupt the smooth flow of time\n             * by pausing and continuing program execution. To ensure the user sees a\n             * program that moves smoothly through the pause/continue time gap,\n             * we need to adjsut the value of Date.now().\n             */\n            var timer = function() {\n                var inducedDelay = 0;\n\n                var now = function() {\n                    return Date.now() - inducedDelay;\n                };\n\n                var addDelay = function(d) {\n                    inducedDelay += d;\n                    return inducedDelay;\n                };\n\n                return {\n                    now : now,\n                    addDelay : addDelay\n                }\n            }();\n\n            var updateInProgress = false;\n            function notify(id, v) {\n                if (updateInProgress) {\n                    throw new Error(\n                        'The notify function has been called synchronously!\\n' +\n                        'This can lead to frames being dropped.\\n' +\n                        'Definitely report this to <https://github.com/elm-lang/Elm/issues>\\n');\n                }\n                updateInProgress = true;\n                var timestep = timer.now();\n                for (var i = inputs.length; i--; ) {\n                    inputs[i].recv(timestep, id, v);\n                }\n                updateInProgress = false;\n            }\n            function setTimeout(func, delay) {\n                window.setTimeout(func, delay);\n            }\n\n            var listeners = [];\n            function addListener(relevantInputs, domNode, eventName, func) {\n                domNode.addEventListener(eventName, func);\n                var listener = {\n                    relevantInputs: relevantInputs,\n                    domNode: domNode,\n                    eventName: eventName,\n                    func: func\n                };\n                listeners.push(listener);\n            }\n\n            var portUses = {}\n            for (var key in ports) {\n                portUses[key] = 0;\n            }\n            // create the actual RTS. Any impure modules will attach themselves to this\n            // object. This permits many Elm programs to be embedded per document.\n            var elm = {\n                notify: notify,\n                setTimeout: setTimeout,\n                node: container,\n                addListener: addListener,\n                inputs: inputs,\n                timer: timer,\n                ports: { incoming:ports, outgoing:{}, uses:portUses },\n\n                isFullscreen: function() { return display === Display.FULLSCREEN; },\n                isEmbed: function() { return display === Display.COMPONENT; },\n                isWorker: function() { return display === Display.NONE; }\n            };\n\n            function swap(newModule) {\n                removeListeners(listeners);\n                var div = document.createElement('div');\n                var newElm = init(display, div, newModule, ports, elm);\n                inputs = [];\n                // elm.swap = newElm.swap;\n                return newElm;\n            }\n\n            function dispose() {\n                removeListeners(listeners);\n                inputs = [];\n            }\n\n            var Module = {};\n            try {\n                Module = module.make(elm);\n                checkPorts(elm);\n            } catch(e) {\n                var code = document.createElement('code');\n\n                var lines = e.message.split('\\n');\n                code.appendChild(document.createTextNode(lines[0]));\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createElement('br'));\n                for (var i = 1; i < lines.length; ++i) {\n                    code.appendChild(document.createTextNode('\\u00A0 \\u00A0 ' + lines[i]));\n                    code.appendChild(document.createElement('br'));\n                }\n                code.appendChild(document.createElement('br'));\n                code.appendChild(document.createTextNode(\"Open the developer console for more details.\"));\n\n                container.appendChild(code);\n                throw e;\n            }\n            inputs = filterDeadInputs(inputs);\n            filterListeners(inputs, listeners);\n            addReceivers(elm.ports.outgoing);\n            if (display !== Display.NONE) {\n                var graphicsNode = initGraphics(elm, Module);\n            }\n            if (typeof moduleToReplace !== 'undefined') {\n                hotSwap(moduleToReplace, elm);\n\n                // rerender scene if graphics are enabled.\n                if (typeof graphicsNode !== 'undefined') {\n                    graphicsNode.recv(0, true, 0);\n                }\n            }\n\n            return {\n                swap:swap,\n                ports:elm.ports.outgoing,\n                dispose:dispose\n            };\n        };\n\n        function checkPorts(elm) {\n            var portUses = elm.ports.uses;\n            for (var key in portUses) {\n                var uses = portUses[key]\n                if (uses === 0) {\n                    throw new Error(\n                        \"Initialization Error: provided port '\" + key +\n                        \"' to a module that does not take it as in input.\\n\" +\n                        \"Remove '\" + key + \"' from the module initialization code.\");\n                } else if (uses > 1) {\n                    throw new Error(\n                        \"Initialization Error: port '\" + key +\n                        \"' has been declared multiple times in the Elm code.\\n\" +\n                        \"Remove declarations until there is exactly one.\");\n                }\n            }\n        }\n\n\n        //// FILTER SIGNALS ////\n\n        // TODO: move this code into the signal module and create a function\n        // Signal.initializeGraph that actually instantiates everything.\n\n        function filterListeners(inputs, listeners) {\n            loop:\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                for (var j = inputs.length; j--; ) {\n                    if (listener.relevantInputs.indexOf(inputs[j].id) >= 0) {\n                        continue loop;\n                    }\n                }\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        function removeListeners(listeners) {\n            for (var i = listeners.length; i--; ) {\n                var listener = listeners[i];\n                listener.domNode.removeEventListener(listener.eventName, listener.func);\n            }\n        }\n\n        // add receivers for built-in ports if they are defined\n        function addReceivers(ports) {\n            if ('log' in ports) {\n                ports.log.subscribe(function(v) { console.log(v) });\n            }\n            if ('stdout' in ports) {\n                var process = process || {};\n                var handler = process.stdout\n                    ? function(v) { process.stdout.write(v); }\n                    : function(v) { console.log(v); };\n                ports.stdout.subscribe(handler);\n            }\n            if ('stderr' in ports) {\n                var process = process || {};\n                var handler = process.stderr\n                    ? function(v) { process.stderr.write(v); }\n                    : function(v) { console.log('Error:' + v); };\n                ports.stderr.subscribe(handler);\n            }\n            if ('title' in ports) {\n                if (typeof ports.title === 'string') {\n                    document.title = ports.title;\n                } else {\n                    ports.title.subscribe(function(v) { document.title = v; });\n                }\n            }\n            if ('redirect' in ports) {\n                ports.redirect.subscribe(function(v) {\n                    if (v.length > 0) window.location = v;\n                });\n            }\n            if ('favicon' in ports) {\n                if (typeof ports.favicon === 'string') {\n                    changeFavicon(ports.favicon);\n                } else {\n                    ports.favicon.subscribe(changeFavicon);\n                }\n            }\n            function changeFavicon(src) {\n                var link = document.createElement('link');\n                var oldLink = document.getElementById('elm-favicon');\n                link.id = 'elm-favicon';\n                link.rel = 'shortcut icon';\n                link.href = src;\n                if (oldLink) {\n                    document.head.removeChild(oldLink);\n                }\n                document.head.appendChild(link);\n            }\n        }\n\n\n        function filterDeadInputs(inputs) {\n            var temp = [];\n            for (var i = inputs.length; i--; ) {\n                if (isAlive(inputs[i])) temp.push(inputs[i]);\n            }\n            return temp;\n        }\n\n\n        function isAlive(input) {\n            if (!('defaultNumberOfKids' in input)) return true;\n            var len = input.kids.length;\n            if (len === 0) return false;\n            if (len > input.defaultNumberOfKids) return true;\n            var alive = false;\n            for (var i = len; i--; ) {\n                alive = alive || isAlive(input.kids[i]);\n            }\n            return alive;\n        }\n\n\n        ////  RENDERING  ////\n\n        function initGraphics(elm, Module) {\n            if (!('main' in Module)) {\n                throw new Error(\"'main' is missing! What do I display?!\");\n            }\n\n            var signalGraph = Module.main;\n\n            // make sure the signal graph is actually a signal & extract the visual model\n            var Signal = Elm.Signal.make(elm);\n            if (!('recv' in signalGraph)) {\n                signalGraph = Signal.constant(signalGraph);\n            }\n            var initialScene = signalGraph.value;\n\n            // Add the initialScene to the DOM\n            var Element = Elm.Native.Graphics.Element.make(elm);\n            elm.node.appendChild(Element.render(initialScene));\n\n            var _requestAnimationFrame =\n                typeof requestAnimationFrame !== 'undefined'\n                    ? requestAnimationFrame\n                    : function(cb) { setTimeout(cb, 1000/60); }\n                    ;\n\n            // domUpdate is called whenever the main Signal changes.\n            //\n            // domUpdate and drawCallback implement a small state machine in order\n            // to schedule only 1 draw per animation frame. This enforces that\n            // once draw has been called, it will not be called again until the\n            // next frame.\n            //\n            // drawCallback is scheduled whenever\n            // 1. The state transitions from PENDING_REQUEST to EXTRA_REQUEST, or\n            // 2. The state transitions from NO_REQUEST to PENDING_REQUEST\n            //\n            // Invariants:\n            // 1. In the NO_REQUEST state, there is never a scheduled drawCallback.\n            // 2. In the PENDING_REQUEST and EXTRA_REQUEST states, there is always exactly 1\n            //    scheduled drawCallback.\n            var NO_REQUEST = 0;\n            var PENDING_REQUEST = 1;\n            var EXTRA_REQUEST = 2;\n            var state = NO_REQUEST;\n            var savedScene = initialScene;\n            var scheduledScene = initialScene;\n\n            function domUpdate(newScene) {\n                scheduledScene = newScene;\n\n                switch (state) {\n                    case NO_REQUEST:\n                        _requestAnimationFrame(drawCallback);\n                        state = PENDING_REQUEST;\n                        return;\n                    case PENDING_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                    case EXTRA_REQUEST:\n                        state = PENDING_REQUEST;\n                        return;\n                }\n            }\n\n            function drawCallback() {\n                switch (state) {\n                    case NO_REQUEST:\n                        // This state should not be possible. How can there be no\n                        // request, yet somehow we are actively fulfilling a\n                        // request?\n                        throw new Error(\n                            \"Unexpected draw callback.\\n\" +\n                            \"Please report this to <https://github.com/elm-lang/core/issues>.\"\n                        );\n\n                    case PENDING_REQUEST:\n                        // At this point, we do not *know* that another frame is\n                        // needed, but we make an extra request to rAF just in\n                        // case. It's possible to drop a frame if rAF is called\n                        // too late, so we just do it preemptively.\n                        _requestAnimationFrame(drawCallback);\n                        state = EXTRA_REQUEST;\n\n                        // There's also stuff we definitely need to draw.\n                        draw();\n                        return;\n\n                    case EXTRA_REQUEST:\n                        // Turns out the extra request was not needed, so we will\n                        // stop calling rAF. No reason to call it all the time if\n                        // no one needs it.\n                        state = NO_REQUEST;\n                        return;\n                }\n            }\n\n            function draw() {\n                Element.updateAndReplace(elm.node.firstChild, savedScene, scheduledScene);\n                if (elm.Native.Window) {\n                    elm.Native.Window.values.resizeIfNeeded();\n                }\n                savedScene = scheduledScene;\n            }\n\n            var renderer = A2(Signal.map, domUpdate, signalGraph);\n\n            // must check for resize after 'renderer' is created so\n            // that changes show up.\n            if (elm.Native.Window) {\n                elm.Native.Window.values.resizeIfNeeded();\n            }\n\n            return renderer;\n        }\n\n        //// HOT SWAPPING ////\n\n        // Returns boolean indicating if the swap was successful.\n        // Requires that the two signal graphs have exactly the same\n        // structure.\n        function hotSwap(from, to) {\n            function similar(nodeOld,nodeNew) {\n                var idOkay = nodeOld.id === nodeNew.id;\n                var lengthOkay = nodeOld.kids.length === nodeNew.kids.length;\n                return idOkay && lengthOkay;\n            }\n            function swap(nodeOld,nodeNew) {\n                nodeNew.value = nodeOld.value;\n                return true;\n            }\n            var canSwap = depthFirstTraversals(similar, from.inputs, to.inputs);\n            if (canSwap) {\n                depthFirstTraversals(swap, from.inputs, to.inputs);\n            }\n            from.node.parentNode.replaceChild(to.node, from.node);\n\n            return canSwap;\n        }\n\n        // Returns false if the node operation f ever fails.\n        function depthFirstTraversals(f, queueOld, queueNew) {\n            if (queueOld.length !== queueNew.length) return false;\n            queueOld = queueOld.slice(0);\n            queueNew = queueNew.slice(0);\n\n            var seen = [];\n            while (queueOld.length > 0 && queueNew.length > 0) {\n                var nodeOld = queueOld.pop();\n                var nodeNew = queueNew.pop();\n                if (seen.indexOf(nodeOld.id) < 0) {\n                    if (!f(nodeOld, nodeNew)) return false;\n                    queueOld = queueOld.concat(nodeOld.kids);\n                    queueNew = queueNew.concat(nodeNew.kids);\n                    seen.push(nodeOld.id);\n                }\n            }\n            return true;\n        }\n    }());\n\n    function F2(fun) {\n        function wrapper(a) { return function(b) { return fun(a,b) } }\n        wrapper.arity = 2;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F3(fun) {\n        function wrapper(a) {\n            return function(b) { return function(c) { return fun(a,b,c) }}\n        }\n        wrapper.arity = 3;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F4(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return fun(a,b,c,d) }}}\n        }\n        wrapper.arity = 4;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F5(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return fun(a,b,c,d,e) }}}}\n        }\n        wrapper.arity = 5;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F6(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return fun(a,b,c,d,e,f) }}}}}\n        }\n        wrapper.arity = 6;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F7(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return fun(a,b,c,d,e,f,g) }}}}}}\n        }\n        wrapper.arity = 7;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F8(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) {\n            return fun(a,b,c,d,e,f,g,h)}}}}}}}\n        }\n        wrapper.arity = 8;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function F9(fun) {\n        function wrapper(a) { return function(b) { return function(c) {\n            return function(d) { return function(e) { return function(f) {\n            return function(g) { return function(h) { return function(i) {\n            return fun(a,b,c,d,e,f,g,h,i) }}}}}}}}\n        }\n        wrapper.arity = 9;\n        wrapper.func = fun;\n        return wrapper;\n    }\n\n    function A2(fun,a,b) {\n        return fun.arity === 2\n            ? fun.func(a,b)\n            : fun(a)(b);\n    }\n    function A3(fun,a,b,c) {\n        return fun.arity === 3\n            ? fun.func(a,b,c)\n            : fun(a)(b)(c);\n    }\n    function A4(fun,a,b,c,d) {\n        return fun.arity === 4\n            ? fun.func(a,b,c,d)\n            : fun(a)(b)(c)(d);\n    }\n    function A5(fun,a,b,c,d,e) {\n        return fun.arity === 5\n            ? fun.func(a,b,c,d,e)\n            : fun(a)(b)(c)(d)(e);\n    }\n    function A6(fun,a,b,c,d,e,f) {\n        return fun.arity === 6\n            ? fun.func(a,b,c,d,e,f)\n            : fun(a)(b)(c)(d)(e)(f);\n    }\n    function A7(fun,a,b,c,d,e,f,g) {\n        return fun.arity === 7\n            ? fun.func(a,b,c,d,e,f,g)\n            : fun(a)(b)(c)(d)(e)(f)(g);\n    }\n    function A8(fun,a,b,c,d,e,f,g,h) {\n        return fun.arity === 8\n            ? fun.func(a,b,c,d,e,f,g,h)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h);\n    }\n    function A9(fun,a,b,c,d,e,f,g,h,i) {\n        return fun.arity === 9\n            ? fun.func(a,b,c,d,e,f,g,h,i)\n            : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n    }\n}\nElm.Native.Show = {};\nElm.Native.Show.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.Show = elm.Native.Show || {};\n    if (elm.Native.Show.values) return elm.Native.Show.values;\n\n    var _Array;\n    var Dict;\n    var List;\n    var Utils = Elm.Native.Utils.make(elm);\n\n    var toString = function(v) {\n        var type = typeof v;\n        if (type === \"function\") {\n            var name = v.func ? v.func.name : v.name;\n            return '<function' + (name === '' ? '' : ': ') + name + '>';\n        }\n        else if (type === \"boolean\") {\n            return v ? \"True\" : \"False\";\n        }\n        else if (type === \"number\") {\n            return v + \"\";\n        }\n        else if ((v instanceof String) && v.isChar) {\n            return \"'\" + addSlashes(v) + \"'\";\n        }\n        else if (type === \"string\") {\n            return '\"' + addSlashes(v) + '\"';\n        }\n        else if (type === \"object\" && '_' in v && probablyPublic(v)) {\n            var output = [];\n            for (var k in v._) {\n                for (var i = v._[k].length; i--; ) {\n                    output.push(k + \" = \" + toString(v._[k][i]));\n                }\n            }\n            for (var k in v) {\n                if (k === '_') continue;\n                output.push(k + \" = \" + toString(v[k]));\n            }\n            if (output.length === 0) {\n                return \"{}\";\n            }\n            return \"{ \" + output.join(\", \") + \" }\";\n        }\n        else if (type === \"object\" && 'ctor' in v) {\n            if (v.ctor.substring(0,6) === \"_Tuple\") {\n                var output = [];\n                for (var k in v) {\n                    if (k === 'ctor') continue;\n                    output.push(toString(v[k]));\n                }\n                return \"(\" + output.join(\",\") + \")\";\n            }\n            else if (v.ctor === \"_Array\") {\n                if (!_Array) {\n                    _Array = Elm.Array.make(elm);\n                }\n                var list = _Array.toList(v);\n                return \"Array.fromList \" + toString(list);\n            }\n            else if (v.ctor === \"::\") {\n                var output = '[' + toString(v._0);\n                v = v._1;\n                while (v.ctor === \"::\") {\n                    output += \",\" + toString(v._0);\n                    v = v._1;\n                }\n                return output + ']';\n            }\n            else if (v.ctor === \"[]\") {\n                return \"[]\";\n            }\n            else if (v.ctor === \"RBNode\" || v.ctor === \"RBEmpty\") {\n                if (!Dict) {\n                    Dict = Elm.Dict.make(elm);\n                }\n                if (!List) {\n                    List = Elm.List.make(elm);\n                }\n                var list = Dict.toList(v);\n                var name = \"Dict\";\n                if (list.ctor === \"::\" && list._0._1.ctor === \"_Tuple0\") {\n                    name = \"Set\";\n                    list = A2(List.map, function(x){return x._0}, list);\n                }\n                return name + \".fromList \" + toString(list);\n            }\n            else {\n                var output = \"\";\n                for (var i in v) {\n                    if (i === 'ctor') continue;\n                    var str = toString(v[i]);\n                    var parenless = str[0] === '{' || str[0] === '<' || str.indexOf(' ') < 0;\n                    output += ' ' + (parenless ? str : '(' + str + ')');\n                }\n                return v.ctor + output;\n            }\n        }\n        if (type === 'object' && 'recv' in v) {\n            return '<signal>';\n        }\n        return \"<internal structure>\";\n    };\n\n    function addSlashes(str) {\n        return str.replace(/\\\\/g, '\\\\\\\\')\n                  .replace(/\\n/g, '\\\\n')\n                  .replace(/\\t/g, '\\\\t')\n                  .replace(/\\r/g, '\\\\r')\n                  .replace(/\\v/g, '\\\\v')\n                  .replace(/\\0/g, '\\\\0')\n                  .replace(/\\'/g, \"\\\\'\")\n                  .replace(/\\\"/g, '\\\\\"');\n    }\n\n    function probablyPublic(v) {\n        var keys = Object.keys(v);\n        var len = keys.length;\n        if (len === 3\n            && 'props' in v\n            && 'element' in v)\n        {\n            return false;\n        }\n        else if (len === 5\n            && 'horizontal' in v\n            && 'vertical' in v\n            && 'x' in v\n            && 'y' in v)\n        {\n            return false;\n        }\n        else if (len === 7\n            && 'theta' in v\n            && 'scale' in v\n            && 'x' in v\n            && 'y' in v\n            && 'alpha' in v\n            && 'form' in v)\n        {\n            return false;\n        }\n        return true;\n    }\n\n    return elm.Native.Show.values = {\n        toString: toString\n    };\n};\n\n\nElm.Native.Signal = {};\nElm.Native.Signal.make = function(localRuntime) {\n\n  localRuntime.Native = localRuntime.Native || {};\n  localRuntime.Native.Signal = localRuntime.Native.Signal || {};\n  if (localRuntime.Native.Signal.values) {\n      return localRuntime.Native.Signal.values;\n  }\n\n  var Utils = Elm.Native.Utils.make(localRuntime);\n\n  function broadcastToKids(node, timestep, changed) {\n    var kids = node.kids;\n    for (var i = kids.length; i--; ) {\n      kids[i].recv(timestep, changed, node.id);\n    }\n  }\n\n  function Input(base) {\n    this.id = Utils.guid();\n    this.value = base;\n    this.kids = [];\n    this.defaultNumberOfKids = 0;\n    this.recv = function(timestep, eid, v) {\n      var changed = eid === this.id;\n      if (changed) {\n        this.value = v;\n      }\n      broadcastToKids(this, timestep, changed);\n      return changed;\n    };\n    localRuntime.inputs.push(this);\n  }\n\n  function LiftN(update, args) {\n    this.id = Utils.guid();\n    this.value = update();\n    this.kids = [];\n\n    var n = args.length;\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      ++count;\n      if (changed) { isChanged = true; }\n      if (count == n) {\n        if (isChanged) { this.value = update(); }\n        broadcastToKids(this, timestep, isChanged);\n        isChanged = false;\n        count = 0;\n      }\n    };\n    for (var i = n; i--; ) { args[i].kids.push(this); }\n  }\n\n  function map(func, a) {\n    function update() { return func(a.value); }\n    return new LiftN(update, [a]);\n  }\n  function map2(func, a, b) {\n    function update() { return A2( func, a.value, b.value ); }\n    return new LiftN(update, [a,b]);\n  }\n  function map3(func, a, b, c) {\n    function update() { return A3( func, a.value, b.value, c.value ); }\n    return new LiftN(update, [a,b,c]);\n  }\n  function map4(func, a, b, c, d) {\n    function update() { return A4( func, a.value, b.value, c.value, d.value ); }\n    return new LiftN(update, [a,b,c,d]);\n  }\n  function map5(func, a, b, c, d, e) {\n    function update() { return A5( func, a.value, b.value, c.value, d.value, e.value ); }\n    return new LiftN(update, [a,b,c,d,e]);\n  }\n\n  function Foldp(step, state, input) {\n    this.id = Utils.guid();\n    this.value = state;\n    this.kids = [];\n\n    this.recv = function(timestep, changed, parentID) {\n      if (changed) {\n          this.value = A2( step, input.value, this.value );\n      }\n      broadcastToKids(this, timestep, changed);\n    };\n    input.kids.push(this);\n  }\n\n  function foldp(step, state, input) {\n      return new Foldp(step, state, input);\n  }\n\n  function DropIf(pred,base,input) {\n    this.id = Utils.guid();\n    this.value = pred(input.value) ? base : input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !pred(input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function DropRepeats(input) {\n    this.id = Utils.guid();\n    this.value = input.value;\n    this.kids = [];\n    this.recv = function(timestep, changed, parentID) {\n      var chng = changed && !Utils.eq(this.value,input.value);\n      if (chng) { this.value = input.value; }\n      broadcastToKids(this, timestep, chng);\n    };\n    input.kids.push(this);\n  }\n\n  function timestamp(a) {\n    function update() { return Utils.Tuple2(localRuntime.timer.now(), a.value); }\n    return new LiftN(update, [a]);\n  }\n\n  function SampleOn(s1,s2) {\n    this.id = Utils.guid();\n    this.value = s2.value;\n    this.kids = [];\n\n    var count = 0;\n    var isChanged = false;\n\n    this.recv = function(timestep, changed, parentID) {\n      if (parentID === s1.id) isChanged = changed;\n      ++count;\n      if (count == 2) {\n        if (isChanged) { this.value = s2.value; }\n        broadcastToKids(this, timestep, isChanged);\n        count = 0;\n        isChanged = false;\n      }\n    };\n    s1.kids.push(this);\n    s2.kids.push(this);\n  }\n\n  function sampleOn(s1,s2) { return new SampleOn(s1,s2); }\n\n  function delay(t,s) {\n      var delayed = new Input(s.value);\n      var firstEvent = true;\n      function update(v) {\n        if (firstEvent) {\n            firstEvent = false; return;\n        }\n        setTimeout(function() {\n            localRuntime.notify(delayed.id, v);\n        }, t);\n      }\n      function first(a,b) { return a; }\n      return new SampleOn(delayed, map2(F2(first), delayed, map(update,s)));\n  }\n\n  function Merge(s1,s2) {\n      this.id = Utils.guid();\n      this.value = s1.value;\n      this.kids = [];\n\n      var next = null;\n      var count = 0;\n      var isChanged = false;\n\n      this.recv = function(timestep, changed, parentID) {\n        ++count;\n        if (changed) {\n            isChanged = true;\n            if (parentID == s2.id && next === null) { next = s2.value; }\n            if (parentID == s1.id) { next = s1.value; }\n        }\n\n        if (count == 2) {\n            if (isChanged) { this.value = next; next = null; }\n            broadcastToKids(this, timestep, isChanged);\n            isChanged = false;\n            count = 0;\n        }\n      };\n      s1.kids.push(this);\n      s2.kids.push(this);\n  }\n\n  function merge(s1,s2) {\n      return new Merge(s1,s2);\n  }\n\n\n    // SIGNAL INPUTS\n\n    function input(initialValue) {\n        return new Input(initialValue);\n    }\n\n    function send(input, value) {\n        return function() {\n            localRuntime.notify(input.id, value);\n        };\n    }\n\n    function subscribe(input) {\n        return input;\n    }\n\n\n  return localRuntime.Native.Signal.values = {\n    constant : function(v) { return new Input(v); },\n    map  : F2(map ),\n    map2 : F3(map2),\n    map3 : F4(map3),\n    map4 : F5(map4),\n    map5 : F6(map5),\n    foldp : F3(foldp),\n    delay : F2(delay),\n    merge : F2(merge),\n    keepIf : F3(function(pred,base,sig) {\n      return new DropIf(function(x) {return !pred(x);},base,sig); }),\n    dropIf : F3(function(pred,base,sig) { return new DropIf(pred,base,sig); }),\n    dropRepeats : function(s) { return new DropRepeats(s);},\n    sampleOn : F2(sampleOn),\n    timestamp : timestamp,\n    input: input,\n    send: F2(send),\n    subscribe: subscribe\n  };\n};\n\nElm.Native.String = {};\nElm.Native.String.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.String = elm.Native.String || {};\n    if (elm.Native.String.values) return elm.Native.String.values;\n    if ('values' in Elm.Native.String) {\n        return elm.Native.String.values = Elm.Native.String.values;\n    }\n\n    var Char = Elm.Char.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Maybe = Elm.Maybe.make(elm);\n    var Result = Elm.Result.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function isEmpty(str) {\n        return str.length === 0;\n    }\n    function cons(chr,str) {\n        return chr + str;\n    }\n    function uncons(str) {\n        var hd;\n        return (hd = str[0])\n            ? Maybe.Just(Utils.Tuple2(Utils.chr(hd), str.slice(1)))\n            : Maybe.Nothing;\n    }\n    function append(a,b) {\n        return a + b;\n    }\n    function concat(strs) {\n        return List.toArray(strs).join('');\n    }\n    function length(str) {\n        return str.length;\n    }\n    function map(f,str) {\n        var out = str.split('');\n        for (var i = out.length; i--; ) {\n            out[i] = f(Utils.chr(out[i]));\n        }\n        return out.join('');\n    }\n    function filter(pred,str) {\n        return str.split('').map(Utils.chr).filter(pred).join('');\n    }\n    function reverse(str) {\n        return str.split('').reverse().join('');\n    }\n    function foldl(f,b,str) {\n        var len = str.length;\n        for (var i = 0; i < len; ++i) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n    function foldr(f,b,str) {\n        for (var i = str.length; i--; ) {\n            b = A2(f, Utils.chr(str[i]), b);\n        }\n        return b;\n    }\n\n    function split(sep, str) {\n        return List.fromArray(str.split(sep));\n    }\n    function join(sep, strs) {\n        return List.toArray(strs).join(sep);\n    }\n    function repeat(n, str) {\n        var result = '';\n        while (n > 0) {\n            if (n & 1) result += str;\n            n >>= 1, str += str;\n        }\n        return result;\n    }\n\n    function slice(start, end, str) {\n        return str.slice(start,end);\n    }\n    function left(n, str) {\n        return n < 1 ? \"\" : str.slice(0,n);\n    }\n    function right(n, str) {\n        return n < 1 ? \"\" : str.slice(-n);\n    }\n    function dropLeft(n, str) {\n        return n < 1 ? str : str.slice(n);\n    }\n    function dropRight(n, str) {\n        return n < 1 ? str : str.slice(0,-n);\n    }\n\n    function pad(n,chr,str) {\n        var half = (n - str.length) / 2;\n        return repeat(Math.ceil(half),chr) + str + repeat(half|0,chr);\n    }\n    function padRight(n,chr,str) {\n        return str + repeat(n - str.length, chr);\n    }\n    function padLeft(n,chr,str) {\n        return repeat(n - str.length, chr) + str;\n    }\n\n    function trim(str) {\n        return str.trim();\n    }\n    function trimLeft(str) {\n        return str.trimLeft();\n    }\n    function trimRight(str) {\n        return str.trimRight();\n    }\n\n    function words(str) {\n        return List.fromArray(str.trim().split(/\\s+/g));\n    }\n    function lines(str) {\n        return List.fromArray(str.split(/\\r\\n|\\r|\\n/g));\n    }\n\n    function toUpper(str) {\n        return str.toUpperCase();\n    }\n    function toLower(str) {\n        return str.toLowerCase();\n    }\n\n    function any(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (pred(Utils.chr(str[i]))) return true;\n        }\n        return false;\n    }\n    function all(pred, str) {\n        for (var i = str.length; i--; ) {\n            if (!pred(Utils.chr(str[i]))) return false;\n        }\n        return true;\n    }\n\n    function contains(sub, str) {\n        return str.indexOf(sub) > -1;\n    }\n    function startsWith(sub, str) {\n        return str.indexOf(sub) === 0;\n    }\n    function endsWith(sub, str) {\n        return str.length >= sub.length &&\n               str.lastIndexOf(sub) === str.length - sub.length;\n    }\n    function indexes(sub, str) {\n        var subLen = sub.length;\n        var i = 0;\n        var is = [];\n        while ((i = str.indexOf(sub, i)) > -1) {\n            is.push(i);\n            i = i + subLen;\n        }\n        return List.fromArray(is);\n    }\n\n    function toInt(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n            start = 1;\n        }\n        for (var i = start; i < len; ++i) {\n            if (!Char.isDigit(s[i])) {\n                return Result.Err(\"could not convert string '\" + s + \"' to an Int\" );\n            }\n        }\n        return Result.Ok(parseInt(s, 10));\n    }\n\n    function toFloat(s) {\n        var len = s.length;\n        if (len === 0) {\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        var start = 0;\n        if (s[0] == '-') {\n            if (len === 1) {\n                return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n            }\n            start = 1;\n        }\n        var dotCount = 0;\n        for (var i = start; i < len; ++i) {\n            if (Char.isDigit(s[i])) {\n                continue;\n            }\n            if (s[i] === '.') {\n                dotCount += 1;\n                if (dotCount <= 1) {\n                    continue;\n                }\n            }\n            return Result.Err(\"could not convert string '\" + s + \"' to a Float\" );\n        }\n        return Result.Ok(parseFloat(s));\n    }\n\n    function toList(str) {\n        return List.fromArray(str.split('').map(Utils.chr));\n    }\n    function fromList(chars) {\n        return List.toArray(chars).join('');\n    }\n\n    return Elm.Native.String.values = {\n        isEmpty: isEmpty,\n        cons: F2(cons),\n        uncons: uncons,\n        append: F2(append),\n        concat: concat,\n        length: length,\n        map: F2(map),\n        filter: F2(filter),\n        reverse: reverse,\n        foldl: F3(foldl),\n        foldr: F3(foldr),\n\n        split: F2(split),\n        join: F2(join),\n        repeat: F2(repeat),\n\n        slice: F3(slice),\n        left: F2(left),\n        right: F2(right),\n        dropLeft: F2(dropLeft),\n        dropRight: F2(dropRight),\n\n        pad: F3(pad),\n        padLeft: F3(padLeft),\n        padRight: F3(padRight),\n\n        trim: trim,\n        trimLeft: trimLeft,\n        trimRight: trimRight,\n\n        words: words,\n        lines: lines,\n\n        toUpper: toUpper,\n        toLower: toLower,\n\n        any: F2(any),\n        all: F2(all),\n\n        contains: F2(contains),\n        startsWith: F2(startsWith),\n        endsWith: F2(endsWith),\n        indexes: F2(indexes),\n\n        toInt: toInt,\n        toFloat: toFloat,\n        toList: toList,\n        fromList: fromList\n    };\n};\n\nElm.Native = Elm.Native || {};\nElm.Native.Utils = {};\nElm.Native.Utils.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Utils = localRuntime.Native.Utils || {};\n    if (localRuntime.Native.Utils.values) {\n        return localRuntime.Native.Utils.values;\n    }\n\n    function eq(l,r) {\n        var stack = [{'x': l, 'y': r}]\n        while (stack.length > 0) {\n            var front = stack.pop();\n            var x = front.x;\n            var y = front.y;\n            if (x === y) continue;\n            if (typeof x === \"object\") {\n                var c = 0;\n                for (var i in x) {\n                    ++c;\n                    if (i in y) {\n                        if (i !== 'ctor') {\n                            stack.push({ 'x': x[i], 'y': y[i] });\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n                if ('ctor' in x) {\n                    stack.push({'x': x.ctor, 'y': y.ctor});\n                }\n                if (c !== Object.keys(y).length) {\n                    return false;\n                };\n            } else if (typeof x === 'function') {\n                throw new Error('Equality error: general function equality is ' +\n                                'undecidable, and therefore, unsupported');\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // code in Generate/JavaScript.hs depends on the particular\n    // integer values assigned to LT, EQ, and GT\n    var LT = -1, EQ = 0, GT = 1, ord = ['LT','EQ','GT'];\n    function compare(x,y) { return { ctor: ord[cmp(x,y)+1] } }\n    function cmp(x,y) {\n        var ord;\n        if (typeof x !== 'object'){\n            return x === y ? EQ : x < y ? LT : GT;\n        }\n        else if (x.isChar){\n            var a = x.toString();\n            var b = y.toString();\n            return a === b ? EQ : a < b ? LT : GT;\n        }\n        else if (x.ctor === \"::\" || x.ctor === \"[]\") {\n            while (true) {\n                if (x.ctor === \"[]\" && y.ctor === \"[]\") return EQ;\n                if (x.ctor !== y.ctor) return x.ctor === '[]' ? LT : GT;\n                ord = cmp(x._0, y._0);\n                if (ord !== EQ) return ord;\n                x = x._1;\n                y = y._1;\n            }\n        }\n        else if (x.ctor.slice(0,6) === '_Tuple') {\n            var n = x.ctor.slice(6) - 0;\n            var err = 'cannot compare tuples with more than 6 elements.';\n            if (n === 0) return EQ;\n            if (n >= 1) { ord = cmp(x._0, y._0); if (ord !== EQ) return ord;\n            if (n >= 2) { ord = cmp(x._1, y._1); if (ord !== EQ) return ord;\n            if (n >= 3) { ord = cmp(x._2, y._2); if (ord !== EQ) return ord;\n            if (n >= 4) { ord = cmp(x._3, y._3); if (ord !== EQ) return ord;\n            if (n >= 5) { ord = cmp(x._4, y._4); if (ord !== EQ) return ord;\n            if (n >= 6) { ord = cmp(x._5, y._5); if (ord !== EQ) return ord;\n            if (n >= 7) throw new Error('Comparison error: ' + err); } } } } } }\n            return EQ;\n        }\n        else {\n            throw new Error('Comparison error: comparison is only defined on ints, ' +\n                            'floats, times, chars, strings, lists of comparable values, ' +\n                            'and tuples of comparable values.');\n        }\n    }\n\n\n    var Tuple0 = { ctor: \"_Tuple0\" };\n    function Tuple2(x,y) {\n        return {\n            ctor: \"_Tuple2\",\n            _0: x,\n            _1: y\n        };\n    }\n\n    function chr(c) {\n        var x = new String(c);\n        x.isChar = true;\n        return x;\n    }\n\n    function txt(str) {\n        var t = new String(str);\n        t.text = true;\n        return t;\n    }\n\n    function makeText(text) {\n        var style = '';\n        var href = '';\n        while (true) {\n            if (text.style) {\n                style += text.style;\n                text = text.text;\n                continue;\n            }\n            if (text.href) {\n                href = text.href;\n                text = text.text;\n                continue;\n            }\n            if (href) {\n                text = '<a href=\"' + href + '\">' + text + '</a>';\n            }\n            if (style) {\n                text = '<span style=\"' + style + '\">' + text + '</span>';\n            }\n            return text;\n        }\n    }\n\n    var count = 0;\n    function guid(_) {\n        return count++\n    }\n\n    function copy(oldRecord) {\n        var newRecord = {};\n        for (var key in oldRecord) {\n            var value = key === '_'\n                ? copy(oldRecord._)\n                : oldRecord[key]\n                ;\n            newRecord[key] = value;\n        }\n        return newRecord;\n    }\n\n    function remove(key, oldRecord) {\n        var record = copy(oldRecord);\n        if (key in record._) {\n            record[key] = record._[key][0];\n            record._[key] = record._[key].slice(1);\n            if (record._[key].length === 0) {\n                delete record._[key];\n            }\n        } else {\n            delete record[key];\n        }\n        return record;\n    }\n\n    function replace(keyValuePairs, oldRecord) {\n        var record = copy(oldRecord);\n        for (var i = keyValuePairs.length; i--; ) {\n            var pair = keyValuePairs[i];\n            record[pair[0]] = pair[1];\n        }\n        return record;\n    }\n\n    function insert(key, value, oldRecord) {\n        var newRecord = copy(oldRecord);\n        if (key in newRecord) {\n            var values = newRecord._[key];\n            var copiedValues = values ? values.slice(0) : [];\n            newRecord._[key] = [newRecord[key]].concat(copiedValues);\n        }\n        newRecord[key] = value;\n        return newRecord;\n    }\n\n    function getXY(e) {\n        var posx = 0;\n        var posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n\n        if (localRuntime.isEmbed()) {\n            var rect = localRuntime.node.getBoundingClientRect();\n            var relx = rect.left + document.body.scrollLeft + document.documentElement.scrollLeft;\n            var rely = rect.top + document.body.scrollTop + document.documentElement.scrollTop;\n            // TODO: figure out if there is a way to avoid rounding here\n            posx = posx - Math.round(relx) - localRuntime.node.clientLeft;\n            posy = posy - Math.round(rely) - localRuntime.node.clientTop;\n        }\n        return Tuple2(posx, posy);\n    }\n\n\n    //// LIST STUFF ////\n\n    var Nil = { ctor:'[]' };\n\n    function Cons(hd,tl) {\n        return {\n            ctor: \"::\",\n            _0: hd,\n            _1: tl\n        };\n    }\n\n    function append(xs,ys) {\n        // append Text\n        if (xs.text || ys.text) {\n            return txt(makeText(xs) + makeText(ys));\n        }\n\n        // append Strings\n        if (typeof xs === \"string\") {\n            return xs + ys;\n        }\n\n        // append Lists\n        if (xs.ctor === '[]') {\n            return ys;\n        }\n        var root = Cons(xs._0, Nil);\n        var curr = root;\n        xs = xs._1;\n        while (xs.ctor !== '[]') {\n            curr._1 = Cons(xs._0, Nil);\n            xs = xs._1;\n            curr = curr._1;\n        }\n        curr._1 = ys;\n        return root;\n    }\n\n    //// RUNTIME ERRORS ////\n\n    function indent(lines) {\n        return '\\n' + lines.join('\\n');\n    }\n\n    function badCase(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in case-expression.',\n            'Make sure your patterns cover every case!'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n    function badIf(moduleName, span) {\n        var msg = indent([\n            'Non-exhaustive pattern match in multi-way-if expression.',\n            'It is best to use \\'otherwise\\' as the last branch of multi-way-if.'\n        ]);\n        throw new Error('Runtime error in module ' + moduleName + ' (' + span + ')' + msg);\n    }\n\n\n    function badPort(expected, received) {\n        var msg = indent([\n            'Expecting ' + expected + ' but was given ',\n            JSON.stringify(received)\n        ]);\n        throw new Error('Runtime error when sending values through a port.' + msg);\n    }\n\n\n    return localRuntime.Native.Utils.values = {\n        eq:eq,\n        cmp:cmp,\n        compare:F2(compare),\n        Tuple0:Tuple0,\n        Tuple2:Tuple2,\n        chr:chr,\n        txt:txt,\n        makeText:makeText,\n        copy: copy,\n        remove: remove,\n        replace: replace,\n        insert: insert,\n        guid: guid,\n        getXY: getXY,\n\n        Nil: Nil,\n        Cons: Cons,\n        append: F2(append),\n\n        badCase: badCase,\n        badIf: badIf,\n        badPort: badPort\n    };\n};\n\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = createHash\n\nfunction createHash(elem) {\n    var attributes = elem.attributes\n    var hash = {}\n\n    if (attributes === null || attributes === undefined) {\n        return hash\n    }\n\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i]\n\n        if (attr.name.substr(0,5) !== \"data-\") {\n            continue\n        }\n\n        hash[attr.name.substr(5)] = attr.value\n    }\n\n    return hash\n}\n\n},{}],2:[function(require,module,exports){\nvar createStore = require(\"weakmap-shim/create-store\")\nvar Individual = require(\"individual\")\n\nvar createHash = require(\"./create-hash.js\")\n\nvar hashStore = Individual(\"__DATA_SET_WEAKMAP@3\", createStore())\n\nmodule.exports = DataSet\n\nfunction DataSet(elem) {\n    var store = hashStore(elem)\n\n    if (!store.hash) {\n        store.hash = createHash(elem)\n    }\n\n    return store.hash\n}\n\n},{\"./create-hash.js\":1,\"individual\":3,\"weakmap-shim/create-store\":4}],3:[function(require,module,exports){\n(function (global){\nvar root = typeof window !== 'undefined' ?\n    window : typeof global !== 'undefined' ?\n    global : {};\n\nmodule.exports = Individual\n\nfunction Individual(key, value) {\n    if (root[key]) {\n        return root[key]\n    }\n\n    Object.defineProperty(root, key, {\n        value: value\n        , configurable: true\n    })\n\n    return value\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\nvar hiddenStore = require('./hidden-store.js');\n\nmodule.exports = createStore;\n\nfunction createStore() {\n    var key = {};\n\n    return function (obj) {\n        if (typeof obj !== 'object' || obj === null) {\n            throw new Error('Weakmap-shim: Key must be object')\n        }\n\n        var store = obj.valueOf(key);\n        return store && store.identity === key ?\n            store : hiddenStore(obj, key);\n    };\n}\n\n},{\"./hidden-store.js\":5}],5:[function(require,module,exports){\nmodule.exports = hiddenStore;\n\nfunction hiddenStore(obj, key) {\n    var store = { identity: key };\n    var valueOf = obj.valueOf;\n\n    Object.defineProperty(obj, \"valueOf\", {\n        value: function (value) {\n            return value !== key ?\n                valueOf.apply(this, arguments) : store;\n        },\n        writable: true\n    });\n\n    return store;\n}\n\n},{}],6:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = addEvent\n\nfunction addEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        ds[type] = handler\n    } else if (Array.isArray(events)) {\n        if (events.indexOf(handler) === -1) {\n            events.push(handler)\n        }\n    } else if (events !== handler) {\n        ds[type] = [events, handler]\n    }\n}\n\n},{\"data-set\":2}],7:[function(require,module,exports){\nvar globalDocument = require(\"global/document\")\nvar DataSet = require(\"data-set\")\nvar createStore = require(\"weakmap-shim/create-store\")\n\nvar addEvent = require(\"./add-event.js\")\nvar removeEvent = require(\"./remove-event.js\")\nvar ProxyEvent = require(\"./proxy-event.js\")\n\nvar HANDLER_STORE = createStore()\n\nmodule.exports = DOMDelegator\n\nfunction DOMDelegator(document) {\n    document = document || globalDocument\n\n    this.target = document.documentElement\n    this.events = {}\n    this.rawEventListeners = {}\n    this.globalListeners = {}\n}\n\nDOMDelegator.prototype.addEventListener = addEvent\nDOMDelegator.prototype.removeEventListener = removeEvent\n\nDOMDelegator.prototype.allocateHandle =\n    function allocateHandle(func) {\n        var handle = new Handle()\n\n        HANDLER_STORE(handle).func = func;\n\n        return handle\n    }\n\nDOMDelegator.prototype.transformHandle =\n    function transformHandle(handle, lambda) {\n        var func = HANDLER_STORE(handle).func\n\n        return this.allocateHandle(function (ev) {\n            var result = lambda(ev)\n            if (result) {\n                func(result)\n            }\n        })\n    }\n\nDOMDelegator.prototype.addGlobalEventListener =\n    function addGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n        if (listeners.indexOf(fn) === -1) {\n            listeners.push(fn)\n        }\n\n        this.globalListeners[eventName] = listeners;\n    }\n\nDOMDelegator.prototype.removeGlobalEventListener =\n    function removeGlobalEventListener(eventName, fn) {\n        var listeners = this.globalListeners[eventName] || [];\n\n        var index = listeners.indexOf(fn)\n        if (index !== -1) {\n            listeners.splice(index, 1)\n        }\n    }\n\nDOMDelegator.prototype.listenTo = function listenTo(eventName) {\n    if (this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = true\n\n    var listener = this.rawEventListeners[eventName]\n    if (!listener) {\n        listener = this.rawEventListeners[eventName] =\n            createHandler(eventName, this)\n    }\n\n    this.target.addEventListener(eventName, listener, true)\n}\n\nDOMDelegator.prototype.unlistenTo = function unlistenTo(eventName) {\n    if (!this.events[eventName]) {\n        return\n    }\n\n    this.events[eventName] = false\n    var listener = this.rawEventListeners[eventName]\n\n    if (!listener) {\n        throw new Error(\"dom-delegator#unlistenTo: cannot \" +\n            \"unlisten to \" + eventName)\n    }\n\n    this.target.removeEventListener(eventName, listener, true)\n}\n\nfunction createHandler(eventName, delegator) {\n    var globalListeners = delegator.globalListeners;\n    var delegatorTarget = delegator.target;\n\n    return handler\n\n    function handler(ev) {\n        var globalHandlers = globalListeners[eventName] || []\n\n        if (globalHandlers.length > 0) {\n            var globalEvent = new ProxyEvent(ev);\n            globalEvent.currentTarget = delegatorTarget;\n            callListeners(globalHandlers, globalEvent)\n        }\n\n        findAndInvokeListeners(ev.target, ev, eventName)\n    }\n}\n\nfunction findAndInvokeListeners(elem, ev, eventName) {\n    var listener = getListener(elem, eventName)\n\n    if (listener && listener.handlers.length > 0) {\n        var listenerEvent = new ProxyEvent(ev);\n        listenerEvent.currentTarget = listener.currentTarget\n        callListeners(listener.handlers, listenerEvent)\n\n        if (listenerEvent._bubbles) {\n            var nextTarget = listener.currentTarget.parentNode\n            findAndInvokeListeners(nextTarget, ev, eventName)\n        }\n    }\n}\n\nfunction getListener(target, type) {\n    // terminate recursion if parent is `null`\n    if (target === null) {\n        return null\n    }\n\n    var ds = DataSet(target)\n    // fetch list of handler fns for this event\n    var handler = ds[type]\n    var allHandler = ds.event\n\n    if (!handler && !allHandler) {\n        return getListener(target.parentNode, type)\n    }\n\n    var handlers = [].concat(handler || [], allHandler || [])\n    return new Listener(target, handlers)\n}\n\nfunction callListeners(handlers, ev) {\n    handlers.forEach(function (handler) {\n        if (typeof handler === \"function\") {\n            handler(ev)\n        } else if (typeof handler.handleEvent === \"function\") {\n            handler.handleEvent(ev)\n        } else if (handler.type === \"dom-delegator-handle\") {\n            HANDLER_STORE(handler).func(ev)\n        } else {\n            throw new Error(\"dom-delegator: unknown handler \" +\n                \"found: \" + JSON.stringify(handlers));\n        }\n    })\n}\n\nfunction Listener(target, handlers) {\n    this.currentTarget = target\n    this.handlers = handlers\n}\n\nfunction Handle() {\n    this.type = \"dom-delegator-handle\"\n}\n\n},{\"./add-event.js\":6,\"./proxy-event.js\":15,\"./remove-event.js\":16,\"data-set\":2,\"global/document\":10,\"weakmap-shim/create-store\":13}],8:[function(require,module,exports){\nvar Individual = require(\"individual\")\nvar cuid = require(\"cuid\")\nvar globalDocument = require(\"global/document\")\n\nvar DOMDelegator = require(\"./dom-delegator.js\")\n\nvar delegatorCache = Individual(\"__DOM_DELEGATOR_CACHE@9\", {\n    delegators: {}\n})\nvar commonEvents = [\n    \"blur\", \"change\", \"click\",  \"contextmenu\", \"dblclick\",\n    \"error\",\"focus\", \"focusin\", \"focusout\", \"input\", \"keydown\",\n    \"keypress\", \"keyup\", \"load\", \"mousedown\", \"mouseup\",\n    \"resize\", \"scroll\", \"select\", \"submit\", \"touchcancel\",\n    \"touchend\", \"touchstart\", \"unload\"\n]\n\n/*  Delegator is a thin wrapper around a singleton `DOMDelegator`\n        instance.\n\n    Only one DOMDelegator should exist because we do not want\n        duplicate event listeners bound to the DOM.\n\n    `Delegator` will also `listenTo()` all events unless\n        every caller opts out of it\n*/\nmodule.exports = Delegator\n\nfunction Delegator(opts) {\n    opts = opts || {}\n    var document = opts.document || globalDocument\n\n    var cacheKey = document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"]\n\n    if (!cacheKey) {\n        cacheKey =\n            document[\"__DOM_DELEGATOR_CACHE_TOKEN@9\"] = cuid()\n    }\n\n    var delegator = delegatorCache.delegators[cacheKey]\n\n    if (!delegator) {\n        delegator = delegatorCache.delegators[cacheKey] =\n            new DOMDelegator(document)\n    }\n\n    if (opts.defaultEvents !== false) {\n        for (var i = 0; i < commonEvents.length; i++) {\n            delegator.listenTo(commonEvents[i])\n        }\n    }\n\n    return delegator\n}\n\n\n\n},{\"./dom-delegator.js\":7,\"cuid\":9,\"global/document\":10,\"individual\":11}],9:[function(require,module,exports){\n/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\n/*global window, navigator, document, require, process, module */\n(function (app) {\n  'use strict';\n  var namespace = 'cuid',\n    c = 0,\n    blockSize = 4,\n    base = 36,\n    discreteValues = Math.pow(base, blockSize),\n\n    pad = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length-size);\n    },\n\n    randomBlock = function randomBlock() {\n      return pad((Math.random() *\n            discreteValues << 0)\n            .toString(base), blockSize);\n    },\n\n    safeCounter = function () {\n      c = (c < discreteValues) ? c : 0;\n      c++; // this is not subliminal\n      return c - 1;\n    },\n\n    api = function cuid() {\n      // Starting with a lowercase letter makes\n      // it HTML element ID friendly.\n      var letter = 'c', // hard-coded allows for sequential access\n\n        // timestamp\n        // warning: this exposes the exact date and time\n        // that the uid was created.\n        timestamp = (new Date().getTime()).toString(base),\n\n        // Prevent same-machine collisions.\n        counter,\n\n        // A few chars to generate distinct ids for different\n        // clients (so different computers are far less\n        // likely to generate the same id)\n        fingerprint = api.fingerprint(),\n\n        // Grab some more chars from Math.random()\n        random = randomBlock() + randomBlock();\n\n        counter = pad(safeCounter().toString(base), blockSize);\n\n      return  (letter + timestamp + counter + fingerprint + random);\n    };\n\n  api.slug = function slug() {\n    var date = new Date().getTime().toString(36),\n      counter,\n      print = api.fingerprint().slice(0,1) +\n        api.fingerprint().slice(-1),\n      random = randomBlock().slice(-2);\n\n      counter = safeCounter().toString(36).slice(-4);\n\n    return date.slice(-2) +\n      counter + print + random;\n  };\n\n  api.globalCount = function globalCount() {\n    // We want to cache the results of this\n    var cache = (function calc() {\n        var i,\n          count = 0;\n\n        for (i in window) {\n          count++;\n        }\n\n        return count;\n      }());\n\n    api.globalCount = function () { return cache; };\n    return cache;\n  };\n\n  api.fingerprint = function browserPrint() {\n    return pad((navigator.mimeTypes.length +\n      navigator.userAgent.length).toString(36) +\n      api.globalCount().toString(36), 4);\n  };\n\n  // don't change anything from here down.\n  if (app.register) {\n    app.register(namespace, api);\n  } else if (typeof module !== 'undefined') {\n    module.exports = api;\n  } else {\n    app[namespace] = api;\n  }\n\n}(this.applitude || this));\n\n},{}],10:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nif (typeof document !== 'undefined') {\n    module.exports = document;\n} else {\n    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n\n    module.exports = doccy;\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":40}],11:[function(require,module,exports){\nmodule.exports=require(3)\n},{}],12:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],13:[function(require,module,exports){\nmodule.exports=require(4)\n},{\"./hidden-store.js\":14}],14:[function(require,module,exports){\nmodule.exports=require(5)\n},{}],15:[function(require,module,exports){\nvar inherits = require(\"inherits\")\n\nvar ALL_PROPS = [\n    \"altKey\", \"bubbles\", \"cancelable\", \"ctrlKey\",\n    \"eventPhase\", \"metaKey\", \"relatedTarget\", \"shiftKey\",\n    \"target\", \"timeStamp\", \"type\", \"view\", \"which\"\n]\nvar KEY_PROPS = [\"char\", \"charCode\", \"key\", \"keyCode\"]\nvar MOUSE_PROPS = [\n    \"button\", \"buttons\", \"clientX\", \"clientY\", \"layerX\",\n    \"layerY\", \"offsetX\", \"offsetY\", \"pageX\", \"pageY\",\n    \"screenX\", \"screenY\", \"toElement\"\n]\n\nvar rkeyEvent = /^key|input/\nvar rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/\n\nmodule.exports = ProxyEvent\n\nfunction ProxyEvent(ev) {\n    if (!(this instanceof ProxyEvent)) {\n        return new ProxyEvent(ev)\n    }\n\n    if (rkeyEvent.test(ev.type)) {\n        return new KeyEvent(ev)\n    } else if (rmouseEvent.test(ev.type)) {\n        return new MouseEvent(ev)\n    }\n\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    this._rawEvent = ev\n    this._bubbles = false;\n}\n\nProxyEvent.prototype.preventDefault = function () {\n    this._rawEvent.preventDefault()\n}\n\nProxyEvent.prototype.startPropagation = function () {\n    this._bubbles = true;\n}\n\nfunction MouseEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < MOUSE_PROPS.length; j++) {\n        var mousePropKey = MOUSE_PROPS[j]\n        this[mousePropKey] = ev[mousePropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(MouseEvent, ProxyEvent)\n\nfunction KeyEvent(ev) {\n    for (var i = 0; i < ALL_PROPS.length; i++) {\n        var propKey = ALL_PROPS[i]\n        this[propKey] = ev[propKey]\n    }\n\n    for (var j = 0; j < KEY_PROPS.length; j++) {\n        var keyPropKey = KEY_PROPS[j]\n        this[keyPropKey] = ev[keyPropKey]\n    }\n\n    this._rawEvent = ev\n}\n\ninherits(KeyEvent, ProxyEvent)\n\n},{\"inherits\":12}],16:[function(require,module,exports){\nvar DataSet = require(\"data-set\")\n\nmodule.exports = removeEvent\n\nfunction removeEvent(target, type, handler) {\n    var ds = DataSet(target)\n    var events = ds[type]\n\n    if (!events) {\n        return\n    } else if (Array.isArray(events)) {\n        var index = events.indexOf(handler)\n        if (index !== -1) {\n            events.splice(index, 1)\n        }\n    } else if (events === handler) {\n        ds[type] = null\n    }\n}\n\n},{\"data-set\":2}],17:[function(require,module,exports){\nvar isObject = require(\"is-object\")\nvar isHook = require(\"vtree/is-vhook\")\n\nmodule.exports = applyProperties\n\nfunction applyProperties(node, props, previous) {\n    for (var propName in props) {\n        var propValue = props[propName]\n\n        if (propValue === undefined) {\n            removeProperty(node, props, previous, propName);\n        } else if (isHook(propValue)) {\n            propValue.hook(node,\n                propName,\n                previous ? previous[propName] : undefined)\n        } else {\n            if (isObject(propValue)) {\n                patchObject(node, props, previous, propName, propValue);\n            } else if (propValue !== undefined) {\n                node[propName] = propValue\n            }\n        }\n    }\n}\n\nfunction removeProperty(node, props, previous, propName) {\n    if (previous) {\n        var previousValue = previous[propName]\n\n        if (!isHook(previousValue)) {\n            if (propName === \"attributes\") {\n                for (var attrName in previousValue) {\n                    node.removeAttribute(attrName)\n                }\n            } else if (propName === \"style\") {\n                for (var i in previousValue) {\n                    node.style[i] = \"\"\n                }\n            } else if (typeof previousValue === \"string\") {\n                node[propName] = \"\"\n            } else {\n                node[propName] = null\n            }\n        }\n    }\n}\n\nfunction patchObject(node, props, previous, propName, propValue) {\n    var previousValue = previous ? previous[propName] : undefined\n\n    // Set attributes\n    if (propName === \"attributes\") {\n        for (var attrName in propValue) {\n            var attrValue = propValue[attrName]\n\n            if (attrValue === undefined) {\n                node.removeAttribute(attrName)\n            } else {\n                node.setAttribute(attrName, attrValue)\n            }\n        }\n\n        return\n    }\n\n    if(previousValue && isObject(previousValue) &&\n        getPrototype(previousValue) !== getPrototype(propValue)) {\n        node[propName] = propValue\n        return\n    }\n\n    if (!isObject(node[propName])) {\n        node[propName] = {}\n    }\n\n    var replacer = propName === \"style\" ? \"\" : undefined\n\n    for (var k in propValue) {\n        var value = propValue[k]\n        node[propName][k] = (value === undefined) ? replacer : value\n    }\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\n},{\"is-object\":21,\"vtree/is-vhook\":29}],18:[function(require,module,exports){\nvar document = require(\"global/document\")\n\nvar applyProperties = require(\"./apply-properties\")\n\nvar isVNode = require(\"vtree/is-vnode\")\nvar isVText = require(\"vtree/is-vtext\")\nvar isWidget = require(\"vtree/is-widget\")\nvar handleThunk = require(\"vtree/handle-thunk\")\n\nmodule.exports = createElement\n\nfunction createElement(vnode, opts) {\n    var doc = opts ? opts.document || document : document\n    var warn = opts ? opts.warn : null\n\n    vnode = handleThunk(vnode).a\n\n    if (isWidget(vnode)) {\n        return vnode.init()\n    } else if (isVText(vnode)) {\n        return doc.createTextNode(vnode.text)\n    } else if (!isVNode(vnode)) {\n        if (warn) {\n            warn(\"Item is not a valid virtual dom node\", vnode)\n        }\n        return null\n    }\n\n    var node = (vnode.namespace === null) ?\n        doc.createElement(vnode.tagName) :\n        doc.createElementNS(vnode.namespace, vnode.tagName)\n\n    var props = vnode.properties\n    applyProperties(node, props)\n\n    var children = vnode.children\n\n    for (var i = 0; i < children.length; i++) {\n        var childNode = createElement(children[i], opts)\n        if (childNode) {\n            node.appendChild(childNode)\n        }\n    }\n\n    return node\n}\n\n},{\"./apply-properties\":17,\"global/document\":20,\"vtree/handle-thunk\":27,\"vtree/is-vnode\":30,\"vtree/is-vtext\":31,\"vtree/is-widget\":32}],19:[function(require,module,exports){\n// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.\n// We don't want to read all of the DOM nodes in the tree so we use\n// the in-order tree indexing to eliminate recursion down certain branches.\n// We only recurse into a DOM node if we know that it contains a child of\n// interest.\n\nvar noChild = {}\n\nmodule.exports = domIndex\n\nfunction domIndex(rootNode, tree, indices, nodes) {\n    if (!indices || indices.length === 0) {\n        return {}\n    } else {\n        indices.sort(ascending)\n        return recurse(rootNode, tree, indices, nodes, 0)\n    }\n}\n\nfunction recurse(rootNode, tree, indices, nodes, rootIndex) {\n    nodes = nodes || {}\n\n\n    if (rootNode) {\n        if (indexInRange(indices, rootIndex, rootIndex)) {\n            nodes[rootIndex] = rootNode\n        }\n\n        var vChildren = tree.children\n\n        if (vChildren) {\n\n            var childNodes = rootNode.childNodes\n\n            for (var i = 0; i < tree.children.length; i++) {\n                rootIndex += 1\n\n                var vChild = vChildren[i] || noChild\n                var nextIndex = rootIndex + (vChild.count || 0)\n\n                // skip recursion down the tree if there are no nodes down here\n                if (indexInRange(indices, rootIndex, nextIndex)) {\n                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)\n                }\n\n                rootIndex = nextIndex\n            }\n        }\n    }\n\n    return nodes\n}\n\n// Binary search for an index in the interval [left, right]\nfunction indexInRange(indices, left, right) {\n    if (indices.length === 0) {\n        return false\n    }\n\n    var minIndex = 0\n    var maxIndex = indices.length - 1\n    var currentIndex\n    var currentItem\n\n    while (minIndex <= maxIndex) {\n        currentIndex = ((maxIndex + minIndex) / 2) >> 0\n        currentItem = indices[currentIndex]\n\n        if (minIndex === maxIndex) {\n            return currentItem >= left && currentItem <= right\n        } else if (currentItem < left) {\n            minIndex = currentIndex + 1\n        } else  if (currentItem > right) {\n            maxIndex = currentIndex - 1\n        } else {\n            return true\n        }\n    }\n\n    return false;\n}\n\nfunction ascending(a, b) {\n    return a > b ? 1 : -1\n}\n\n},{}],20:[function(require,module,exports){\nmodule.exports=require(10)\n},{\"min-document\":40}],21:[function(require,module,exports){\nmodule.exports = isObject\n\nfunction isObject(x) {\n    return typeof x === \"object\" && x !== null\n}\n\n},{}],22:[function(require,module,exports){\nvar nativeIsArray = Array.isArray\nvar toString = Object.prototype.toString\n\nmodule.exports = nativeIsArray || isArray\n\nfunction isArray(obj) {\n    return toString.call(obj) === \"[object Array]\"\n}\n\n},{}],23:[function(require,module,exports){\nvar applyProperties = require(\"./apply-properties\")\n\nvar isWidget = require(\"vtree/is-widget\")\nvar VPatch = require(\"vtree/vpatch\")\n\nvar render = require(\"./create-element\")\nvar updateWidget = require(\"./update-widget\")\n\nmodule.exports = applyPatch\n\nfunction applyPatch(vpatch, domNode, renderOptions) {\n    var type = vpatch.type\n    var vNode = vpatch.vNode\n    var patch = vpatch.patch\n\n    switch (type) {\n        case VPatch.REMOVE:\n            return removeNode(domNode, vNode)\n        case VPatch.INSERT:\n            return insertNode(domNode, patch, renderOptions)\n        case VPatch.VTEXT:\n            return stringPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.WIDGET:\n            return widgetPatch(domNode, vNode, patch, renderOptions)\n        case VPatch.VNODE:\n            return vNodePatch(domNode, vNode, patch, renderOptions)\n        case VPatch.ORDER:\n            reorderChildren(domNode, patch)\n            return domNode\n        case VPatch.PROPS:\n            applyProperties(domNode, patch, vNode.properties)\n            return domNode\n        case VPatch.THUNK:\n            return replaceRoot(domNode,\n                renderOptions.patch(domNode, patch, renderOptions))\n        default:\n            return domNode\n    }\n}\n\nfunction removeNode(domNode, vNode) {\n    var parentNode = domNode.parentNode\n\n    if (parentNode) {\n        parentNode.removeChild(domNode)\n    }\n\n    destroyWidget(domNode, vNode);\n\n    return null\n}\n\nfunction insertNode(parentNode, vNode, renderOptions) {\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.appendChild(newNode)\n    }\n\n    return parentNode\n}\n\nfunction stringPatch(domNode, leftVNode, vText, renderOptions) {\n    var newNode\n\n    if (domNode.nodeType === 3) {\n        domNode.replaceData(0, domNode.length, vText.text)\n        newNode = domNode\n    } else {\n        var parentNode = domNode.parentNode\n        newNode = render(vText, renderOptions)\n\n        if (parentNode) {\n            parentNode.replaceChild(newNode, domNode)\n        }\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction widgetPatch(domNode, leftVNode, widget, renderOptions) {\n    if (updateWidget(leftVNode, widget)) {\n        return widget.update(leftVNode, domNode) || domNode\n    }\n\n    var parentNode = domNode.parentNode\n    var newWidget = render(widget, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newWidget, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newWidget\n}\n\nfunction vNodePatch(domNode, leftVNode, vNode, renderOptions) {\n    var parentNode = domNode.parentNode\n    var newNode = render(vNode, renderOptions)\n\n    if (parentNode) {\n        parentNode.replaceChild(newNode, domNode)\n    }\n\n    destroyWidget(domNode, leftVNode)\n\n    return newNode\n}\n\nfunction destroyWidget(domNode, w) {\n    if (typeof w.destroy === \"function\" && isWidget(w)) {\n        w.destroy(domNode)\n    }\n}\n\nfunction reorderChildren(domNode, bIndex) {\n    var children = []\n    var childNodes = domNode.childNodes\n    var len = childNodes.length\n    var i\n    var reverseIndex = bIndex.reverse\n\n    for (i = 0; i < len; i++) {\n        children.push(domNode.childNodes[i])\n    }\n\n    var insertOffset = 0\n    var move\n    var node\n    var insertNode\n    for (i = 0; i < len; i++) {\n        move = bIndex[i]\n        if (move !== undefined && move !== i) {\n            // the element currently at this index will be moved later so increase the insert offset\n            if (reverseIndex[i] > i) {\n                insertOffset++\n            }\n\n            node = children[move]\n            insertNode = childNodes[i + insertOffset] || null\n            if (node !== insertNode) {\n                domNode.insertBefore(node, insertNode)\n            }\n\n            // the moved element came from the front of the array so reduce the insert offset\n            if (move < i) {\n                insertOffset--\n            }\n        }\n\n        // element at this index is scheduled to be removed so increase insert offset\n        if (i in bIndex.removes) {\n            insertOffset++\n        }\n    }\n}\n\nfunction replaceRoot(oldRoot, newRoot) {\n    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {\n        console.log(oldRoot)\n        oldRoot.parentNode.replaceChild(newRoot, oldRoot)\n    }\n\n    return newRoot;\n}\n\n},{\"./apply-properties\":17,\"./create-element\":18,\"./update-widget\":25,\"vtree/is-widget\":32,\"vtree/vpatch\":37}],24:[function(require,module,exports){\nvar document = require(\"global/document\")\nvar isArray = require(\"x-is-array\")\n\nvar domIndex = require(\"./dom-index\")\nvar patchOp = require(\"./patch-op\")\nmodule.exports = patch\n\nfunction patch(rootNode, patches) {\n    return patchRecursive(rootNode, patches)\n}\n\nfunction patchRecursive(rootNode, patches, renderOptions) {\n    var indices = patchIndices(patches)\n\n    if (indices.length === 0) {\n        return rootNode\n    }\n\n    var index = domIndex(rootNode, patches.a, indices)\n    var ownerDocument = rootNode.ownerDocument\n\n    if (!renderOptions) {\n        renderOptions = { patch: patchRecursive }\n        if (ownerDocument !== document) {\n            renderOptions.document = ownerDocument\n        }\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n        var nodeIndex = indices[i]\n        rootNode = applyPatch(rootNode,\n            index[nodeIndex],\n            patches[nodeIndex],\n            renderOptions)\n    }\n\n    return rootNode\n}\n\nfunction applyPatch(rootNode, domNode, patchList, renderOptions) {\n    if (!domNode) {\n        return rootNode\n    }\n\n    var newNode\n\n    if (isArray(patchList)) {\n        for (var i = 0; i < patchList.length; i++) {\n            newNode = patchOp(patchList[i], domNode, renderOptions)\n\n            if (domNode === rootNode) {\n                rootNode = newNode\n            }\n        }\n    } else {\n        newNode = patchOp(patchList, domNode, renderOptions)\n\n        if (domNode === rootNode) {\n            rootNode = newNode\n        }\n    }\n\n    return rootNode\n}\n\nfunction patchIndices(patches) {\n    var indices = []\n\n    for (var key in patches) {\n        if (key !== \"a\") {\n            indices.push(Number(key))\n        }\n    }\n\n    return indices\n}\n\n},{\"./dom-index\":19,\"./patch-op\":23,\"global/document\":20,\"x-is-array\":22}],25:[function(require,module,exports){\nvar isWidget = require(\"vtree/is-widget\")\n\nmodule.exports = updateWidget\n\nfunction updateWidget(a, b) {\n    if (isWidget(a) && isWidget(b)) {\n        if (\"name\" in a && \"name\" in b) {\n            return a.id === b.id\n        } else {\n            return a.init === b.init\n        }\n    }\n\n    return false\n}\n\n},{\"vtree/is-widget\":32}],26:[function(require,module,exports){\nvar isArray = require(\"x-is-array\")\nvar isObject = require(\"is-object\")\n\nvar VPatch = require(\"./vpatch\")\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\nvar handleThunk = require(\"./handle-thunk\")\n\nmodule.exports = diff\n\nfunction diff(a, b) {\n    var patch = { a: a }\n    walk(a, b, patch, 0)\n    return patch\n}\n\nfunction walk(a, b, patch, index) {\n    if (a === b) {\n        if (isThunk(a) || isThunk(b)) {\n            thunks(a, b, patch, index)\n        } else {\n            hooks(b, patch, index)\n        }\n        return\n    }\n\n    var apply = patch[index]\n\n    if (b == null) {\n        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))\n        destroyWidgets(a, patch, index)\n    } else if (isThunk(a) || isThunk(b)) {\n        thunks(a, b, patch, index)\n    } else if (isVNode(b)) {\n        if (isVNode(a)) {\n            if (a.tagName === b.tagName &&\n                a.namespace === b.namespace &&\n                a.key === b.key) {\n                var propsPatch = diffProps(a.properties, b.properties, b.hooks)\n                if (propsPatch) {\n                    apply = appendPatch(apply,\n                        new VPatch(VPatch.PROPS, a, propsPatch))\n                }\n                apply = diffChildren(a, b, patch, apply, index)\n            } else {\n                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n                destroyWidgets(a, patch, index)\n            }\n        } else {\n            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))\n            destroyWidgets(a, patch, index)\n        }\n    } else if (isVText(b)) {\n        if (!isVText(a)) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n            destroyWidgets(a, patch, index)\n        } else if (a.text !== b.text) {\n            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))\n        }\n    } else if (isWidget(b)) {\n        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))\n\n        if (!isWidget(a)) {\n            destroyWidgets(a, patch, index)\n        }\n    }\n\n    if (apply) {\n        patch[index] = apply\n    }\n}\n\nfunction diffProps(a, b, hooks) {\n    var diff\n\n    for (var aKey in a) {\n        if (!(aKey in b)) {\n            diff = diff || {}\n            diff[aKey] = undefined\n        }\n\n        var aValue = a[aKey]\n        var bValue = b[aKey]\n\n        if (hooks && aKey in hooks) {\n            diff = diff || {}\n            diff[aKey] = bValue\n        } else {\n            if (isObject(aValue) && isObject(bValue)) {\n                if (getPrototype(bValue) !== getPrototype(aValue)) {\n                    diff = diff || {}\n                    diff[aKey] = bValue\n                } else {\n                    var objectDiff = diffProps(aValue, bValue)\n                    if (objectDiff) {\n                        diff = diff || {}\n                        diff[aKey] = objectDiff\n                    }\n                }\n            } else if (aValue !== bValue) {\n                diff = diff || {}\n                diff[aKey] = bValue\n            }\n        }\n    }\n\n    for (var bKey in b) {\n        if (!(bKey in a)) {\n            diff = diff || {}\n            diff[bKey] = b[bKey]\n        }\n    }\n\n    return diff\n}\n\nfunction getPrototype(value) {\n    if (Object.getPrototypeOf) {\n        return Object.getPrototypeOf(value)\n    } else if (value.__proto__) {\n        return value.__proto__\n    } else if (value.constructor) {\n        return value.constructor.prototype\n    }\n}\n\nfunction diffChildren(a, b, patch, apply, index) {\n    var aChildren = a.children\n    var bChildren = reorder(aChildren, b.children)\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n\n    for (var i = 0; i < len; i++) {\n        var leftNode = aChildren[i]\n        var rightNode = bChildren[i]\n        index += 1\n\n        if (!leftNode) {\n            if (rightNode) {\n                // Excess nodes in b need to be added\n                apply = appendPatch(apply,\n                    new VPatch(VPatch.INSERT, null, rightNode))\n            }\n        } else if (!rightNode) {\n            if (leftNode) {\n                // Excess nodes in a need to be removed\n                patch[index] = new VPatch(VPatch.REMOVE, leftNode, null)\n                destroyWidgets(leftNode, patch, index)\n            }\n        } else {\n            walk(leftNode, rightNode, patch, index)\n        }\n\n        if (isVNode(leftNode) && leftNode.count) {\n            index += leftNode.count\n        }\n    }\n\n    if (bChildren.moves) {\n        // Reorder nodes last\n        apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, bChildren.moves))\n    }\n\n    return apply\n}\n\n// Patch records for all destroyed widgets must be added because we need\n// a DOM node reference for the destroy function\nfunction destroyWidgets(vNode, patch, index) {\n    if (isWidget(vNode)) {\n        if (typeof vNode.destroy === \"function\") {\n            patch[index] = new VPatch(VPatch.REMOVE, vNode, null)\n        }\n    } else if (isVNode(vNode) && vNode.hasWidgets) {\n        var children = vNode.children\n        var len = children.length\n        for (var i = 0; i < len; i++) {\n            var child = children[i]\n            index += 1\n\n            destroyWidgets(child, patch, index)\n\n            if (isVNode(child) && child.count) {\n                index += child.count\n            }\n        }\n    }\n}\n\n// Create a sub-patch for thunks\nfunction thunks(a, b, patch, index) {\n    var nodes = handleThunk(a, b);\n    var thunkPatch = diff(nodes.a, nodes.b)\n    if (hasPatches(thunkPatch)) {\n        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)\n    }\n}\n\nfunction hasPatches(patch) {\n    for (var index in patch) {\n        if (index !== \"a\") {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// Execute hooks when two nodes are identical\nfunction hooks(vNode, patch, index) {\n    if (isVNode(vNode)) {\n        if (vNode.hooks) {\n            patch[index] = new VPatch(VPatch.PROPS, vNode.hooks, vNode.hooks)\n        }\n\n        if (vNode.descendantHooks) {\n            var children = vNode.children\n            var len = children.length\n            for (var i = 0; i < len; i++) {\n                var child = children[i]\n                index += 1\n\n                hooks(child, patch, index)\n\n                if (isVNode(child) && child.count) {\n                    index += child.count\n                }\n            }\n        }\n    }\n}\n\n// List diff, naive left to right reordering\nfunction reorder(aChildren, bChildren) {\n\n    var bKeys = keyIndex(bChildren)\n\n    if (!bKeys) {\n        return bChildren\n    }\n\n    var aKeys = keyIndex(aChildren)\n\n    if (!aKeys) {\n        return bChildren\n    }\n\n    var bMatch = {}, aMatch = {}\n\n    for (var key in bKeys) {\n        bMatch[bKeys[key]] = aKeys[key]\n    }\n\n    for (var key in aKeys) {\n        aMatch[aKeys[key]] = bKeys[key]\n    }\n\n    var aLen = aChildren.length\n    var bLen = bChildren.length\n    var len = aLen > bLen ? aLen : bLen\n    var shuffle = []\n    var freeIndex = 0\n    var i = 0\n    var moveIndex = 0\n    var moves = {}\n    var removes = moves.removes = {}\n    var reverse = moves.reverse = {}\n    var hasMoves = false\n\n    while (freeIndex < len) {\n        var move = aMatch[i]\n        if (move !== undefined) {\n            shuffle[i] = bChildren[move]\n            if (move !== moveIndex) {\n                moves[move] = moveIndex\n                reverse[moveIndex] = move\n                hasMoves = true\n            }\n            moveIndex++\n        } else if (i in aMatch) {\n            shuffle[i] = undefined\n            removes[i] = moveIndex++\n            hasMoves = true\n        } else {\n            while (bMatch[freeIndex] !== undefined) {\n                freeIndex++\n            }\n\n            if (freeIndex < len) {\n                var freeChild = bChildren[freeIndex]\n                if (freeChild) {\n                    shuffle[i] = freeChild\n                    if (freeIndex !== moveIndex) {\n                        hasMoves = true\n                        moves[freeIndex] = moveIndex\n                        reverse[moveIndex] = freeIndex\n                    }\n                    moveIndex++\n                }\n                freeIndex++\n            }\n        }\n        i++\n    }\n\n    if (hasMoves) {\n        shuffle.moves = moves\n    }\n\n    return shuffle\n}\n\nfunction keyIndex(children) {\n    var i, keys\n\n    for (i = 0; i < children.length; i++) {\n        var child = children[i]\n\n        if (child.key !== undefined) {\n            keys = keys || {}\n            keys[child.key] = i\n        }\n    }\n\n    return keys\n}\n\nfunction appendPatch(apply, patch) {\n    if (apply) {\n        if (isArray(apply)) {\n            apply.push(patch)\n        } else {\n            apply = [apply, patch]\n        }\n\n        return apply\n    } else {\n        return patch\n    }\n}\n\n},{\"./handle-thunk\":27,\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32,\"./vpatch\":37,\"is-object\":33,\"x-is-array\":34}],27:[function(require,module,exports){\nvar isVNode = require(\"./is-vnode\")\nvar isVText = require(\"./is-vtext\")\nvar isWidget = require(\"./is-widget\")\nvar isThunk = require(\"./is-thunk\")\n\nmodule.exports = handleThunk\n\nfunction handleThunk(a, b) {\n    var renderedA = a\n    var renderedB = b\n\n    if (isThunk(b)) {\n        renderedB = renderThunk(b, a)\n    }\n\n    if (isThunk(a)) {\n        renderedA = renderThunk(a, null)\n    }\n\n    return {\n        a: renderedA,\n        b: renderedB\n    }\n}\n\nfunction renderThunk(thunk, previous) {\n    var renderedThunk = thunk.vnode\n\n    if (!renderedThunk) {\n        renderedThunk = thunk.vnode = thunk.render(previous)\n    }\n\n    if (!(isVNode(renderedThunk) ||\n            isVText(renderedThunk) ||\n            isWidget(renderedThunk))) {\n        throw new Error(\"thunk did not return a valid node\");\n    }\n\n    return renderedThunk\n}\n\n},{\"./is-thunk\":28,\"./is-vnode\":30,\"./is-vtext\":31,\"./is-widget\":32}],28:[function(require,module,exports){\nmodule.exports = isThunk\n\nfunction isThunk(t) {\n    return t && t.type === \"Thunk\"\n}\n\n},{}],29:[function(require,module,exports){\nmodule.exports = isHook\n\nfunction isHook(hook) {\n    return hook && typeof hook.hook === \"function\" &&\n        !hook.hasOwnProperty(\"hook\")\n}\n\n},{}],30:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualNode\n\nfunction isVirtualNode(x) {\n    return x && x.type === \"VirtualNode\" && x.version === version\n}\n\n},{\"./version\":35}],31:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = isVirtualText\n\nfunction isVirtualText(x) {\n    return x && x.type === \"VirtualText\" && x.version === version\n}\n\n},{\"./version\":35}],32:[function(require,module,exports){\nmodule.exports = isWidget\n\nfunction isWidget(w) {\n    return w && w.type === \"Widget\"\n}\n\n},{}],33:[function(require,module,exports){\nmodule.exports=require(21)\n},{}],34:[function(require,module,exports){\nmodule.exports=require(22)\n},{}],35:[function(require,module,exports){\nmodule.exports = \"1\"\n\n},{}],36:[function(require,module,exports){\nvar version = require(\"./version\")\nvar isVNode = require(\"./is-vnode\")\nvar isWidget = require(\"./is-widget\")\nvar isVHook = require(\"./is-vhook\")\n\nmodule.exports = VirtualNode\n\nvar noProperties = {}\nvar noChildren = []\n\nfunction VirtualNode(tagName, properties, children, key, namespace) {\n    this.tagName = tagName\n    this.properties = properties || noProperties\n    this.children = children || noChildren\n    this.key = key != null ? String(key) : undefined\n    this.namespace = (typeof namespace === \"string\") ? namespace : null\n\n    var count = (children && children.length) || 0\n    var descendants = 0\n    var hasWidgets = false\n    var descendantHooks = false\n    var hooks\n\n    for (var propName in properties) {\n        if (properties.hasOwnProperty(propName)) {\n            var property = properties[propName]\n            if (isVHook(property)) {\n                if (!hooks) {\n                    hooks = {}\n                }\n\n                hooks[propName] = property\n            }\n        }\n    }\n\n    for (var i = 0; i < count; i++) {\n        var child = children[i]\n        if (isVNode(child)) {\n            descendants += child.count || 0\n\n            if (!hasWidgets && child.hasWidgets) {\n                hasWidgets = true\n            }\n\n            if (!descendantHooks && (child.hooks || child.descendantHooks)) {\n                descendantHooks = true\n            }\n        } else if (!hasWidgets && isWidget(child)) {\n            if (typeof child.destroy === \"function\") {\n                hasWidgets = true\n            }\n        }\n    }\n\n    this.count = count + descendants\n    this.hasWidgets = hasWidgets\n    this.hooks = hooks\n    this.descendantHooks = descendantHooks\n}\n\nVirtualNode.prototype.version = version\nVirtualNode.prototype.type = \"VirtualNode\"\n\n},{\"./is-vhook\":29,\"./is-vnode\":30,\"./is-widget\":32,\"./version\":35}],37:[function(require,module,exports){\nvar version = require(\"./version\")\n\nVirtualPatch.NONE = 0\nVirtualPatch.VTEXT = 1\nVirtualPatch.VNODE = 2\nVirtualPatch.WIDGET = 3\nVirtualPatch.PROPS = 4\nVirtualPatch.ORDER = 5\nVirtualPatch.INSERT = 6\nVirtualPatch.REMOVE = 7\nVirtualPatch.THUNK = 8\n\nmodule.exports = VirtualPatch\n\nfunction VirtualPatch(type, vNode, patch) {\n    this.type = Number(type)\n    this.vNode = vNode\n    this.patch = patch\n}\n\nVirtualPatch.prototype.version = version\nVirtualPatch.prototype.type = \"VirtualPatch\"\n\n},{\"./version\":35}],38:[function(require,module,exports){\nvar version = require(\"./version\")\n\nmodule.exports = VirtualText\n\nfunction VirtualText(text) {\n    this.text = String(text)\n}\n\nVirtualText.prototype.version = version\nVirtualText.prototype.type = \"VirtualText\"\n\n},{\"./version\":35}],39:[function(require,module,exports){\n\nvar VNode = require('vtree/vnode');\nvar VText = require('vtree/vtext');\nvar diff = require('vtree/diff');\nvar patch = require('vdom/patch');\nvar createElement = require('vdom/create-element');\nvar DataSet = require(\"data-set\");\nvar Delegator = require(\"dom-delegator\");\nvar isHook = require(\"vtree/is-vhook\");\n\nElm.Native.VirtualDom = {};\nElm.Native.VirtualDom.make = function(elm) {\n    elm.Native = elm.Native || {};\n    elm.Native.VirtualDom = elm.Native.VirtualDom || {};\n    if (elm.Native.VirtualDom.values) {\n        return elm.Native.VirtualDom.values;\n    }\n\n    // This manages event listeners. Somehow...\n    var delegator = Delegator();\n\n    var NativeElement = Elm.Native.Graphics.Element.make(elm);\n    var Element = Elm.Graphics.Element.make(elm);\n    var Json = Elm.Native.Json.make(elm);\n    var List = Elm.Native.List.make(elm);\n    var Utils = Elm.Native.Utils.make(elm);\n\n    function listToObject(list) {\n        var object = {};\n        while (list.ctor !== '[]') {\n            var entry = list._0;\n            object[entry.key] = entry.value;\n            list = list._1;\n        }\n        return object;\n    }\n\n    function node(name, propertyList, contents) {\n        var props = listToObject(propertyList);\n\n        var key, namespace;\n        // support keys\n        if (props.key !== undefined) {\n            key = props.key;\n            props.key = undefined;\n        }\n\n        // support namespace\n        if (props.namespace !== undefined) {\n            namespace = props.namespace;\n            props.namespace = undefined;\n        }\n\n        // ensure that setting text of an input does not move the cursor\n        var useSoftSet =\n            name === 'input'\n            && props.value !== undefined\n            && !isHook(props.value);\n\n        if (useSoftSet) {\n            props.value = SoftSetHook(props.value);\n        }\n\n        return new VNode(name, props, List.toArray(contents), key, namespace);\n    }\n\n    function property(key, value) {\n        return {\n            key: key,\n            value: value\n        };\n    }\n\n    function on(name, decoder, createMessage) {\n        function eventHandler(event) {\n            var value = A2(Json.runDecoderValue, decoder, event);\n            if (value.ctor === 'Ok') {\n                createMessage(value._0)();\n            }\n        }\n        return property(name, DataSetHook(eventHandler));\n    }\n\n    function DataSetHook(value) {\n        if (!(this instanceof DataSetHook)) {\n            return new DataSetHook(value);\n        }\n\n        this.value = value;\n    }\n\n    DataSetHook.prototype.hook = function (node, propertyName) {\n        var ds = DataSet(node);\n        ds[propertyName] = this.value;\n    };\n\n\n    function SoftSetHook(value) {\n      if (!(this instanceof SoftSetHook)) {\n        return new SoftSetHook(value);\n      }\n\n      this.value = value;\n    }\n\n    SoftSetHook.prototype.hook = function (node, propertyName) {\n      if (node[propertyName] !== this.value) {\n        node[propertyName] = this.value;\n      }\n    };\n\n    function text(string) {\n        return new VText(string);\n    }\n\n    function fromElement(element) {\n        return {\n            type: \"Widget\",\n\n            element: element,\n\n            init: function () {\n                return NativeElement.render(element);\n            },\n\n            update: function (previous, node) {\n                return NativeElement.update(node, previous.element, element);\n            }\n        };\n    }\n\n    function toElement(width, height, html) {\n        return A3(Element.newElement, width, height,\n                  { ctor: 'Custom'\n                  , type: 'evancz/elm-html'\n                  , render: render\n                  , update: update\n                  , model: html\n                  });\n    }\n\n    function render(model) {\n        var element = NativeElement.createNode('div');\n        element.appendChild(createElement(model));\n        return element;\n    }\n\n    function update(node, oldModel, newModel) {\n        var patches = diff(oldModel, newModel);\n        var newNode = patch(node.firstChild, patches)\n        if (newNode !== node.firstChild) {\n            node.replaceChild(newNode, node.firstChild)\n        }\n        return node;\n    }\n\n    function lazyRef(fn, a) {\n        function thunk() {\n            return fn(a);\n        }\n        return new Thunk(fn, [a], thunk);\n    }\n\n    function lazyRef2(fn, a, b) {\n        function thunk() {\n            return A2(fn, a, b);\n        }\n        return new Thunk(fn, [a,b], thunk);\n    }\n\n    function lazyRef3(fn, a, b, c) {\n        function thunk() {\n            return A3(fn, a, b, c);\n        }\n        return new Thunk(fn, [a,b,c], thunk);\n    }\n\n    function Thunk(fn, args, thunk) {\n        this.fn = fn;\n        this.args = args;\n        this.vnode = null;\n        this.key = undefined;\n        this.thunk = thunk;\n    }\n\n    Thunk.prototype.type = \"Thunk\";\n    Thunk.prototype.update = updateThunk;\n    Thunk.prototype.render = renderThunk;\n\n    function shouldUpdate(current, previous) {\n        if (current.fn !== previous.fn) {\n            return true;\n        }\n\n        // if it's the same function, we know the number of args must match\n        var cargs = current.args;\n        var pargs = previous.args;\n\n        for (var i = cargs.length; i--; ) {\n            if (cargs[i] !== pargs[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function updateThunk(previous, domNode) {\n        if (!shouldUpdate(this, previous)) {\n            this.vnode = previous.vnode;\n            return;\n        }\n\n        if (!this.vnode) {\n            this.vnode = this.thunk();\n        }\n\n        var patches = diff(previous.vnode, this.vnode);\n        patch(domNode, patches);\n    }\n\n    function renderThunk() {\n        return this.thunk();\n    }\n\n    return Elm.Native.VirtualDom.values = {\n        node: F3(node),\n        text: text,\n        on: F3(on),\n\n        property: F2(property),\n\n        lazy: F2(lazyRef),\n        lazy2: F3(lazyRef2),\n        lazy3: F4(lazyRef3),\n\n        toElement: F3(toElement),\n        fromElement: fromElement\n    };\n};\n\n},{\"data-set\":2,\"dom-delegator\":8,\"vdom/create-element\":18,\"vdom/patch\":24,\"vtree/diff\":26,\"vtree/is-vhook\":29,\"vtree/vnode\":36,\"vtree/vtext\":38}],40:[function(require,module,exports){\n\n},{}]},{},[39]);\n\nElm.Native = Elm.Native || {};\nElm.Native.Window = {};\nElm.Native.Window.make = function(localRuntime) {\n\n    localRuntime.Native = localRuntime.Native || {};\n    localRuntime.Native.Window = localRuntime.Native.Window || {};\n    if (localRuntime.Native.Window.values) {\n        return localRuntime.Native.Window.values;\n    }\n\n    var Signal = Elm.Signal.make(localRuntime);\n    var NS = Elm.Native.Signal.make(localRuntime);\n    var Tuple2 = Elm.Native.Utils.make(localRuntime).Tuple2;\n\n    function getWidth() {\n        return localRuntime.node.clientWidth;\n    }\n    function getHeight() {\n        if (localRuntime.isFullscreen()) {\n            return window.innerHeight;\n        }\n        return localRuntime.node.clientHeight;\n    }\n\n    var dimensions = NS.input(Tuple2(getWidth(), getHeight()));\n    dimensions.defaultNumberOfKids = 2;\n\n    // Do not move width and height into Elm. By setting the default number of kids,\n    // the resize listener can be detached.\n    var width  = A2(Signal.map, function(p){return p._0;}, dimensions);\n    width.defaultNumberOfKids = 0;\n\n    var height = A2(Signal.map, function(p){return p._1;}, dimensions);\n    height.defaultNumberOfKids = 0;\n\n    function resizeIfNeeded() {\n        // Do not trigger event if the dimensions have not changed.\n        // This should be most of the time.\n        var w = getWidth();\n        var h = getHeight();\n        if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n\n        setTimeout(function () {\n            // Check again to see if the dimensions have changed.\n            // It is conceivable that the dimensions have changed\n            // again while some other event was being processed.\n            var w = getWidth();\n            var h = getHeight();\n            if (dimensions.value._0 === w && dimensions.value._1 === h) return;\n            localRuntime.notify(dimensions.id, Tuple2(w,h));\n        }, 0);\n    }\n    localRuntime.addListener([dimensions.id], window, 'resize', resizeIfNeeded);\n\n    return localRuntime.Native.Window.values = {\n        dimensions: dimensions,\n        width: width,\n        height: height,\n        resizeIfNeeded: resizeIfNeeded\n    };\n\n};\n\nElm.Result = Elm.Result || {};\nElm.Result.make = function (_elm) {\n   \"use strict\";\n   _elm.Result = _elm.Result || {};\n   if (_elm.Result.values)\n   return _elm.Result.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Result\",\n   $Maybe = Elm.Maybe.make(_elm);\n   var toMaybe = function (result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return $Maybe.Nothing;\n            case \"Ok\":\n            return $Maybe.Just(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 110 and 123\");\n      }();\n   };\n   var Err = function (a) {\n      return {ctor: \"Err\",_0: a};\n   };\n   var andThen = F2(function (result,\n   callback) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return callback(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 72 and 91\");\n      }();\n   });\n   var Ok = function (a) {\n      return {ctor: \"Ok\",_0: a};\n   };\n   var map = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(result._0);\n            case \"Ok\":\n            return Ok(f(result._0));}\n         _U.badCase($moduleName,\n         \"between lines 32 and 69\");\n      }();\n   });\n   var formatError = F2(function (f,\n   result) {\n      return function () {\n         switch (result.ctor)\n         {case \"Err\":\n            return Err(f(result._0));\n            case \"Ok\":\n            return Ok(result._0);}\n         _U.badCase($moduleName,\n         \"between lines 94 and 107\");\n      }();\n   });\n   var fromMaybe = F2(function (err,\n   maybe) {\n      return function () {\n         switch (maybe.ctor)\n         {case \"Just\":\n            return Ok(maybe._0);\n            case \"Nothing\":\n            return Err(err);}\n         _U.badCase($moduleName,\n         \"between lines 126 and 128\");\n      }();\n   });\n   _elm.Result.values = {_op: _op\n                        ,Ok: Ok\n                        ,Err: Err\n                        ,map: map\n                        ,andThen: andThen\n                        ,formatError: formatError\n                        ,toMaybe: toMaybe\n                        ,fromMaybe: fromMaybe};\n   return _elm.Result.values;\n};\nElm.Signal = Elm.Signal || {};\nElm.Signal.make = function (_elm) {\n   \"use strict\";\n   _elm.Signal = _elm.Signal || {};\n   if (_elm.Signal.values)\n   return _elm.Signal.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Signal\",\n   $Basics = Elm.Basics.make(_elm),\n   $List = Elm.List.make(_elm),\n   $Native$Signal = Elm.Native.Signal.make(_elm);\n   var subscribe = $Native$Signal.subscribe;\n   var send = $Native$Signal.send;\n   var channel = $Native$Signal.input;\n   var Message = {ctor: \"Message\"};\n   var Channel = {ctor: \"Channel\"};\n   _op[\"~\"] = F2(function (sf,s) {\n      return A3($Native$Signal.map2,\n      F2(function (f,x) {\n         return f(x);\n      }),\n      sf,\n      s);\n   });\n   _op[\"<~\"] = F2(function (f,s) {\n      return A2($Native$Signal.map,\n      f,\n      s);\n   });\n   var sampleOn = $Native$Signal.sampleOn;\n   var dropRepeats = $Native$Signal.dropRepeats;\n   var dropIf = $Native$Signal.dropIf;\n   var keepIf = $Native$Signal.keepIf;\n   var keepWhen = F3(function (bs,\n   def,\n   sig) {\n      return A2(_op[\"<~\"],\n      $Basics.snd,\n      A3(keepIf,\n      $Basics.fst,\n      {ctor: \"_Tuple2\"\n      ,_0: false\n      ,_1: def},\n      A2(_op[\"~\"],\n      A2(_op[\"<~\"],\n      F2(function (v0,v1) {\n         return {ctor: \"_Tuple2\"\n                ,_0: v0\n                ,_1: v1};\n      }),\n      A2(sampleOn,sig,bs)),\n      sig)));\n   });\n   var dropWhen = function (bs) {\n      return keepWhen(A2(_op[\"<~\"],\n      $Basics.not,\n      bs));\n   };\n   var merge = $Native$Signal.merge;\n   var mergeMany = function (signals) {\n      return A2($List.foldr1,\n      merge,\n      signals);\n   };\n   var foldp = $Native$Signal.foldp;\n   var map5 = $Native$Signal.map5;\n   var map4 = $Native$Signal.map4;\n   var map3 = $Native$Signal.map3;\n   var map2 = $Native$Signal.map2;\n   var map = $Native$Signal.map;\n   var constant = $Native$Signal.constant;\n   var Signal = {ctor: \"Signal\"};\n   _elm.Signal.values = {_op: _op\n                        ,Signal: Signal\n                        ,constant: constant\n                        ,map: map\n                        ,map2: map2\n                        ,map3: map3\n                        ,map4: map4\n                        ,map5: map5\n                        ,foldp: foldp\n                        ,merge: merge\n                        ,mergeMany: mergeMany\n                        ,keepIf: keepIf\n                        ,dropIf: dropIf\n                        ,keepWhen: keepWhen\n                        ,dropWhen: dropWhen\n                        ,dropRepeats: dropRepeats\n                        ,sampleOn: sampleOn\n                        ,Channel: Channel\n                        ,Message: Message\n                        ,channel: channel\n                        ,send: send\n                        ,subscribe: subscribe};\n   return _elm.Signal.values;\n};\nElm.String = Elm.String || {};\nElm.String.make = function (_elm) {\n   \"use strict\";\n   _elm.String = _elm.String || {};\n   if (_elm.String.values)\n   return _elm.String.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"String\",\n   $Maybe = Elm.Maybe.make(_elm),\n   $Native$String = Elm.Native.String.make(_elm),\n   $Result = Elm.Result.make(_elm);\n   var fromList = $Native$String.fromList;\n   var toList = $Native$String.toList;\n   var toFloat = $Native$String.toFloat;\n   var toInt = $Native$String.toInt;\n   var indices = $Native$String.indexes;\n   var indexes = $Native$String.indexes;\n   var endsWith = $Native$String.endsWith;\n   var startsWith = $Native$String.startsWith;\n   var contains = $Native$String.contains;\n   var all = $Native$String.all;\n   var any = $Native$String.any;\n   var toLower = $Native$String.toLower;\n   var toUpper = $Native$String.toUpper;\n   var lines = $Native$String.lines;\n   var words = $Native$String.words;\n   var trimRight = $Native$String.trimRight;\n   var trimLeft = $Native$String.trimLeft;\n   var trim = $Native$String.trim;\n   var padRight = $Native$String.padRight;\n   var padLeft = $Native$String.padLeft;\n   var pad = $Native$String.pad;\n   var dropRight = $Native$String.dropRight;\n   var dropLeft = $Native$String.dropLeft;\n   var right = $Native$String.right;\n   var left = $Native$String.left;\n   var slice = $Native$String.slice;\n   var repeat = $Native$String.repeat;\n   var join = $Native$String.join;\n   var split = $Native$String.split;\n   var foldr = $Native$String.foldr;\n   var foldl = $Native$String.foldl;\n   var reverse = $Native$String.reverse;\n   var filter = $Native$String.filter;\n   var map = $Native$String.map;\n   var length = $Native$String.length;\n   var concat = $Native$String.concat;\n   var append = $Native$String.append;\n   var uncons = $Native$String.uncons;\n   var cons = $Native$String.cons;\n   var fromChar = function ($char) {\n      return A2(cons,$char,\"\");\n   };\n   var isEmpty = $Native$String.isEmpty;\n   _elm.String.values = {_op: _op\n                        ,isEmpty: isEmpty\n                        ,cons: cons\n                        ,fromChar: fromChar\n                        ,uncons: uncons\n                        ,append: append\n                        ,concat: concat\n                        ,length: length\n                        ,map: map\n                        ,filter: filter\n                        ,reverse: reverse\n                        ,foldl: foldl\n                        ,foldr: foldr\n                        ,split: split\n                        ,join: join\n                        ,repeat: repeat\n                        ,slice: slice\n                        ,left: left\n                        ,right: right\n                        ,dropLeft: dropLeft\n                        ,dropRight: dropRight\n                        ,pad: pad\n                        ,padLeft: padLeft\n                        ,padRight: padRight\n                        ,trim: trim\n                        ,trimLeft: trimLeft\n                        ,trimRight: trimRight\n                        ,words: words\n                        ,lines: lines\n                        ,toUpper: toUpper\n                        ,toLower: toLower\n                        ,any: any\n                        ,all: all\n                        ,contains: contains\n                        ,startsWith: startsWith\n                        ,endsWith: endsWith\n                        ,indexes: indexes\n                        ,indices: indices\n                        ,toInt: toInt\n                        ,toFloat: toFloat\n                        ,toList: toList\n                        ,fromList: fromList};\n   return _elm.String.values;\n};\nElm.Task = Elm.Task || {};\nElm.Task.make = function (_elm) {\n   \"use strict\";\n   _elm.Task = _elm.Task || {};\n   if (_elm.Task.values)\n   return _elm.Task.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Task\",\n   $Basics = Elm.Basics.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Result = Elm.Result.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm);\n   var onFinish = F2(function (enterMessage,\n   escapeMessage) {\n      return function () {\n         var select = function (key) {\n            return function () {\n               switch (key)\n               {case 13:\n                  return $Result.Ok(enterMessage);\n                  case 27:\n                  return $Result.Ok(escapeMessage);}\n               return $Result.Err(\"Not a \\'finish\\' key, such as ENTER or ESCAPE\");\n            }();\n         };\n         return A3($Html$Events.on,\n         \"keydown\",\n         A2($Json$Decode.customDecoder,\n         $Html$Events.keyCode,\n         select),\n         $Basics.identity);\n      }();\n   });\n   var update = F2(function (update,\n   task) {\n      return function () {\n         switch (update.ctor)\n         {case \"Cancel\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Nothing]],\n              task));\n            case \"Commit\":\n            return function () {\n                 var _v4 = task.edits;\n                 switch (_v4.ctor)\n                 {case \"Just\":\n                    return function () {\n                         var description = $String.trim(_v4._0);\n                         return $String.isEmpty(description) ? $Maybe.Nothing : $Maybe.Just(_U.replace([[\"edits\"\n                                                                                                        ,$Maybe.Nothing]\n                                                                                                       ,[\"description\"\n                                                                                                        ,description]],\n                         task));\n                      }();\n                    case \"Nothing\":\n                    return $Maybe.Just(task);}\n                 _U.badCase($moduleName,\n                 \"between lines 56 and 69\");\n              }();\n            case \"Completed\":\n            return $Maybe.Just(_U.replace([[\"completed\"\n                                           ,update._0]],\n              task));\n            case \"Delete\":\n            return $Maybe.Nothing;\n            case \"Edit\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(update._0)]],\n              task));\n            case \"Focus\":\n            return $Maybe.Just(_U.replace([[\"edits\"\n                                           ,$Maybe.Just(task.description)]],\n              task));}\n         _U.badCase($moduleName,\n         \"between lines 45 and 73\");\n      }();\n   });\n   var Delete = {ctor: \"Delete\"};\n   var Completed = function (a) {\n      return {ctor: \"Completed\"\n             ,_0: a};\n   };\n   var Commit = {ctor: \"Commit\"};\n   var Cancel = {ctor: \"Cancel\"};\n   var Edit = function (a) {\n      return {ctor: \"Edit\",_0: a};\n   };\n   var Focus = {ctor: \"Focus\"};\n   var view = F2(function (channel,\n   task) {\n      return function () {\n         var description = A2($Maybe.withDefault,\n         task.description,\n         task.edits);\n         var className = A2($Basics._op[\"++\"],\n         task.completed ? \"completed \" : \"\",\n         function () {\n            var _v6 = task.edits;\n            switch (_v6.ctor)\n            {case \"Just\": return \"editing\";\n               case \"Nothing\": return \"\";}\n            _U.badCase($moduleName,\n            \"between lines 82 and 86\");\n         }());\n         return A2($Html.li,\n         _L.fromArray([$Html$Attributes.$class(className)]),\n         _L.fromArray([A2($Html.div,\n                      _L.fromArray([$Html$Attributes.$class(\"view\")]),\n                      _L.fromArray([A2($Html.input,\n                                   _L.fromArray([$Html$Attributes.$class(\"toggle\")\n                                                ,$Html$Attributes.type$(\"checkbox\")\n                                                ,$Html$Attributes.checked(task.completed)\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Completed($Basics.not(task.completed))}))]),\n                                   _L.fromArray([]))\n                                   ,A2($Html.label,\n                                   _L.fromArray([$Html$Events.onDoubleClick(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Focus}))]),\n                                   _L.fromArray([$Html.text(description)]))\n                                   ,A2($Html.button,\n                                   _L.fromArray([$Html$Attributes.$class(\"destroy\")\n                                                ,$Html$Events.onClick(A2($LocalChannel.send,\n                                                channel,\n                                                {ctor: \"_Tuple2\"\n                                                ,_0: task.id\n                                                ,_1: Delete}))]),\n                                   _L.fromArray([]))]))\n                      ,A2($Html.input,\n                      _L.fromArray([$Html$Attributes.$class(\"edit\")\n                                   ,$Html$Attributes.value(description)\n                                   ,$Html$Attributes.name(\"title\")\n                                   ,$Html$Attributes.id(A2($Basics._op[\"++\"],\n                                   \"todo-\",\n                                   $Basics.toString(task.id)))\n                                   ,A3($Html$Events.on,\n                                   \"input\",\n                                   $Html$Events.targetValue,\n                                   function (desc) {\n                                      return A2($LocalChannel.send,\n                                      channel,\n                                      {ctor: \"_Tuple2\"\n                                      ,_0: task.id\n                                      ,_1: Edit(desc)});\n                                   })\n                                   ,$Html$Events.onBlur(A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}))\n                                   ,A2(onFinish,\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Commit}),\n                                   A2($LocalChannel.send,\n                                   channel,\n                                   {ctor: \"_Tuple2\"\n                                   ,_0: task.id\n                                   ,_1: Cancel}))]),\n                      _L.fromArray([]))]));\n      }();\n   });\n   var init = F2(function (desc,\n   id) {\n      return {_: {}\n             ,completed: false\n             ,description: desc\n             ,edits: $Maybe.Nothing\n             ,id: id};\n   });\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,completed: b\n             ,description: a\n             ,edits: c\n             ,id: d};\n   });\n   _elm.Task.values = {_op: _op\n                      ,Model: Model\n                      ,init: init\n                      ,Focus: Focus\n                      ,Edit: Edit\n                      ,Cancel: Cancel\n                      ,Commit: Commit\n                      ,Completed: Completed\n                      ,Delete: Delete\n                      ,update: update\n                      ,view: view\n                      ,onFinish: onFinish};\n   return _elm.Task.values;\n};\nElm.Todo = Elm.Todo || {};\nElm.Todo.make = function (_elm) {\n   \"use strict\";\n   _elm.Todo = _elm.Todo || {};\n   if (_elm.Todo.values)\n   return _elm.Todo.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Todo\",\n   $Basics = Elm.Basics.make(_elm),\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Html = Elm.Html.make(_elm),\n   $Html$Attributes = Elm.Html.Attributes.make(_elm),\n   $Html$Events = Elm.Html.Events.make(_elm),\n   $Html$Lazy = Elm.Html.Lazy.make(_elm),\n   $List = Elm.List.make(_elm),\n   $LocalChannel = Elm.LocalChannel.make(_elm),\n   $Maybe = Elm.Maybe.make(_elm),\n   $Signal = Elm.Signal.make(_elm),\n   $String = Elm.String.make(_elm),\n   $Task = Elm.Task.make(_elm),\n   $Window = Elm.Window.make(_elm);\n   var route = _P.portIn(\"route\",\n   _P.incomingSignal(function (v) {\n      return typeof v === \"string\" || typeof v === \"object\" && v instanceof String ? v : _U.badPort(\"a string\",\n      v);\n   }));\n   var savedModel = _P.portIn(\"savedModel\",\n   function (v) {\n      return v === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v === \"object\" && \"tasks\" in v && \"field\" in v && \"uid\" in v && \"visibility\" in v ? {_: {}\n                                                                                                                                                                              ,tasks: typeof v.tasks === \"object\" && v.tasks instanceof Array ? Elm.Native.List.make(_elm).fromArray(v.tasks.map(function (v) {\n                                                                                                                                                                                 return typeof v === \"object\" && \"description\" in v && \"completed\" in v && \"edits\" in v && \"id\" in v ? {_: {}\n                                                                                                                                                                                                                                                                                       ,description: typeof v.description === \"string\" || typeof v.description === \"object\" && v.description instanceof String ? v.description : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.description)\n                                                                                                                                                                                                                                                                                       ,completed: typeof v.completed === \"boolean\" ? v.completed : _U.badPort(\"a boolean (true or false)\",\n                                                                                                                                                                                                                                                                                       v.completed)\n                                                                                                                                                                                                                                                                                       ,edits: v.edits === null ? Elm.Maybe.make(_elm).Nothing : Elm.Maybe.make(_elm).Just(typeof v.edits === \"string\" || typeof v.edits === \"object\" && v.edits instanceof String ? v.edits : _U.badPort(\"a string\",\n                                                                                                                                                                                                                                                                                       v.edits))\n                                                                                                                                                                                                                                                                                       ,id: typeof v.id === \"number\" ? v.id : _U.badPort(\"a number\",\n                                                                                                                                                                                                                                                                                       v.id)} : _U.badPort(\"an object with fields \\'description\\', \\'completed\\', \\'edits\\', \\'id\\'\",\n                                                                                                                                                                                 v);\n                                                                                                                                                                              })) : _U.badPort(\"an array\",\n                                                                                                                                                                              v.tasks)\n                                                                                                                                                                              ,field: typeof v.field === \"string\" || typeof v.field === \"object\" && v.field instanceof String ? v.field : _U.badPort(\"a string\",\n                                                                                                                                                                              v.field)\n                                                                                                                                                                              ,uid: typeof v.uid === \"number\" ? v.uid : _U.badPort(\"a number\",\n                                                                                                                                                                              v.uid)\n                                                                                                                                                                              ,visibility: typeof v.visibility === \"string\" || typeof v.visibility === \"object\" && v.visibility instanceof String ? v.visibility : _U.badPort(\"a string\",\n                                                                                                                                                                              v.visibility)} : _U.badPort(\"an object with fields \\'tasks\\', \\'field\\', \\'uid\\', \\'visibility\\'\",\n      v));\n   });\n   var infoFooter = A2($Html.footer,\n   _L.fromArray([$Html$Attributes.id(\"info\")]),\n   _L.fromArray([A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Double-click to edit a todo\")]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Written by \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"https://github.com/evancz\")]),\n                             _L.fromArray([$Html.text(\"Evan Czaplicki\")]))]))\n                ,A2($Html.p,\n                _L.fromArray([]),\n                _L.fromArray([$Html.text(\"Part of \")\n                             ,A2($Html.a,\n                             _L.fromArray([$Html$Attributes.href(\"http://todomvc.com\")]),\n                             _L.fromArray([$Html.text(\"TodoMVC\")]))]))]));\n   var update = F2(function (action,\n   state) {\n      return function () {\n         switch (action.ctor)\n         {case \"Add\":\n            return function () {\n                 var description = $String.trim(state.field);\n                 return $String.isEmpty(description) ? state : _U.replace([[\"uid\"\n                                                                           ,state.uid + 1]\n                                                                          ,[\"field\"\n                                                                           ,\"\"]\n                                                                          ,[\"tasks\"\n                                                                           ,A2($Basics._op[\"++\"],\n                                                                           state.tasks,\n                                                                           _L.fromArray([A2($Task.init,\n                                                                           description,\n                                                                           state.uid)]))]],\n                 state);\n              }();\n            case \"ChangeVisibility\":\n            return _U.replace([[\"visibility\"\n                               ,action._0]],\n              state);\n            case \"CheckAll\":\n            return function () {\n                 var updateTask = function (t) {\n                    return _U.replace([[\"completed\"\n                                       ,action._0]],\n                    t);\n                 };\n                 return _U.replace([[\"tasks\"\n                                    ,A2($List.map,\n                                    updateTask,\n                                    state.tasks)]],\n                 state);\n              }();\n            case \"DeleteComplete\":\n            return _U.replace([[\"tasks\"\n                               ,A2($List.filter,\n                               function ($) {\n                                  return $Basics.not(function (_) {\n                                     return _.completed;\n                                  }($));\n                               },\n                               state.tasks)]],\n              state);\n            case \"NoOp\": return state;\n            case \"UpdateField\":\n            return _U.replace([[\"field\"\n                               ,action._0]],\n              state);\n            case \"UpdateTask\":\n            switch (action._0.ctor)\n              {case \"_Tuple2\":\n                 return function () {\n                      var updateTask = function (t) {\n                         return _U.eq(t.id,\n                         action._0._0) ? A2($Task.update,\n                         action._0._1,\n                         t) : $Maybe.Just(t);\n                      };\n                      return _U.replace([[\"tasks\"\n                                         ,A2($List.filterMap,\n                                         updateTask,\n                                         state.tasks)]],\n                      state);\n                   }();}\n              break;}\n         _U.badCase($moduleName,\n         \"between lines 71 and 100\");\n      }();\n   });\n   var ChangeVisibility = function (a) {\n      return {ctor: \"ChangeVisibility\"\n             ,_0: a};\n   };\n   var CheckAll = function (a) {\n      return {ctor: \"CheckAll\"\n             ,_0: a};\n   };\n   var DeleteComplete = {ctor: \"DeleteComplete\"};\n   var UpdateTask = function (a) {\n      return {ctor: \"UpdateTask\"\n             ,_0: a};\n   };\n   var Add = {ctor: \"Add\"};\n   var UpdateField = function (a) {\n      return {ctor: \"UpdateField\"\n             ,_0: a};\n   };\n   var NoOp = {ctor: \"NoOp\"};\n   var actions = $Signal.channel(NoOp);\n   var taskEntry = function (task) {\n      return A2($Html.header,\n      _L.fromArray([$Html$Attributes.id(\"header\")]),\n      _L.fromArray([A2($Html.h1,\n                   _L.fromArray([]),\n                   _L.fromArray([$Html.text(\"todos\")]))\n                   ,A2($Html.input,\n                   _L.fromArray([$Html$Attributes.id(\"new-todo\")\n                                ,$Html$Attributes.placeholder(\"What needs to be done?\")\n                                ,$Html$Attributes.autofocus(true)\n                                ,$Html$Attributes.value(task)\n                                ,$Html$Attributes.name(\"newTodo\")\n                                ,A3($Html$Events.on,\n                                \"input\",\n                                $Html$Events.targetValue,\n                                function ($) {\n                                   return $Signal.send(actions)(UpdateField($));\n                                })\n                                ,A2($Task.onFinish,\n                                A2($Signal.send,actions,Add),\n                                A2($Signal.send,\n                                actions,\n                                NoOp))]),\n                   _L.fromArray([]))]));\n   };\n   var visibilitySwap = F3(function (uri,\n   visibility,\n   actualVisibility) {\n      return function () {\n         var className = _U.eq(visibility,\n         actualVisibility) ? \"selected\" : \"\";\n         return A2($Html.li,\n         _L.fromArray([$Html$Events.onClick(A2($Signal.send,\n         actions,\n         ChangeVisibility(visibility)))]),\n         _L.fromArray([A2($Html.a,\n         _L.fromArray([$Html$Attributes.$class(className)\n                      ,$Html$Attributes.href(uri)]),\n         _L.fromArray([$Html.text(visibility)]))]));\n      }();\n   });\n   var controls = F2(function (visibility,\n   tasks) {\n      return function () {\n         var tasksCompleted = $List.length(A2($List.filter,\n         function (_) {\n            return _.completed;\n         },\n         tasks));\n         var tasksLeft = $List.length(tasks) - tasksCompleted;\n         var item_ = _U.eq(tasksLeft,\n         1) ? \" item\" : \" items\";\n         return A2($Html.footer,\n         _L.fromArray([$Html$Attributes.id(\"footer\")\n                      ,$Html$Attributes.hidden($List.isEmpty(tasks))]),\n         _L.fromArray([A2($Html.span,\n                      _L.fromArray([$Html$Attributes.id(\"todo-count\")]),\n                      _L.fromArray([A2($Html.strong,\n                                   _L.fromArray([]),\n                                   _L.fromArray([$Html.text($Basics.toString(tasksLeft))]))\n                                   ,$Html.text(A2($Basics._op[\"++\"],\n                                   item_,\n                                   \" left\"))]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"filters\")]),\n                      _L.fromArray([A3(visibilitySwap,\n                                   \"#/\",\n                                   \"All\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/active\",\n                                   \"Active\",\n                                   visibility)\n                                   ,$Html.text(\" \")\n                                   ,A3(visibilitySwap,\n                                   \"#/completed\",\n                                   \"Completed\",\n                                   visibility)]))\n                      ,A2($Html.button,\n                      _L.fromArray([$Html$Attributes.$class(\"clear-completed\")\n                                   ,$Html$Attributes.id(\"clear-completed\")\n                                   ,$Html$Attributes.hidden(_U.eq(tasksCompleted,\n                                   0))\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   DeleteComplete))]),\n                      _L.fromArray([$Html.text(A2($Basics._op[\"++\"],\n                      \"Clear completed (\",\n                      A2($Basics._op[\"++\"],\n                      $Basics.toString(tasksCompleted),\n                      \")\")))]))]));\n      }();\n   });\n   var allActions = A2($Signal.merge,\n   $Signal.subscribe(actions),\n   A2($Signal.map,\n   ChangeVisibility,\n   route));\n   var taskActions = A2($LocalChannel.create,\n   UpdateTask,\n   actions);\n   var taskList = F2(function (visibility,\n   tasks) {\n      return function () {\n         var cssVisibility = $List.isEmpty(tasks) ? \"hidden\" : \"visible\";\n         var allCompleted = A2($List.all,\n         function (_) {\n            return _.completed;\n         },\n         tasks);\n         var isVisible = function (todo) {\n            return function () {\n               switch (visibility)\n               {case \"Active\":\n                  return $Basics.not(todo.completed);\n                  case \"All\": return true;\n                  case \"Completed\":\n                  return todo.completed;}\n               _U.badCase($moduleName,\n               \"between lines 140 and 145\");\n            }();\n         };\n         return A2($Html.section,\n         _L.fromArray([$Html$Attributes.id(\"main\")\n                      ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                            ,_0: \"visibility\"\n                                                            ,_1: cssVisibility}]))]),\n         _L.fromArray([A2($Html.input,\n                      _L.fromArray([$Html$Attributes.id(\"toggle-all\")\n                                   ,$Html$Attributes.type$(\"checkbox\")\n                                   ,$Html$Attributes.name(\"toggle\")\n                                   ,$Html$Attributes.checked(allCompleted)\n                                   ,$Html$Events.onClick(A2($Signal.send,\n                                   actions,\n                                   CheckAll($Basics.not(allCompleted))))]),\n                      _L.fromArray([]))\n                      ,A2($Html.label,\n                      _L.fromArray([$Html$Attributes.$for(\"toggle-all\")]),\n                      _L.fromArray([$Html.text(\"Mark all as complete\")]))\n                      ,A2($Html.ul,\n                      _L.fromArray([$Html$Attributes.id(\"todo-list\")]),\n                      A2($List.map,\n                      $Task.view(taskActions),\n                      A2($List.filter,\n                      isVisible,\n                      tasks)))]));\n      }();\n   });\n   var view = function (state) {\n      return A2($Html.div,\n      _L.fromArray([$Html$Attributes.$class(\"todomvc-wrapper\")\n                   ,$Html$Attributes.style(_L.fromArray([{ctor: \"_Tuple2\"\n                                                         ,_0: \"visibility\"\n                                                         ,_1: \"hidden\"}]))]),\n      _L.fromArray([A2($Html.section,\n                   _L.fromArray([$Html$Attributes.id(\"todoapp\")]),\n                   _L.fromArray([A2($Html$Lazy.lazy,\n                                taskEntry,\n                                state.field)\n                                ,A3($Html$Lazy.lazy2,\n                                taskList,\n                                state.visibility,\n                                state.tasks)\n                                ,A3($Html$Lazy.lazy2,\n                                controls,\n                                state.visibility,\n                                state.tasks)]))\n                   ,infoFooter]));\n   };\n   var scene = F2(function (model,\n   _v8) {\n      return function () {\n         switch (_v8.ctor)\n         {case \"_Tuple2\":\n            return A4($Graphics$Element.container,\n              _v8._0,\n              _v8._1,\n              $Graphics$Element.midTop,\n              A3($Html.toElement,\n              550,\n              _v8._1,\n              view(model)));}\n         _U.badCase($moduleName,\n         \"on line 231, column 5 to 54\");\n      }();\n   });\n   var focus = _P.portOut(\"focus\",\n   _P.outgoingSignal(function (v) {\n      return v.ctor === \"Nothing\" ? null : v._0;\n   }),\n   function () {\n      var toSelector = function (action) {\n         return function () {\n            switch (action.ctor)\n            {case \"UpdateTask\":\n               switch (action._0.ctor)\n                 {case \"_Tuple2\":\n                    switch (action._0._1.ctor)\n                      {case \"Focus\":\n                         return $Maybe.Just(action._0._0);}\n                      break;}\n                 break;}\n            return $Maybe.Nothing;\n         }();\n      };\n      return A2($Signal.map,\n      toSelector,\n      $Signal.subscribe(actions));\n   }());\n   var emptyModel = {_: {}\n                    ,field: \"\"\n                    ,tasks: _L.fromArray([])\n                    ,uid: 0\n                    ,visibility: \"All\"};\n   var initialModel = A2($Maybe.withDefault,\n   emptyModel,\n   savedModel);\n   var model = A3($Signal.foldp,\n   update,\n   initialModel,\n   allActions);\n   var main = A3($Signal.map2,\n   scene,\n   model,\n   $Window.dimensions);\n   var save = _P.portOut(\"save\",\n   _P.outgoingSignal(function (v) {\n      return {tasks: Elm.Native.List.make(_elm).toArray(v.tasks).map(function (v) {\n                return {description: v.description\n                       ,completed: v.completed\n                       ,edits: v.edits.ctor === \"Nothing\" ? null : v.edits._0\n                       ,id: v.id};\n             })\n             ,field: v.field\n             ,uid: v.uid\n             ,visibility: v.visibility};\n   }),\n   model);\n   var Model = F4(function (a,\n   b,\n   c,\n   d) {\n      return {_: {}\n             ,field: b\n             ,tasks: a\n             ,uid: c\n             ,visibility: d};\n   });\n   _elm.Todo.values = {_op: _op\n                      ,Model: Model\n                      ,emptyModel: emptyModel\n                      ,NoOp: NoOp\n                      ,UpdateField: UpdateField\n                      ,Add: Add\n                      ,UpdateTask: UpdateTask\n                      ,DeleteComplete: DeleteComplete\n                      ,CheckAll: CheckAll\n                      ,ChangeVisibility: ChangeVisibility\n                      ,update: update\n                      ,view: view\n                      ,taskEntry: taskEntry\n                      ,taskList: taskList\n                      ,controls: controls\n                      ,visibilitySwap: visibilitySwap\n                      ,infoFooter: infoFooter\n                      ,main: main\n                      ,scene: scene\n                      ,model: model\n                      ,initialModel: initialModel\n                      ,allActions: allActions\n                      ,actions: actions\n                      ,taskActions: taskActions};\n   return _elm.Todo.values;\n};\nElm.VirtualDom = Elm.VirtualDom || {};\nElm.VirtualDom.make = function (_elm) {\n   \"use strict\";\n   _elm.VirtualDom = _elm.VirtualDom || {};\n   if (_elm.VirtualDom.values)\n   return _elm.VirtualDom.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"VirtualDom\",\n   $Graphics$Element = Elm.Graphics.Element.make(_elm),\n   $Json$Decode = Elm.Json.Decode.make(_elm),\n   $Native$VirtualDom = Elm.Native.VirtualDom.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var lazy3 = $Native$VirtualDom.lazy3;\n   var lazy2 = $Native$VirtualDom.lazy2;\n   var lazy = $Native$VirtualDom.lazy;\n   var on = $Native$VirtualDom.on;\n   var property = $Native$VirtualDom.property;\n   var Property = {ctor: \"Property\"};\n   var fromElement = $Native$VirtualDom.fromElement;\n   var toElement = $Native$VirtualDom.toElement;\n   var text = $Native$VirtualDom.text;\n   var node = $Native$VirtualDom.node;\n   var Node = {ctor: \"Node\"};\n   _elm.VirtualDom.values = {_op: _op\n                            ,Node: Node\n                            ,node: node\n                            ,text: text\n                            ,toElement: toElement\n                            ,fromElement: fromElement\n                            ,Property: Property\n                            ,property: property\n                            ,on: on\n                            ,lazy: lazy\n                            ,lazy2: lazy2\n                            ,lazy3: lazy3};\n   return _elm.VirtualDom.values;\n};\nElm.Window = Elm.Window || {};\nElm.Window.make = function (_elm) {\n   \"use strict\";\n   _elm.Window = _elm.Window || {};\n   if (_elm.Window.values)\n   return _elm.Window.values;\n   var _op = {},\n   _N = Elm.Native,\n   _U = _N.Utils.make(_elm),\n   _L = _N.List.make(_elm),\n   _P = _N.Ports.make(_elm),\n   $moduleName = \"Window\",\n   $Native$Window = Elm.Native.Window.make(_elm),\n   $Signal = Elm.Signal.make(_elm);\n   var height = $Native$Window.height;\n   var width = $Native$Window.width;\n   var dimensions = $Native$Window.dimensions;\n   _elm.Window.values = {_op: _op\n                        ,dimensions: dimensions\n                        ,width: width\n                        ,height: height};\n   return _elm.Window.values;\n};\n"}],"Post":[{"title":"必要的装备（2）iTerm","date":"2016-05-20T16:00:00.000Z","_content":"\niTerm 比 OS X 里自带的 Terminal 不知道要强大多少倍…… 看两张图片就知道了。更多的功能介绍，可直接移步 [iTer 官方网站](https://www.iterm2.com/features.html)了解。\n\n{% img /images/iterm-autocomplete.png %}\n\n{% img /images/iterm-pastehistory.png %}\n\n## 在 Finder 上添加一个按钮，“Open here in iTerm”\n\n\n用 Automator 创建一个 Application（不是 Workflow 或者 Service；与[创建 Sublimetext 的 Finder 工具栏应用一样](http://xiaolai.li/#在-finder-上添加个按钮open-with-sublimetext)），添加一个 AppleScript:\n\n{% codeblock \"Open here in iTerm\" lang:AppleScript %}\non run {input, parameters}\n  tell application \"Finder\"\n    set dir_path to quoted form of (POSIX path of (folder of the front window as alias))\n  end tell\n  CD_to(dir_path)\nend run\n\non CD_to(theDir)\n  tell application \"iTerm\"\n    activate\n\n    try\n      set sesh to current session of current terminal\n    on error\n      set term to (make new terminal)\n      tell term\n        launch session \"Default\"\n        set sesh to current session\n      end tell\n    end try\n\n    tell sesh\n      write text \"cd \" & theDir & \";clear;\"\n    end tell\n  end tell\nend CD_to\n{% endcodeblock %}\n\n而后把这个 Application 保存到 ```~/Applications``` 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……","source":"_posts/iterm.md","raw":"---\ntitle: 必要的装备（2）iTerm\ndate: 2016-05-21\ntags: 工具\n---\n\niTerm 比 OS X 里自带的 Terminal 不知道要强大多少倍…… 看两张图片就知道了。更多的功能介绍，可直接移步 [iTer 官方网站](https://www.iterm2.com/features.html)了解。\n\n{% img /images/iterm-autocomplete.png %}\n\n{% img /images/iterm-pastehistory.png %}\n\n## 在 Finder 上添加一个按钮，“Open here in iTerm”\n\n\n用 Automator 创建一个 Application（不是 Workflow 或者 Service；与[创建 Sublimetext 的 Finder 工具栏应用一样](http://xiaolai.li/#在-finder-上添加个按钮open-with-sublimetext)），添加一个 AppleScript:\n\n{% codeblock \"Open here in iTerm\" lang:AppleScript %}\non run {input, parameters}\n  tell application \"Finder\"\n    set dir_path to quoted form of (POSIX path of (folder of the front window as alias))\n  end tell\n  CD_to(dir_path)\nend run\n\non CD_to(theDir)\n  tell application \"iTerm\"\n    activate\n\n    try\n      set sesh to current session of current terminal\n    on error\n      set term to (make new terminal)\n      tell term\n        launch session \"Default\"\n        set sesh to current session\n      end tell\n    end try\n\n    tell sesh\n      write text \"cd \" & theDir & \";clear;\"\n    end tell\n  end tell\nend CD_to\n{% endcodeblock %}\n\n而后把这个 Application 保存到 ```~/Applications``` 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……","slug":"iterm","published":1,"updated":"2016-05-28T17:24:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbp40000x9ltrph7yobh","content":"<p>iTerm 比 OS X 里自带的 Terminal 不知道要强大多少倍…… 看两张图片就知道了。更多的功能介绍，可直接移步 <a href=\"https://www.iterm2.com/features.html\" target=\"_blank\" rel=\"external\">iTer 官方网站</a>了解。</p>\n<img src=\"/images/iterm-autocomplete.png\">\n<img src=\"/images/iterm-pastehistory.png\">\n<h2 id=\"在-Finder-上添加一个按钮，“Open-here-in-iTerm”\"><a href=\"#在-Finder-上添加一个按钮，“Open-here-in-iTerm”\" class=\"headerlink\" title=\"在 Finder 上添加一个按钮，“Open here in iTerm”\"></a>在 Finder 上添加一个按钮，“Open here in iTerm”</h2><p>用 Automator 创建一个 Application（不是 Workflow 或者 Service；与<a href=\"http://xiaolai.li/#在-finder-上添加个按钮open-with-sublimetext\">创建 Sublimetext 的 Finder 工具栏应用一样</a>），添加一个 AppleScript:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Open here in iTerm</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">    <span class=\"keyword\">set</span> dir_path <span class=\"keyword\">to</span> <span class=\"keyword\">quoted form</span> <span class=\"keyword\">of</span> (<span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>))</span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  CD_to(dir_path)</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">on</span> CD_to(theDir)</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">    <span class=\"built_in\">activate</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session <span class=\"keyword\">of</span> current terminal</span><br><span class=\"line\">    <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> term <span class=\"keyword\">to</span> (make new terminal)</span><br><span class=\"line\">      <span class=\"keyword\">tell</span> term</span><br><span class=\"line\">        <span class=\"built_in\">launch</span> session <span class=\"string\">\"Default\"</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> sesh</span><br><span class=\"line\">      <span class=\"built_in\">write</span> <span class=\"built_in\">text</span> <span class=\"string\">\"cd \"</span> &amp; theDir &amp; <span class=\"string\">\";clear;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> CD_to</span><br></pre></td></tr></table></figure>\n<p>而后把这个 Application 保存到 <code>~/Applications</code> 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……</p>\n","excerpt":"","more":"<p>iTerm 比 OS X 里自带的 Terminal 不知道要强大多少倍…… 看两张图片就知道了。更多的功能介绍，可直接移步 <a href=\"https://www.iterm2.com/features.html\">iTer 官方网站</a>了解。</p>\n<img src=\"/images/iterm-autocomplete.png\">\n<img src=\"/images/iterm-pastehistory.png\">\n<h2 id=\"在-Finder-上添加一个按钮，“Open-here-in-iTerm”\"><a href=\"#在-Finder-上添加一个按钮，“Open-here-in-iTerm”\" class=\"headerlink\" title=\"在 Finder 上添加一个按钮，“Open here in iTerm”\"></a>在 Finder 上添加一个按钮，“Open here in iTerm”</h2><p>用 Automator 创建一个 Application（不是 Workflow 或者 Service；与<a href=\"http://xiaolai.li/#在-finder-上添加个按钮open-with-sublimetext\">创建 Sublimetext 的 Finder 工具栏应用一样</a>），添加一个 AppleScript:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Open here in iTerm</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">    <span class=\"keyword\">set</span> dir_path <span class=\"keyword\">to</span> <span class=\"keyword\">quoted form</span> <span class=\"keyword\">of</span> (<span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>))</span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  CD_to(dir_path)</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">on</span> CD_to(theDir)</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">    <span class=\"built_in\">activate</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session <span class=\"keyword\">of</span> current terminal</span><br><span class=\"line\">    <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> term <span class=\"keyword\">to</span> (make new terminal)</span><br><span class=\"line\">      <span class=\"keyword\">tell</span> term</span><br><span class=\"line\">        <span class=\"built_in\">launch</span> session <span class=\"string\">\"Default\"</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> sesh</span><br><span class=\"line\">      <span class=\"built_in\">write</span> <span class=\"built_in\">text</span> <span class=\"string\">\"cd \"</span> &amp; theDir &amp; <span class=\"string\">\";clear;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> CD_to</span><br></pre></td></tr></table></figure>\n<p>而后把这个 Application 保存到 <code>~/Applications</code> 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……</p>\n"},{"title":"如何在 npm 上发布一个包 (npm module/package)","date":"2016-05-22T16:00:00.000Z","_content":"\n在 nmpjs.com 上注册一个帐号；\n\n{% codeblock %}\n$ npm adduser\nnpm install -g pakmanager\n{% endcodeblock %}\n\n编辑好 `package.json` 之后，把项目 push 到 github 的 repo 里；而后在要发布的包文件夹里执行：\n\n{% codeblock %}\n$ cd /path/to/your-project\n$ npm init\n$ pakmanager deps\n$ npm publish ./\n{% endcodeblock %}\n\n更新版本的方法是：\n\n```bash\ngit checkout v1.0.7\nnpm publish ./\n\ngit checkout v1.1.3\nnpm tag foobar@1.1.3 latest\n```\n\n发布之后，去 npmjs.com 上检查核实一下，就好像这里：\n\nhttps://www.npmjs.com/package/xpress-generator\n","source":"_posts/publish-an-npm-package.md","raw":"---\ntitle: 如何在 npm 上发布一个包 (npm module/package)\ndate: 2016-05-23\ntag: npm\n---\n\n在 nmpjs.com 上注册一个帐号；\n\n{% codeblock %}\n$ npm adduser\nnpm install -g pakmanager\n{% endcodeblock %}\n\n编辑好 `package.json` 之后，把项目 push 到 github 的 repo 里；而后在要发布的包文件夹里执行：\n\n{% codeblock %}\n$ cd /path/to/your-project\n$ npm init\n$ pakmanager deps\n$ npm publish ./\n{% endcodeblock %}\n\n更新版本的方法是：\n\n```bash\ngit checkout v1.0.7\nnpm publish ./\n\ngit checkout v1.1.3\nnpm tag foobar@1.1.3 latest\n```\n\n发布之后，去 npmjs.com 上检查核实一下，就好像这里：\n\nhttps://www.npmjs.com/package/xpress-generator\n","slug":"publish-an-npm-package","published":1,"updated":"2016-05-28T17:24:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbp80002x9lt55k5ki1m","content":"<p>在 nmpjs.com 上注册一个帐号；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm adduser</span><br><span class=\"line\">npm install -g pakmanager</span><br></pre></td></tr></table></figure>\n<p>编辑好 <code>package.json</code> 之后，把项目 push 到 github 的 repo 里；而后在要发布的包文件夹里执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cd /path/to/your-project</span><br><span class=\"line\">$ npm init</span><br><span class=\"line\">$ pakmanager deps</span><br><span class=\"line\">$ npm publish ./</span><br></pre></td></tr></table></figure>\n<p>更新版本的方法是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout v1.0.7</span><br><span class=\"line\">npm publish ./</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout v1.1.3</span><br><span class=\"line\">npm tag foobar@1.1.3 latest</span><br></pre></td></tr></table></figure>\n<p>发布之后，去 npmjs.com 上检查核实一下，就好像这里：</p>\n<p><a href=\"https://www.npmjs.com/package/xpress-generator\" target=\"_blank\" rel=\"external\">https://www.npmjs.com/package/xpress-generator</a></p>\n","excerpt":"","more":"<p>在 nmpjs.com 上注册一个帐号；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm adduser</span><br><span class=\"line\">npm install -g pakmanager</span><br></pre></td></tr></table></figure>\n<p>编辑好 <code>package.json</code> 之后，把项目 push 到 github 的 repo 里；而后在要发布的包文件夹里执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cd /path/to/your-project</span><br><span class=\"line\">$ npm init</span><br><span class=\"line\">$ pakmanager deps</span><br><span class=\"line\">$ npm publish ./</span><br></pre></td></tr></table></figure>\n<p>更新版本的方法是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout v1.0.7</span><br><span class=\"line\">npm publish ./</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout v1.1.3</span><br><span class=\"line\">npm tag foobar@1.1.3 latest</span><br></pre></td></tr></table></figure>\n<p>发布之后，去 npmjs.com 上检查核实一下，就好像这里：</p>\n<p><a href=\"https://www.npmjs.com/package/xpress-generator\">https://www.npmjs.com/package/xpress-generator</a></p>\n"},{"title":"Hello World","date":"2016-05-17T16:00:00.000Z","_content":"\n**学习其实只不过是一种生活方式**，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种“不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。\n\n{% codeblock The code of an interesting life... lang:javascript %}\nwhile (alive) {\n    learn;\n}\n{% endcodeblock %}","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-05-18\ntags: 未分类\n---\n\n**学习其实只不过是一种生活方式**，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种“不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。\n\n{% codeblock The code of an interesting life... lang:javascript %}\nwhile (alive) {\n    learn;\n}\n{% endcodeblock %}","slug":"hello-world","published":1,"updated":"2016-05-28T17:24:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbpc0004x9ltk0v2llbj","content":"<p><strong>学习其实只不过是一种生活方式</strong>，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种“不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。</p>\n<figure class=\"highlight javascript\"><figcaption><span>The code of an interesting life...</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (alive) &#123;</span><br><span class=\"line\">    learn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p><strong>学习其实只不过是一种生活方式</strong>，否则为什么会有的人就是停不下来呢？学习不需要坚持、不需要毅力、不需要信念，不需要各种“不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。</p>\n<figure class=\"highlight javascript\"><figcaption><span>The code of an interesting life...</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (alive) &#123;</span><br><span class=\"line\">    learn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Elm Language","date":"2016-05-27T16:00:00.000Z","_content":"\nSee \"[todo example wriiten by Elm](/elmtodo/)\"","source":"_posts/elm-lang.md","raw":"---\ntitle: Elm Language\ndate: 2016-05-28\ntags: language\n---\n\nSee \"[todo example wriiten by Elm](/elmtodo/)\"","slug":"elm-lang","published":1,"updated":"2016-05-28T18:30:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbpe0005x9lt4won1u6m","content":"<p>See “<a href=\"/elmtodo/\">todo example wriiten by Elm</a>“</p>\n","excerpt":"","more":"<p>See “<a href=\"/elmtodo/\">todo example wriiten by Elm</a>“</p>\n"},{"title":"Sublimetext Tutorial","date":"2016-05-24T16:00:00.000Z","_content":"\n# Prerequisites\n\n> * using a mac;\n> * familiar with google search;\n> * having bought a VPN (for those who's in China)\n\n# Goal\n\nWrite like a professional programmer.\n\n# Steps\n\n## Download Sublimetext\n\n> http://sublimetext.com\n\n### Try...\n\nRemember the rule of thumb:\n\n> Always Google first... now and then...\n\nIt's a super trick to google these keyword combination:\n\n> * sublimetext reasons\n> * sublimetext tricks tips\n> * sublimetext tutorial\n> * sublimetext shortcuts\n> * sublimetext cheatsheet\n\nPut these keywords into your head (tutorial, cheatsheet, etc.), they're extremely useful whenever you're learning a new set of skills online.\n\nSet a timer, for example, 1 hour, more or less, and then surf the web on your search results. When the timer beeps, come back to follwoing steps.\n\nWhen you're back, you've learned a lot, really a lot, and you're not the same person as you are 1 hour before.\n\n## Basic Setups\n\n### User Settings File\n\n```Preference``` > ```Settings - User```\n\nIn the opened file copy & paste the following code, it's doesn't matter you understand it or not for now:\n\n{% codeblock %}\n{\n  \"bold_folder_labels\": true,\n  \"color_scheme\": \"Packages/Color Scheme - Default/Monokai.tmTheme\",\n  \"font_face\": \"Monaco\",\n  \"font_options\": \"subpixel_antialias\",\n  \"font_size\": 16,\n  \"highlight_line\": true,\n  \"highlight_modified_tabs\": true,\n  \"ignored_packages\":\n  [\n    \"Vintage\"\n  ],\n  \"line_padding_bottom\": 1,\n  \"line_padding_top\": 1,\n  \"rulers\":\n  [\n    100\n  ],\n  \"scroll_past_end\": true,\n  \"tab_completion\": true,\n  \"tab_size\": 2,\n  \"translate_tabs_to_spaces\": true,\n  \"trim_trailing_white_space_on_save\": true,\n  \"word_wrap\": true\n}\n{% endcodeblock %}\n\nThe whole interface now looks just quite different than a moment before.\n\n### Try...\n\nOpen a new file with <kbd>⌘</kbd> + <kbd>n</kbd>, copy the text below into the sublimetext:\n\n> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nNow, try to click keyboard in sequence:\n\n> <kbd>c</kbd>\n> <kbd>l</kbd>\n> <kbd>m</kbd>\n> <kbd>⇥</kbd>\n\n... after you click the TAB key (<kbd>⇥</kbd>), ```clm``` mysteriously becomes ```cillum```. This is the magic power of the TAB key in the sublimetext. The TAB key (<kbd>⇥</kbd>) tiggers auto-completion, tries to find words contains the letters before the cursor, if such a word exists, then copletes it, like a magic.\n\nTry another:\n\n> <kbd>c</kbd>\n> <kbd>n</kbd>\n> <kbd>⌃</kbd> + <kbd>space</kbd>\n\n\n(<kbd>⌃</kbd> means the ```control``` key.)\n\n... you may well see two options:\n\n> consequat\n> consectetur\n\nYou can use <kbd>↑</kbd> and <kbd>↓</kbd> to select...\n\nNow you know that the TAB key (<kbd>⇥</kbd>) can do unlimited tricks in sublimetext.\n\n## Advanced Setups\n\n### Install Package Control\n\nGo the the website: https://packagecontrol.io and follow the instruction.\n\n### Try...\n\nGoogle again!\n\n> sublimetext popular packages\n\nRead, and try them out.\n\nFor example, you might well find out some better color themes. I personally love [Spacegray theme](https://github.com/kkga/spacegray/) so much.\n\n### Packges you can't live without\n\n> - SidebarEnhancement\n> - All Autocomplete\n> - ColorPicker\n> - AlignTab\n\nA lot more you'll install in the future, so just don't try too much right now. Time to go forward.\n\n## Like a programmer...\n\n### Learn HTML\n\nIn fact, you can learn HTML within 5 minutes.\n\n> What is HTML? Writing HTML is to add some tags to a pure text so that it can be properlly displayed in the browsers.\n\nThat's it.\n\n{% codeblock lang:html %}\nWhat is <strong>HTML</strong>? Writing HTML is\n<em>to add some tags to a pure text so that it\ncan be properlly displayed in the browsers</em>.\n{% endcodeblock %}\n\n... the browser interpretes this \"tagged text\", and display them in a proper format.\n\n> What is **HTML**? Writing HTML is _to add some tags to a pure text so that it can be properlly displayed in the browsers_.\n\nYou see the text in *bold* and the _italic_ format? ? Over. Your learning phase is over. Now that you know the essence of writing HTML, the only thing needed is to try out the all tags. Google again, merely search the word 'html', and then you'll encounter the famous site: [W3Schools](http://www.w3schools.com/html/)\n\nGive yourself one whole afternoon, or night, fill those tags into your brain.\n\n## Integrating Terminal, Finder, Sublime Text, and the Browsers...\n\n### Use a more advanced Command Line Tool: iTerm\n\nSame as before, you can search on Google:\n\n> * iTerm reasons\n> * iTerm tricks tips\n> * iTerm tutorial\n> * iTerm shortcuts\n\nThen you'll surely prefer iTerm over Terminal.\n\nOpen iTerm, use the keybinding <kbd>⌘</kbd> + <kbd>,</kbd> to call out the ```preference panel```, in the Keys tab, check \"Show/hid iTerm2 with a system-wide hotkey\", set Hotkey as <kbd>⌘</kbd> + <kbd>.</kbd>.\n\n### Write and view HTML simultaneously\n\nThere're several options:\n\n> - [LiveReload](http://livereload.com/)\n> - [LiveStyle](http://livestyle.io/)\n> - [Fire](http://fireapp.kkbox.com/)\n\nHowever the most convenient way is to use a sublimetext package:\n\n### Open here (files/folder) with Sublimetext in Finder\n\nIn Spotlight, call out the program Automator, create an Application (rather than Workflow or Service),\n\n{% img /images/open-with-sublime-applescript.png %}\n\nadd a AppleScript to the created Application:\n\n{% codeblock \"Automator Application AppleScript\" lang:AppleScript%}\non run {input, parameters}\n\n  set finderSelection to \"\"\n  set theTarget to \"\"\n  set appPath to path to application \"Sublime Text\"\n  set defaultTarget to (path to home folder as alias)\n  -- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:\n  -- set defaultTarget to (path to desktop folder as alias)\n\n  if (input as string) is \"\" then\n    tell application \"Finder\"\n      set finderSelection to (get selection)\n      if length of finderSelection is greater than 0 then\n        set theTarget to finderSelection\n      else\n        try\n          set theTarget to (folder of the front window as alias)\n        on error\n          set theTarget to defaultTarget\n        end try\n      end if\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n    end tell\n  else\n    try\n      set targets to {}\n      set oldDelimiters to text item delimiters\n      set text item delimiters to tab\n      set qArray to every text item of q\n      set text item delimiters to oldDelimiters\n      repeat with atarget in qArray\n\n      if atarget starts with \"~\" then\n        set userHome to POSIX path of (path to home folder)\n        if userHome ends with \"/\" then\n          set userHome to characters 1 thru -2 of userHome as string\n        end if\n\n        try\n          set atarget to userHome & characters 2 thru -1 of atarget as string\n        on error\n          set atarget to userHome\n        end try\n      end if\n\n        set targetAlias to ((POSIX file atarget) as alias)\n        set targets to targets & targetAlias\n      end repeat\n\n      set theTarget to targets\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n      on error\n        return (input as string) & \" is not a valid file or folder path.\"\n      end try\n  end if\n\n  return input\nend run\n{% endcodeblock %}\n\n### Open here (folder) with iTerm/Terminal in Finder\n\nIn Spotlight, call out the program Automator, create an Application (rather than Workflow or Service), add a AppleScript to the created Application:\n\n{% codeblock \"Open here in iTerm\" lang:AppleScript %}\non run {input, parameters}\n  tell application \"Finder\"\n    set dir_path to quoted form of (POSIX path of (folder of the front window as alias))\n  end tell\n  CD_to(dir_path)\nend run\n\non CD_to(theDir)\n  tell application \"iTerm\"\n    activate\n\n    try\n      set sesh to current session of current terminal\n    on error\n      set term to (make new terminal)\n      tell term\n        launch session \"Default\"\n        set sesh to current session\n      end tell\n    end try\n\n    tell sesh\n      write text \"cd \" & theDir & \";clear;\"\n    end tell\n  end tell\nend CD_to\n{% endcodeblock %}\n\nSave the Application anywhere with any name, then drap the Application to Finder's toolbar while holding the <kbd>⌘</kbd> key.\n\n### Open here (folder) with Finder from iTerm/Terminal\n\n{% codeblock %}\n$ open .\n{% endcodeblock %}\n\n### Open here (folder) with Sublimetext in iTerm/Terminal\n\n{% codeblock %}\nln -s \"/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/subl\n{% endcodeblock %}\n\nThen you can open the current folder with Sublimetext like this:\n\n{% codeblock %}\n$ subl .\n{% endcodeblock %}\n\n### Open files/folder with iTerm/Terminal/Finder in Sublimetext\n\nIn Package Control, install the Package, Sidebar Enhencement. (You might have already installed this package...)\n\n### Refresh Browsers in Sublimetext\n\n> Browser Refresh\n\nCheck it out on [its github page](https://github.com/gcollazo/BrowserRefresh-Sublime).\n\n## Final Tips\n\n### Move cursor forward over braces, quotes\n\nin ```Preference > Keybindings - User```:\n\n{% codeblock  %}\n[\n  { \"keys\": [\"enter\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n  [\n      { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^[),;:'}\\\"\\\\]]\", \"match_all\": true },\n      { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n  ]\n  },\n]\n{% endcodeblock %}\n\nIf you don't want to move cursor, instead you want to break the line, use <kbd>⇧</kbd> + <kbd>⏎</kbd>.\n\n### AlignTab\n\nThis is a little bit hard for beginners, but you'd better try hard to understand. Go figure it out.\n\n### Keybindings, Macros, Snippets\n\nAs you go forward, you'll need more tricks to meet your need, you'll set your own kebindings, macros, and snippets... But what are they? Don't mind right now, just remember these words, and you are going to naturally Google them now and then.\n\nMy own Snippets is being saved on Github:\n\n> https://github.com/xiaolai/sublime-snippets\n\nAnd in the README.md file, my own User/Keybinding is also included.","source":"_posts/sublimetext-tutorial.md","raw":"---\ntitle: Sublimetext Tutorial\ndate: 2016-05-25\ntag: sublimetext texteditor puretext\n---\n\n# Prerequisites\n\n> * using a mac;\n> * familiar with google search;\n> * having bought a VPN (for those who's in China)\n\n# Goal\n\nWrite like a professional programmer.\n\n# Steps\n\n## Download Sublimetext\n\n> http://sublimetext.com\n\n### Try...\n\nRemember the rule of thumb:\n\n> Always Google first... now and then...\n\nIt's a super trick to google these keyword combination:\n\n> * sublimetext reasons\n> * sublimetext tricks tips\n> * sublimetext tutorial\n> * sublimetext shortcuts\n> * sublimetext cheatsheet\n\nPut these keywords into your head (tutorial, cheatsheet, etc.), they're extremely useful whenever you're learning a new set of skills online.\n\nSet a timer, for example, 1 hour, more or less, and then surf the web on your search results. When the timer beeps, come back to follwoing steps.\n\nWhen you're back, you've learned a lot, really a lot, and you're not the same person as you are 1 hour before.\n\n## Basic Setups\n\n### User Settings File\n\n```Preference``` > ```Settings - User```\n\nIn the opened file copy & paste the following code, it's doesn't matter you understand it or not for now:\n\n{% codeblock %}\n{\n  \"bold_folder_labels\": true,\n  \"color_scheme\": \"Packages/Color Scheme - Default/Monokai.tmTheme\",\n  \"font_face\": \"Monaco\",\n  \"font_options\": \"subpixel_antialias\",\n  \"font_size\": 16,\n  \"highlight_line\": true,\n  \"highlight_modified_tabs\": true,\n  \"ignored_packages\":\n  [\n    \"Vintage\"\n  ],\n  \"line_padding_bottom\": 1,\n  \"line_padding_top\": 1,\n  \"rulers\":\n  [\n    100\n  ],\n  \"scroll_past_end\": true,\n  \"tab_completion\": true,\n  \"tab_size\": 2,\n  \"translate_tabs_to_spaces\": true,\n  \"trim_trailing_white_space_on_save\": true,\n  \"word_wrap\": true\n}\n{% endcodeblock %}\n\nThe whole interface now looks just quite different than a moment before.\n\n### Try...\n\nOpen a new file with <kbd>⌘</kbd> + <kbd>n</kbd>, copy the text below into the sublimetext:\n\n> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nNow, try to click keyboard in sequence:\n\n> <kbd>c</kbd>\n> <kbd>l</kbd>\n> <kbd>m</kbd>\n> <kbd>⇥</kbd>\n\n... after you click the TAB key (<kbd>⇥</kbd>), ```clm``` mysteriously becomes ```cillum```. This is the magic power of the TAB key in the sublimetext. The TAB key (<kbd>⇥</kbd>) tiggers auto-completion, tries to find words contains the letters before the cursor, if such a word exists, then copletes it, like a magic.\n\nTry another:\n\n> <kbd>c</kbd>\n> <kbd>n</kbd>\n> <kbd>⌃</kbd> + <kbd>space</kbd>\n\n\n(<kbd>⌃</kbd> means the ```control``` key.)\n\n... you may well see two options:\n\n> consequat\n> consectetur\n\nYou can use <kbd>↑</kbd> and <kbd>↓</kbd> to select...\n\nNow you know that the TAB key (<kbd>⇥</kbd>) can do unlimited tricks in sublimetext.\n\n## Advanced Setups\n\n### Install Package Control\n\nGo the the website: https://packagecontrol.io and follow the instruction.\n\n### Try...\n\nGoogle again!\n\n> sublimetext popular packages\n\nRead, and try them out.\n\nFor example, you might well find out some better color themes. I personally love [Spacegray theme](https://github.com/kkga/spacegray/) so much.\n\n### Packges you can't live without\n\n> - SidebarEnhancement\n> - All Autocomplete\n> - ColorPicker\n> - AlignTab\n\nA lot more you'll install in the future, so just don't try too much right now. Time to go forward.\n\n## Like a programmer...\n\n### Learn HTML\n\nIn fact, you can learn HTML within 5 minutes.\n\n> What is HTML? Writing HTML is to add some tags to a pure text so that it can be properlly displayed in the browsers.\n\nThat's it.\n\n{% codeblock lang:html %}\nWhat is <strong>HTML</strong>? Writing HTML is\n<em>to add some tags to a pure text so that it\ncan be properlly displayed in the browsers</em>.\n{% endcodeblock %}\n\n... the browser interpretes this \"tagged text\", and display them in a proper format.\n\n> What is **HTML**? Writing HTML is _to add some tags to a pure text so that it can be properlly displayed in the browsers_.\n\nYou see the text in *bold* and the _italic_ format? ? Over. Your learning phase is over. Now that you know the essence of writing HTML, the only thing needed is to try out the all tags. Google again, merely search the word 'html', and then you'll encounter the famous site: [W3Schools](http://www.w3schools.com/html/)\n\nGive yourself one whole afternoon, or night, fill those tags into your brain.\n\n## Integrating Terminal, Finder, Sublime Text, and the Browsers...\n\n### Use a more advanced Command Line Tool: iTerm\n\nSame as before, you can search on Google:\n\n> * iTerm reasons\n> * iTerm tricks tips\n> * iTerm tutorial\n> * iTerm shortcuts\n\nThen you'll surely prefer iTerm over Terminal.\n\nOpen iTerm, use the keybinding <kbd>⌘</kbd> + <kbd>,</kbd> to call out the ```preference panel```, in the Keys tab, check \"Show/hid iTerm2 with a system-wide hotkey\", set Hotkey as <kbd>⌘</kbd> + <kbd>.</kbd>.\n\n### Write and view HTML simultaneously\n\nThere're several options:\n\n> - [LiveReload](http://livereload.com/)\n> - [LiveStyle](http://livestyle.io/)\n> - [Fire](http://fireapp.kkbox.com/)\n\nHowever the most convenient way is to use a sublimetext package:\n\n### Open here (files/folder) with Sublimetext in Finder\n\nIn Spotlight, call out the program Automator, create an Application (rather than Workflow or Service),\n\n{% img /images/open-with-sublime-applescript.png %}\n\nadd a AppleScript to the created Application:\n\n{% codeblock \"Automator Application AppleScript\" lang:AppleScript%}\non run {input, parameters}\n\n  set finderSelection to \"\"\n  set theTarget to \"\"\n  set appPath to path to application \"Sublime Text\"\n  set defaultTarget to (path to home folder as alias)\n  -- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:\n  -- set defaultTarget to (path to desktop folder as alias)\n\n  if (input as string) is \"\" then\n    tell application \"Finder\"\n      set finderSelection to (get selection)\n      if length of finderSelection is greater than 0 then\n        set theTarget to finderSelection\n      else\n        try\n          set theTarget to (folder of the front window as alias)\n        on error\n          set theTarget to defaultTarget\n        end try\n      end if\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n    end tell\n  else\n    try\n      set targets to {}\n      set oldDelimiters to text item delimiters\n      set text item delimiters to tab\n      set qArray to every text item of q\n      set text item delimiters to oldDelimiters\n      repeat with atarget in qArray\n\n      if atarget starts with \"~\" then\n        set userHome to POSIX path of (path to home folder)\n        if userHome ends with \"/\" then\n          set userHome to characters 1 thru -2 of userHome as string\n        end if\n\n        try\n          set atarget to userHome & characters 2 thru -1 of atarget as string\n        on error\n          set atarget to userHome\n        end try\n      end if\n\n        set targetAlias to ((POSIX file atarget) as alias)\n        set targets to targets & targetAlias\n      end repeat\n\n      set theTarget to targets\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n      on error\n        return (input as string) & \" is not a valid file or folder path.\"\n      end try\n  end if\n\n  return input\nend run\n{% endcodeblock %}\n\n### Open here (folder) with iTerm/Terminal in Finder\n\nIn Spotlight, call out the program Automator, create an Application (rather than Workflow or Service), add a AppleScript to the created Application:\n\n{% codeblock \"Open here in iTerm\" lang:AppleScript %}\non run {input, parameters}\n  tell application \"Finder\"\n    set dir_path to quoted form of (POSIX path of (folder of the front window as alias))\n  end tell\n  CD_to(dir_path)\nend run\n\non CD_to(theDir)\n  tell application \"iTerm\"\n    activate\n\n    try\n      set sesh to current session of current terminal\n    on error\n      set term to (make new terminal)\n      tell term\n        launch session \"Default\"\n        set sesh to current session\n      end tell\n    end try\n\n    tell sesh\n      write text \"cd \" & theDir & \";clear;\"\n    end tell\n  end tell\nend CD_to\n{% endcodeblock %}\n\nSave the Application anywhere with any name, then drap the Application to Finder's toolbar while holding the <kbd>⌘</kbd> key.\n\n### Open here (folder) with Finder from iTerm/Terminal\n\n{% codeblock %}\n$ open .\n{% endcodeblock %}\n\n### Open here (folder) with Sublimetext in iTerm/Terminal\n\n{% codeblock %}\nln -s \"/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/subl\n{% endcodeblock %}\n\nThen you can open the current folder with Sublimetext like this:\n\n{% codeblock %}\n$ subl .\n{% endcodeblock %}\n\n### Open files/folder with iTerm/Terminal/Finder in Sublimetext\n\nIn Package Control, install the Package, Sidebar Enhencement. (You might have already installed this package...)\n\n### Refresh Browsers in Sublimetext\n\n> Browser Refresh\n\nCheck it out on [its github page](https://github.com/gcollazo/BrowserRefresh-Sublime).\n\n## Final Tips\n\n### Move cursor forward over braces, quotes\n\nin ```Preference > Keybindings - User```:\n\n{% codeblock  %}\n[\n  { \"keys\": [\"enter\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n  [\n      { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^[),;:'}\\\"\\\\]]\", \"match_all\": true },\n      { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n  ]\n  },\n]\n{% endcodeblock %}\n\nIf you don't want to move cursor, instead you want to break the line, use <kbd>⇧</kbd> + <kbd>⏎</kbd>.\n\n### AlignTab\n\nThis is a little bit hard for beginners, but you'd better try hard to understand. Go figure it out.\n\n### Keybindings, Macros, Snippets\n\nAs you go forward, you'll need more tricks to meet your need, you'll set your own kebindings, macros, and snippets... But what are they? Don't mind right now, just remember these words, and you are going to naturally Google them now and then.\n\nMy own Snippets is being saved on Github:\n\n> https://github.com/xiaolai/sublime-snippets\n\nAnd in the README.md file, my own User/Keybinding is also included.","slug":"sublimetext-tutorial","published":1,"updated":"2016-05-29T17:13:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbpg0007x9ltmlhuefo0","content":"<h1 id=\"Prerequisites\"><a href=\"#Prerequisites\" class=\"headerlink\" title=\"Prerequisites\"></a>Prerequisites</h1><blockquote>\n<ul>\n<li>using a mac;</li>\n<li>familiar with google search;</li>\n<li>having bought a VPN (for those who’s in China)</li>\n</ul>\n</blockquote>\n<h1 id=\"Goal\"><a href=\"#Goal\" class=\"headerlink\" title=\"Goal\"></a>Goal</h1><p>Write like a professional programmer.</p>\n<h1 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h1><h2 id=\"Download-Sublimetext\"><a href=\"#Download-Sublimetext\" class=\"headerlink\" title=\"Download Sublimetext\"></a>Download Sublimetext</h2><blockquote>\n<p><a href=\"http://sublimetext.com\" target=\"_blank\" rel=\"external\">http://sublimetext.com</a></p>\n</blockquote>\n<h3 id=\"Try…\"><a href=\"#Try…\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Remember the rule of thumb:</p>\n<blockquote>\n<p>Always Google first… now and then…</p>\n</blockquote>\n<p>It’s a super trick to google these keyword combination:</p>\n<blockquote>\n<ul>\n<li>sublimetext reasons</li>\n<li>sublimetext tricks tips</li>\n<li>sublimetext tutorial</li>\n<li>sublimetext shortcuts</li>\n<li>sublimetext cheatsheet</li>\n</ul>\n</blockquote>\n<p>Put these keywords into your head (tutorial, cheatsheet, etc.), they’re extremely useful whenever you’re learning a new set of skills online.</p>\n<p>Set a timer, for example, 1 hour, more or less, and then surf the web on your search results. When the timer beeps, come back to follwoing steps.</p>\n<p>When you’re back, you’ve learned a lot, really a lot, and you’re not the same person as you are 1 hour before.</p>\n<h2 id=\"Basic-Setups\"><a href=\"#Basic-Setups\" class=\"headerlink\" title=\"Basic Setups\"></a>Basic Setups</h2><h3 id=\"User-Settings-File\"><a href=\"#User-Settings-File\" class=\"headerlink\" title=\"User Settings File\"></a>User Settings File</h3><p><code>Preference</code> &gt; <code>Settings - User</code></p>\n<p>In the opened file copy &amp; paste the following code, it’s doesn’t matter you understand it or not for now:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;bold_folder_labels&quot;: true,</span><br><span class=\"line\">  &quot;color_scheme&quot;: &quot;Packages/Color Scheme - Default/Monokai.tmTheme&quot;,</span><br><span class=\"line\">  &quot;font_face&quot;: &quot;Monaco&quot;,</span><br><span class=\"line\">  &quot;font_options&quot;: &quot;subpixel_antialias&quot;,</span><br><span class=\"line\">  &quot;font_size&quot;: 16,</span><br><span class=\"line\">  &quot;highlight_line&quot;: true,</span><br><span class=\"line\">  &quot;highlight_modified_tabs&quot;: true,</span><br><span class=\"line\">  &quot;ignored_packages&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    &quot;Vintage&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;line_padding_bottom&quot;: 1,</span><br><span class=\"line\">  &quot;line_padding_top&quot;: 1,</span><br><span class=\"line\">  &quot;rulers&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    100</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;scroll_past_end&quot;: true,</span><br><span class=\"line\">  &quot;tab_completion&quot;: true,</span><br><span class=\"line\">  &quot;tab_size&quot;: 2,</span><br><span class=\"line\">  &quot;translate_tabs_to_spaces&quot;: true,</span><br><span class=\"line\">  &quot;trim_trailing_white_space_on_save&quot;: true,</span><br><span class=\"line\">  &quot;word_wrap&quot;: true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The whole interface now looks just quite different than a moment before.</p>\n<h3 id=\"Try…-1\"><a href=\"#Try…-1\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Open a new file with <kbd>⌘</kbd> + <kbd>n</kbd>, copy the text below into the sublimetext:</p>\n<blockquote>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n</blockquote>\n<p>Now, try to click keyboard in sequence:</p>\n<blockquote>\n<p><kbd>c</kbd><br><kbd>l</kbd><br><kbd>m</kbd><br><kbd>⇥</kbd></p>\n</blockquote>\n<p>… after you click the TAB key (<kbd>⇥</kbd>), <code>clm</code> mysteriously becomes <code>cillum</code>. This is the magic power of the TAB key in the sublimetext. The TAB key (<kbd>⇥</kbd>) tiggers auto-completion, tries to find words contains the letters before the cursor, if such a word exists, then copletes it, like a magic.</p>\n<p>Try another:</p>\n<blockquote>\n<p><kbd>c</kbd><br><kbd>n</kbd><br><kbd>⌃</kbd> + <kbd>space</kbd></p>\n</blockquote>\n<p>(<kbd>⌃</kbd> means the <code>control</code> key.)</p>\n<p>… you may well see two options:</p>\n<blockquote>\n<p>consequat<br>consectetur</p>\n</blockquote>\n<p>You can use <kbd>↑</kbd> and <kbd>↓</kbd> to select…</p>\n<p>Now you know that the TAB key (<kbd>⇥</kbd>) can do unlimited tricks in sublimetext.</p>\n<h2 id=\"Advanced-Setups\"><a href=\"#Advanced-Setups\" class=\"headerlink\" title=\"Advanced Setups\"></a>Advanced Setups</h2><h3 id=\"Install-Package-Control\"><a href=\"#Install-Package-Control\" class=\"headerlink\" title=\"Install Package Control\"></a>Install Package Control</h3><p>Go the the website: <a href=\"https://packagecontrol.io\" target=\"_blank\" rel=\"external\">https://packagecontrol.io</a> and follow the instruction.</p>\n<h3 id=\"Try…-2\"><a href=\"#Try…-2\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Google again!</p>\n<blockquote>\n<p>sublimetext popular packages</p>\n</blockquote>\n<p>Read, and try them out.</p>\n<p>For example, you might well find out some better color themes. I personally love <a href=\"https://github.com/kkga/spacegray/\" target=\"_blank\" rel=\"external\">Spacegray theme</a> so much.</p>\n<h3 id=\"Packges-you-can’t-live-without\"><a href=\"#Packges-you-can’t-live-without\" class=\"headerlink\" title=\"Packges you can’t live without\"></a>Packges you can’t live without</h3><blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>All Autocomplete</li>\n<li>ColorPicker</li>\n<li>AlignTab</li>\n</ul>\n</blockquote>\n<p>A lot more you’ll install in the future, so just don’t try too much right now. Time to go forward.</p>\n<h2 id=\"Like-a-programmer…\"><a href=\"#Like-a-programmer…\" class=\"headerlink\" title=\"Like a programmer…\"></a>Like a programmer…</h2><h3 id=\"Learn-HTML\"><a href=\"#Learn-HTML\" class=\"headerlink\" title=\"Learn HTML\"></a>Learn HTML</h3><p>In fact, you can learn HTML within 5 minutes.</p>\n<blockquote>\n<p>What is HTML? Writing HTML is to add some tags to a pure text so that it can be properlly displayed in the browsers.</p>\n</blockquote>\n<p>That’s it.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">What is <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>? Writing HTML is</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>to add some tags to a pure text so that it</span><br><span class=\"line\">can be properlly displayed in the browsers<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>.</span><br></pre></td></tr></table></figure>\n<p>… the browser interpretes this “tagged text”, and display them in a proper format.</p>\n<blockquote>\n<p>What is <strong>HTML</strong>? Writing HTML is <em>to add some tags to a pure text so that it can be properlly displayed in the browsers</em>.</p>\n</blockquote>\n<p>You see the text in <em>bold</em> and the <em>italic</em> format? ? Over. Your learning phase is over. Now that you know the essence of writing HTML, the only thing needed is to try out the all tags. Google again, merely search the word ‘html’, and then you’ll encounter the famous site: <a href=\"http://www.w3schools.com/html/\" target=\"_blank\" rel=\"external\">W3Schools</a></p>\n<p>Give yourself one whole afternoon, or night, fill those tags into your brain.</p>\n<h2 id=\"Integrating-Terminal-Finder-Sublime-Text-and-the-Browsers…\"><a href=\"#Integrating-Terminal-Finder-Sublime-Text-and-the-Browsers…\" class=\"headerlink\" title=\"Integrating Terminal, Finder, Sublime Text, and the Browsers…\"></a>Integrating Terminal, Finder, Sublime Text, and the Browsers…</h2><h3 id=\"Use-a-more-advanced-Command-Line-Tool-iTerm\"><a href=\"#Use-a-more-advanced-Command-Line-Tool-iTerm\" class=\"headerlink\" title=\"Use a more advanced Command Line Tool: iTerm\"></a>Use a more advanced Command Line Tool: iTerm</h3><p>Same as before, you can search on Google:</p>\n<blockquote>\n<ul>\n<li>iTerm reasons</li>\n<li>iTerm tricks tips</li>\n<li>iTerm tutorial</li>\n<li>iTerm shortcuts</li>\n</ul>\n</blockquote>\n<p>Then you’ll surely prefer iTerm over Terminal.</p>\n<p>Open iTerm, use the keybinding <kbd>⌘</kbd> + <kbd>,</kbd> to call out the <code>preference panel</code>, in the Keys tab, check “Show/hid iTerm2 with a system-wide hotkey”, set Hotkey as <kbd>⌘</kbd> + <kbd>.</kbd>.</p>\n<h3 id=\"Write-and-view-HTML-simultaneously\"><a href=\"#Write-and-view-HTML-simultaneously\" class=\"headerlink\" title=\"Write and view HTML simultaneously\"></a>Write and view HTML simultaneously</h3><p>There’re several options:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://livereload.com/\" target=\"_blank\" rel=\"external\">LiveReload</a></li>\n<li><a href=\"http://livestyle.io/\" target=\"_blank\" rel=\"external\">LiveStyle</a></li>\n<li><a href=\"http://fireapp.kkbox.com/\" target=\"_blank\" rel=\"external\">Fire</a></li>\n</ul>\n</blockquote>\n<p>However the most convenient way is to use a sublimetext package:</p>\n<h3 id=\"Open-here-files-folder-with-Sublimetext-in-Finder\"><a href=\"#Open-here-files-folder-with-Sublimetext-in-Finder\" class=\"headerlink\" title=\"Open here (files/folder) with Sublimetext in Finder\"></a>Open here (files/folder) with Sublimetext in Finder</h3><p>In Spotlight, call out the program Automator, create an Application (rather than Workflow or Service),</p>\n<img src=\"/images/open-with-sublime-applescript.png\">\n<p>add a AppleScript to the created Application:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Automator Application AppleScript</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> appPath <span class=\"keyword\">to</span> <span class=\"built_in\">path to</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Sublime Text\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> defaultTarget <span class=\"keyword\">to</span> (<span class=\"built_in\">path to</span> home folder <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">  <span class=\"comment\">-- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:</span></span><br><span class=\"line\">  <span class=\"comment\">-- set defaultTarget to (path to desktop folder as alias)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) <span class=\"keyword\">is</span> <span class=\"string\">\"\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> (<span class=\"keyword\">get</span> selection)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> finderSelection <span class=\"keyword\">is</span> <span class=\"keyword\">greater than</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> finderSelection</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> defaultTarget</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">set</span> oldDelimiters <span class=\"keyword\">to</span> <span class=\"literal\">text item delimiters</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> <span class=\"literal\">tab</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> qArray <span class=\"keyword\">to</span> <span class=\"keyword\">every</span> <span class=\"built_in\">text</span> <span class=\"built_in\">item</span> <span class=\"keyword\">of</span> q</span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> oldDelimiters</span><br><span class=\"line\">      <span class=\"keyword\">repeat</span> <span class=\"keyword\">with</span> atarget <span class=\"keyword\">in</span> qArray</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> atarget <span class=\"keyword\">starts with</span> <span class=\"string\">\"~\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (<span class=\"built_in\">path to</span> home folder)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userHome <span class=\"keyword\">ends with</span> <span class=\"string\">\"/\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"built_in\">characters</span> <span class=\"number\">1</span> <span class=\"keyword\">thru</span> <span class=\"number\">-2</span> <span class=\"keyword\">of</span> userHome <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome &amp; <span class=\"built_in\">characters</span> <span class=\"number\">2</span> <span class=\"keyword\">thru</span> <span class=\"number\">-1</span> <span class=\"keyword\">of</span> atarget <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span> targetAlias <span class=\"keyword\">to</span> ((<span class=\"keyword\">POSIX file</span> atarget) <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> targets &amp; targetAlias</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">repeat</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> targets</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\"><span class=\"built_in\">        return</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) &amp; <span class=\"string\">\" is not a valid file or folder path.\"</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"><span class=\"built_in\"></span><br><span class=\"line\">  return</span> input</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-here-folder-with-iTerm-Terminal-in-Finder\"><a href=\"#Open-here-folder-with-iTerm-Terminal-in-Finder\" class=\"headerlink\" title=\"Open here (folder) with iTerm/Terminal in Finder\"></a>Open here (folder) with iTerm/Terminal in Finder</h3><p>In Spotlight, call out the program Automator, create an Application (rather than Workflow or Service), add a AppleScript to the created Application:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Open here in iTerm</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">    <span class=\"keyword\">set</span> dir_path <span class=\"keyword\">to</span> <span class=\"keyword\">quoted form</span> <span class=\"keyword\">of</span> (<span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>))</span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  CD_to(dir_path)</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">on</span> CD_to(theDir)</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">    <span class=\"built_in\">activate</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session <span class=\"keyword\">of</span> current terminal</span><br><span class=\"line\">    <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> term <span class=\"keyword\">to</span> (make new terminal)</span><br><span class=\"line\">      <span class=\"keyword\">tell</span> term</span><br><span class=\"line\">        <span class=\"built_in\">launch</span> session <span class=\"string\">\"Default\"</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> sesh</span><br><span class=\"line\">      <span class=\"built_in\">write</span> <span class=\"built_in\">text</span> <span class=\"string\">\"cd \"</span> &amp; theDir &amp; <span class=\"string\">\";clear;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> CD_to</span><br></pre></td></tr></table></figure>\n<p>Save the Application anywhere with any name, then drap the Application to Finder’s toolbar while holding the <kbd>⌘</kbd> key.</p>\n<h3 id=\"Open-here-folder-with-Finder-from-iTerm-Terminal\"><a href=\"#Open-here-folder-with-Finder-from-iTerm-Terminal\" class=\"headerlink\" title=\"Open here (folder) with Finder from iTerm/Terminal\"></a>Open here (folder) with Finder from iTerm/Terminal</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ open .</span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-here-folder-with-Sublimetext-in-iTerm-Terminal\"><a href=\"#Open-here-folder-with-Sublimetext-in-iTerm-Terminal\" class=\"headerlink\" title=\"Open here (folder) with Sublimetext in iTerm/Terminal\"></a>Open here (folder) with Sublimetext in iTerm/Terminal</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s &quot;/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/subl</span><br></pre></td></tr></table></figure>\n<p>Then you can open the current folder with Sublimetext like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ subl .</span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-files-folder-with-iTerm-Terminal-Finder-in-Sublimetext\"><a href=\"#Open-files-folder-with-iTerm-Terminal-Finder-in-Sublimetext\" class=\"headerlink\" title=\"Open files/folder with iTerm/Terminal/Finder in Sublimetext\"></a>Open files/folder with iTerm/Terminal/Finder in Sublimetext</h3><p>In Package Control, install the Package, Sidebar Enhencement. (You might have already installed this package…)</p>\n<h3 id=\"Refresh-Browsers-in-Sublimetext\"><a href=\"#Refresh-Browsers-in-Sublimetext\" class=\"headerlink\" title=\"Refresh Browsers in Sublimetext\"></a>Refresh Browsers in Sublimetext</h3><blockquote>\n<p>Browser Refresh</p>\n</blockquote>\n<p>Check it out on <a href=\"https://github.com/gcollazo/BrowserRefresh-Sublime\" target=\"_blank\" rel=\"external\">its github page</a>.</p>\n<h2 id=\"Final-Tips\"><a href=\"#Final-Tips\" class=\"headerlink\" title=\"Final Tips\"></a>Final Tips</h2><h3 id=\"Move-cursor-forward-over-braces-quotes\"><a href=\"#Move-cursor-forward-over-braces-quotes\" class=\"headerlink\" title=\"Move cursor forward over braces, quotes\"></a>Move cursor forward over braces, quotes</h3><p>in <code>Preference &gt; Keybindings - User</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123; &quot;keys&quot;: [&quot;enter&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;characters&quot;, &quot;forward&quot;: true&#125;, &quot;context&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      &#123; &quot;key&quot;: &quot;following_text&quot;, &quot;operator&quot;: &quot;regex_contains&quot;, &quot;operand&quot;: &quot;^[),;:&apos;&#125;\\&quot;\\\\]]&quot;, &quot;match_all&quot;: true &#125;,</span><br><span class=\"line\">      &#123; &quot;key&quot;: &quot;auto_complete_visible&quot;, &quot;operator&quot;: &quot;equal&quot;, &quot;operand&quot;: false &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>If you don’t want to move cursor, instead you want to break the line, use <kbd>⇧</kbd> + <kbd>⏎</kbd>.</p>\n<h3 id=\"AlignTab\"><a href=\"#AlignTab\" class=\"headerlink\" title=\"AlignTab\"></a>AlignTab</h3><p>This is a little bit hard for beginners, but you’d better try hard to understand. Go figure it out.</p>\n<h3 id=\"Keybindings-Macros-Snippets\"><a href=\"#Keybindings-Macros-Snippets\" class=\"headerlink\" title=\"Keybindings, Macros, Snippets\"></a>Keybindings, Macros, Snippets</h3><p>As you go forward, you’ll need more tricks to meet your need, you’ll set your own kebindings, macros, and snippets… But what are they? Don’t mind right now, just remember these words, and you are going to naturally Google them now and then.</p>\n<p>My own Snippets is being saved on Github:</p>\n<blockquote>\n<p><a href=\"https://github.com/xiaolai/sublime-snippets\" target=\"_blank\" rel=\"external\">https://github.com/xiaolai/sublime-snippets</a></p>\n</blockquote>\n<p>And in the README.md file, my own User/Keybinding is also included.</p>\n","excerpt":"","more":"<h1 id=\"Prerequisites\"><a href=\"#Prerequisites\" class=\"headerlink\" title=\"Prerequisites\"></a>Prerequisites</h1><blockquote>\n<ul>\n<li>using a mac;</li>\n<li>familiar with google search;</li>\n<li>having bought a VPN (for those who’s in China)</li>\n</ul>\n</blockquote>\n<h1 id=\"Goal\"><a href=\"#Goal\" class=\"headerlink\" title=\"Goal\"></a>Goal</h1><p>Write like a professional programmer.</p>\n<h1 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h1><h2 id=\"Download-Sublimetext\"><a href=\"#Download-Sublimetext\" class=\"headerlink\" title=\"Download Sublimetext\"></a>Download Sublimetext</h2><blockquote>\n<p><a href=\"http://sublimetext.com\">http://sublimetext.com</a></p>\n</blockquote>\n<h3 id=\"Try…\"><a href=\"#Try…\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Remember the rule of thumb:</p>\n<blockquote>\n<p>Always Google first… now and then…</p>\n</blockquote>\n<p>It’s a super trick to google these keyword combination:</p>\n<blockquote>\n<ul>\n<li>sublimetext reasons</li>\n<li>sublimetext tricks tips</li>\n<li>sublimetext tutorial</li>\n<li>sublimetext shortcuts</li>\n<li>sublimetext cheatsheet</li>\n</ul>\n</blockquote>\n<p>Put these keywords into your head (tutorial, cheatsheet, etc.), they’re extremely useful whenever you’re learning a new set of skills online.</p>\n<p>Set a timer, for example, 1 hour, more or less, and then surf the web on your search results. When the timer beeps, come back to follwoing steps.</p>\n<p>When you’re back, you’ve learned a lot, really a lot, and you’re not the same person as you are 1 hour before.</p>\n<h2 id=\"Basic-Setups\"><a href=\"#Basic-Setups\" class=\"headerlink\" title=\"Basic Setups\"></a>Basic Setups</h2><h3 id=\"User-Settings-File\"><a href=\"#User-Settings-File\" class=\"headerlink\" title=\"User Settings File\"></a>User Settings File</h3><p><code>Preference</code> &gt; <code>Settings - User</code></p>\n<p>In the opened file copy &amp; paste the following code, it’s doesn’t matter you understand it or not for now:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;bold_folder_labels&quot;: true,</span><br><span class=\"line\">  &quot;color_scheme&quot;: &quot;Packages/Color Scheme - Default/Monokai.tmTheme&quot;,</span><br><span class=\"line\">  &quot;font_face&quot;: &quot;Monaco&quot;,</span><br><span class=\"line\">  &quot;font_options&quot;: &quot;subpixel_antialias&quot;,</span><br><span class=\"line\">  &quot;font_size&quot;: 16,</span><br><span class=\"line\">  &quot;highlight_line&quot;: true,</span><br><span class=\"line\">  &quot;highlight_modified_tabs&quot;: true,</span><br><span class=\"line\">  &quot;ignored_packages&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    &quot;Vintage&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;line_padding_bottom&quot;: 1,</span><br><span class=\"line\">  &quot;line_padding_top&quot;: 1,</span><br><span class=\"line\">  &quot;rulers&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">    100</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;scroll_past_end&quot;: true,</span><br><span class=\"line\">  &quot;tab_completion&quot;: true,</span><br><span class=\"line\">  &quot;tab_size&quot;: 2,</span><br><span class=\"line\">  &quot;translate_tabs_to_spaces&quot;: true,</span><br><span class=\"line\">  &quot;trim_trailing_white_space_on_save&quot;: true,</span><br><span class=\"line\">  &quot;word_wrap&quot;: true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The whole interface now looks just quite different than a moment before.</p>\n<h3 id=\"Try…-1\"><a href=\"#Try…-1\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Open a new file with <kbd>⌘</kbd> + <kbd>n</kbd>, copy the text below into the sublimetext:</p>\n<blockquote>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n</blockquote>\n<p>Now, try to click keyboard in sequence:</p>\n<blockquote>\n<p><kbd>c</kbd><br><kbd>l</kbd><br><kbd>m</kbd><br><kbd>⇥</kbd></p>\n</blockquote>\n<p>… after you click the TAB key (<kbd>⇥</kbd>), <code>clm</code> mysteriously becomes <code>cillum</code>. This is the magic power of the TAB key in the sublimetext. The TAB key (<kbd>⇥</kbd>) tiggers auto-completion, tries to find words contains the letters before the cursor, if such a word exists, then copletes it, like a magic.</p>\n<p>Try another:</p>\n<blockquote>\n<p><kbd>c</kbd><br><kbd>n</kbd><br><kbd>⌃</kbd> + <kbd>space</kbd></p>\n</blockquote>\n<p>(<kbd>⌃</kbd> means the <code>control</code> key.)</p>\n<p>… you may well see two options:</p>\n<blockquote>\n<p>consequat<br>consectetur</p>\n</blockquote>\n<p>You can use <kbd>↑</kbd> and <kbd>↓</kbd> to select…</p>\n<p>Now you know that the TAB key (<kbd>⇥</kbd>) can do unlimited tricks in sublimetext.</p>\n<h2 id=\"Advanced-Setups\"><a href=\"#Advanced-Setups\" class=\"headerlink\" title=\"Advanced Setups\"></a>Advanced Setups</h2><h3 id=\"Install-Package-Control\"><a href=\"#Install-Package-Control\" class=\"headerlink\" title=\"Install Package Control\"></a>Install Package Control</h3><p>Go the the website: <a href=\"https://packagecontrol.io\">https://packagecontrol.io</a> and follow the instruction.</p>\n<h3 id=\"Try…-2\"><a href=\"#Try…-2\" class=\"headerlink\" title=\"Try…\"></a>Try…</h3><p>Google again!</p>\n<blockquote>\n<p>sublimetext popular packages</p>\n</blockquote>\n<p>Read, and try them out.</p>\n<p>For example, you might well find out some better color themes. I personally love <a href=\"https://github.com/kkga/spacegray/\">Spacegray theme</a> so much.</p>\n<h3 id=\"Packges-you-can’t-live-without\"><a href=\"#Packges-you-can’t-live-without\" class=\"headerlink\" title=\"Packges you can’t live without\"></a>Packges you can’t live without</h3><blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>All Autocomplete</li>\n<li>ColorPicker</li>\n<li>AlignTab</li>\n</ul>\n</blockquote>\n<p>A lot more you’ll install in the future, so just don’t try too much right now. Time to go forward.</p>\n<h2 id=\"Like-a-programmer…\"><a href=\"#Like-a-programmer…\" class=\"headerlink\" title=\"Like a programmer…\"></a>Like a programmer…</h2><h3 id=\"Learn-HTML\"><a href=\"#Learn-HTML\" class=\"headerlink\" title=\"Learn HTML\"></a>Learn HTML</h3><p>In fact, you can learn HTML within 5 minutes.</p>\n<blockquote>\n<p>What is HTML? Writing HTML is to add some tags to a pure text so that it can be properlly displayed in the browsers.</p>\n</blockquote>\n<p>That’s it.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">What is <span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span>? Writing HTML is</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>to add some tags to a pure text so that it</span><br><span class=\"line\">can be properlly displayed in the browsers<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span>.</span><br></pre></td></tr></table></figure>\n<p>… the browser interpretes this “tagged text”, and display them in a proper format.</p>\n<blockquote>\n<p>What is <strong>HTML</strong>? Writing HTML is <em>to add some tags to a pure text so that it can be properlly displayed in the browsers</em>.</p>\n</blockquote>\n<p>You see the text in <em>bold</em> and the <em>italic</em> format? ? Over. Your learning phase is over. Now that you know the essence of writing HTML, the only thing needed is to try out the all tags. Google again, merely search the word ‘html’, and then you’ll encounter the famous site: <a href=\"http://www.w3schools.com/html/\">W3Schools</a></p>\n<p>Give yourself one whole afternoon, or night, fill those tags into your brain.</p>\n<h2 id=\"Integrating-Terminal-Finder-Sublime-Text-and-the-Browsers…\"><a href=\"#Integrating-Terminal-Finder-Sublime-Text-and-the-Browsers…\" class=\"headerlink\" title=\"Integrating Terminal, Finder, Sublime Text, and the Browsers…\"></a>Integrating Terminal, Finder, Sublime Text, and the Browsers…</h2><h3 id=\"Use-a-more-advanced-Command-Line-Tool-iTerm\"><a href=\"#Use-a-more-advanced-Command-Line-Tool-iTerm\" class=\"headerlink\" title=\"Use a more advanced Command Line Tool: iTerm\"></a>Use a more advanced Command Line Tool: iTerm</h3><p>Same as before, you can search on Google:</p>\n<blockquote>\n<ul>\n<li>iTerm reasons</li>\n<li>iTerm tricks tips</li>\n<li>iTerm tutorial</li>\n<li>iTerm shortcuts</li>\n</ul>\n</blockquote>\n<p>Then you’ll surely prefer iTerm over Terminal.</p>\n<p>Open iTerm, use the keybinding <kbd>⌘</kbd> + <kbd>,</kbd> to call out the <code>preference panel</code>, in the Keys tab, check “Show/hid iTerm2 with a system-wide hotkey”, set Hotkey as <kbd>⌘</kbd> + <kbd>.</kbd>.</p>\n<h3 id=\"Write-and-view-HTML-simultaneously\"><a href=\"#Write-and-view-HTML-simultaneously\" class=\"headerlink\" title=\"Write and view HTML simultaneously\"></a>Write and view HTML simultaneously</h3><p>There’re several options:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://livereload.com/\">LiveReload</a></li>\n<li><a href=\"http://livestyle.io/\">LiveStyle</a></li>\n<li><a href=\"http://fireapp.kkbox.com/\">Fire</a></li>\n</ul>\n</blockquote>\n<p>However the most convenient way is to use a sublimetext package:</p>\n<h3 id=\"Open-here-files-folder-with-Sublimetext-in-Finder\"><a href=\"#Open-here-files-folder-with-Sublimetext-in-Finder\" class=\"headerlink\" title=\"Open here (files/folder) with Sublimetext in Finder\"></a>Open here (files/folder) with Sublimetext in Finder</h3><p>In Spotlight, call out the program Automator, create an Application (rather than Workflow or Service),</p>\n<img src=\"/images/open-with-sublime-applescript.png\">\n<p>add a AppleScript to the created Application:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Automator Application AppleScript</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> appPath <span class=\"keyword\">to</span> <span class=\"built_in\">path to</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Sublime Text\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> defaultTarget <span class=\"keyword\">to</span> (<span class=\"built_in\">path to</span> home folder <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">  <span class=\"comment\">-- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:</span></span><br><span class=\"line\">  <span class=\"comment\">-- set defaultTarget to (path to desktop folder as alias)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) <span class=\"keyword\">is</span> <span class=\"string\">\"\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> (<span class=\"keyword\">get</span> selection)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> finderSelection <span class=\"keyword\">is</span> <span class=\"keyword\">greater than</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> finderSelection</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> defaultTarget</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">set</span> oldDelimiters <span class=\"keyword\">to</span> <span class=\"literal\">text item delimiters</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> <span class=\"literal\">tab</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> qArray <span class=\"keyword\">to</span> <span class=\"keyword\">every</span> <span class=\"built_in\">text</span> <span class=\"built_in\">item</span> <span class=\"keyword\">of</span> q</span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> oldDelimiters</span><br><span class=\"line\">      <span class=\"keyword\">repeat</span> <span class=\"keyword\">with</span> atarget <span class=\"keyword\">in</span> qArray</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> atarget <span class=\"keyword\">starts with</span> <span class=\"string\">\"~\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (<span class=\"built_in\">path to</span> home folder)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userHome <span class=\"keyword\">ends with</span> <span class=\"string\">\"/\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"built_in\">characters</span> <span class=\"number\">1</span> <span class=\"keyword\">thru</span> <span class=\"number\">-2</span> <span class=\"keyword\">of</span> userHome <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome &amp; <span class=\"built_in\">characters</span> <span class=\"number\">2</span> <span class=\"keyword\">thru</span> <span class=\"number\">-1</span> <span class=\"keyword\">of</span> atarget <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span> targetAlias <span class=\"keyword\">to</span> ((<span class=\"keyword\">POSIX file</span> atarget) <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> targets &amp; targetAlias</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">repeat</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> targets</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\"><span class=\"built_in\">        return</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) &amp; <span class=\"string\">\" is not a valid file or folder path.\"</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"><span class=\"built_in\"></span><br><span class=\"line\">  return</span> input</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-here-folder-with-iTerm-Terminal-in-Finder\"><a href=\"#Open-here-folder-with-iTerm-Terminal-in-Finder\" class=\"headerlink\" title=\"Open here (folder) with iTerm/Terminal in Finder\"></a>Open here (folder) with iTerm/Terminal in Finder</h3><p>In Spotlight, call out the program Automator, create an Application (rather than Workflow or Service), add a AppleScript to the created Application:</p>\n<figure class=\"highlight applescript\"><figcaption><span>Open here in iTerm</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">    <span class=\"keyword\">set</span> dir_path <span class=\"keyword\">to</span> <span class=\"keyword\">quoted form</span> <span class=\"keyword\">of</span> (<span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>))</span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  CD_to(dir_path)</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">on</span> CD_to(theDir)</span><br><span class=\"line\">  <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">    <span class=\"built_in\">activate</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session <span class=\"keyword\">of</span> current terminal</span><br><span class=\"line\">    <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> term <span class=\"keyword\">to</span> (make new terminal)</span><br><span class=\"line\">      <span class=\"keyword\">tell</span> term</span><br><span class=\"line\">        <span class=\"built_in\">launch</span> session <span class=\"string\">\"Default\"</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> sesh <span class=\"keyword\">to</span> current session</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> sesh</span><br><span class=\"line\">      <span class=\"built_in\">write</span> <span class=\"built_in\">text</span> <span class=\"string\">\"cd \"</span> &amp; theDir &amp; <span class=\"string\">\";clear;\"</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> CD_to</span><br></pre></td></tr></table></figure>\n<p>Save the Application anywhere with any name, then drap the Application to Finder’s toolbar while holding the <kbd>⌘</kbd> key.</p>\n<h3 id=\"Open-here-folder-with-Finder-from-iTerm-Terminal\"><a href=\"#Open-here-folder-with-Finder-from-iTerm-Terminal\" class=\"headerlink\" title=\"Open here (folder) with Finder from iTerm/Terminal\"></a>Open here (folder) with Finder from iTerm/Terminal</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ open .</span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-here-folder-with-Sublimetext-in-iTerm-Terminal\"><a href=\"#Open-here-folder-with-Sublimetext-in-iTerm-Terminal\" class=\"headerlink\" title=\"Open here (folder) with Sublimetext in iTerm/Terminal\"></a>Open here (folder) with Sublimetext in iTerm/Terminal</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s &quot;/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/subl</span><br></pre></td></tr></table></figure>\n<p>Then you can open the current folder with Sublimetext like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ subl .</span><br></pre></td></tr></table></figure>\n<h3 id=\"Open-files-folder-with-iTerm-Terminal-Finder-in-Sublimetext\"><a href=\"#Open-files-folder-with-iTerm-Terminal-Finder-in-Sublimetext\" class=\"headerlink\" title=\"Open files/folder with iTerm/Terminal/Finder in Sublimetext\"></a>Open files/folder with iTerm/Terminal/Finder in Sublimetext</h3><p>In Package Control, install the Package, Sidebar Enhencement. (You might have already installed this package…)</p>\n<h3 id=\"Refresh-Browsers-in-Sublimetext\"><a href=\"#Refresh-Browsers-in-Sublimetext\" class=\"headerlink\" title=\"Refresh Browsers in Sublimetext\"></a>Refresh Browsers in Sublimetext</h3><blockquote>\n<p>Browser Refresh</p>\n</blockquote>\n<p>Check it out on <a href=\"https://github.com/gcollazo/BrowserRefresh-Sublime\">its github page</a>.</p>\n<h2 id=\"Final-Tips\"><a href=\"#Final-Tips\" class=\"headerlink\" title=\"Final Tips\"></a>Final Tips</h2><h3 id=\"Move-cursor-forward-over-braces-quotes\"><a href=\"#Move-cursor-forward-over-braces-quotes\" class=\"headerlink\" title=\"Move cursor forward over braces, quotes\"></a>Move cursor forward over braces, quotes</h3><p>in <code>Preference &gt; Keybindings - User</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123; &quot;keys&quot;: [&quot;enter&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;characters&quot;, &quot;forward&quot;: true&#125;, &quot;context&quot;:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      &#123; &quot;key&quot;: &quot;following_text&quot;, &quot;operator&quot;: &quot;regex_contains&quot;, &quot;operand&quot;: &quot;^[),;:&apos;&#125;\\&quot;\\\\]]&quot;, &quot;match_all&quot;: true &#125;,</span><br><span class=\"line\">      &#123; &quot;key&quot;: &quot;auto_complete_visible&quot;, &quot;operator&quot;: &quot;equal&quot;, &quot;operand&quot;: false &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>If you don’t want to move cursor, instead you want to break the line, use <kbd>⇧</kbd> + <kbd>⏎</kbd>.</p>\n<h3 id=\"AlignTab\"><a href=\"#AlignTab\" class=\"headerlink\" title=\"AlignTab\"></a>AlignTab</h3><p>This is a little bit hard for beginners, but you’d better try hard to understand. Go figure it out.</p>\n<h3 id=\"Keybindings-Macros-Snippets\"><a href=\"#Keybindings-Macros-Snippets\" class=\"headerlink\" title=\"Keybindings, Macros, Snippets\"></a>Keybindings, Macros, Snippets</h3><p>As you go forward, you’ll need more tricks to meet your need, you’ll set your own kebindings, macros, and snippets… But what are they? Don’t mind right now, just remember these words, and you are going to naturally Google them now and then.</p>\n<p>My own Snippets is being saved on Github:</p>\n<blockquote>\n<p><a href=\"https://github.com/xiaolai/sublime-snippets\">https://github.com/xiaolai/sublime-snippets</a></p>\n</blockquote>\n<p>And in the README.md file, my own User/Keybinding is also included.</p>\n"},{"title":"必要的装备（1）SublimeText","date":"2016-05-18T16:00:00.000Z","_content":"\n文章目录\n===\n<!-- toc -->\n--------\n\n[Sublimetext](http://sublimetext.com) 真是个招人喜欢的编辑器…… （我以前用 TextMate，现在彻底转到 Sublimetext 上了。）\n\n{% img middle /images/ubuLOF1.gif \"The text editor you'll fall in love with.\" %}\n\n下载\n===\n\n[Sublimetext](http://sublimetext.com) 可以永远免费使用，但也接受购买，价格是 $70（也支持团购）—— 其实是非常值的，想想它能提高的效率罢，时间比什么都高贵。\n\n配置\n===\n\n这种灵活的高级编辑器，往往需要自己不断手动配置，增加各种功能，逐步熟练掌握。\n\n基本配置文件\n---\n\n依次点击 Sublimetext 菜单，```Sublime Text > Preferences > Settings - User```，而后在编辑器里拷贝粘贴以下配置代码保存即可。（暂时看不懂没关系，早晚会一眼看清楚……）\n\n{% codeblock \"Sublime Text > Preferences > Settings - User\" lang:javascript %}\n{\n  \"color_scheme\": \"Packages/Color Scheme - Default/Solarized (Dark).tmTheme\",\n  \"bold_folder_labels\": true,\n  \"font_face\": \"Menlo\",\n  \"font_options\": \"subpixel_antialias\",\n  \"font_size\": 16,\n  \"highlight_line\": true,\n  \"highlight_modified_tabs\": true,\n  \"ignored_packages\":\n  [\n      vintage\n  ],\n  \"line_padding_bottom\": 1,\n  \"line_padding_top\": 1,\n  \"rulers\":\n  [\n      80\n  ],\n  \"scroll_past_end\": true,\n  \"tab_size\": 4,\n  \"tab_completion\": false,\n  \"translate_tabs_to_spaces\": true,\n  \"trim_trailing_white_space_on_save\": true,\n  \"word_wrap\": true\n  \"path\": \"/usr/bin:/bin:/usr/sbin:/sbin\"\n}\n{% endcodeblock %}\n\n从 Terminal 里唤出 Sublimetext\n---\n\n一般在命令行下大家喜欢用缩写，比如```subl```，我觉得没啥必要，反正输入```sub```之后用```⇥```自动补全也一样，所以我还是直接用```sublime```:\n\n{% codeblock \"ln -s sublime\" lang:shell %}\nln -s \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/sublime\n{% endcodeblock %}\n\n在 Finder 上添加个按钮，“Open with sublimetext”\n---\n\n用 Automator 创建一个 Application（不是 Workflow 或者 Service），添加一个 AppleScript:\n\n{% img /images/open-with-sublime-applescript.png %}\n\n{% codeblock \"Automator Application AppleScript\" lang:AppleScript%}\non run {input, parameters}\n\n  set finderSelection to \"\"\n  set theTarget to \"\"\n  set appPath to path to application \"Sublime Text\"\n  set defaultTarget to (path to home folder as alias)\n  -- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:\n  -- set defaultTarget to (path to desktop folder as alias)\n\n  if (input as string) is \"\" then\n    tell application \"Finder\"\n      set finderSelection to (get selection)\n      if length of finderSelection is greater than 0 then\n        set theTarget to finderSelection\n      else\n        try\n          set theTarget to (folder of the front window as alias)\n        on error\n          set theTarget to defaultTarget\n        end try\n      end if\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n    end tell\n  else\n    try\n      set targets to {}\n      set oldDelimiters to text item delimiters\n      set text item delimiters to tab\n      set qArray to every text item of q\n      set text item delimiters to oldDelimiters\n      repeat with atarget in qArray\n\n      if atarget starts with \"~\" then\n        set userHome to POSIX path of (path to home folder)\n        if userHome ends with \"/\" then\n          set userHome to characters 1 thru -2 of userHome as string\n        end if\n\n        try\n          set atarget to userHome & characters 2 thru -1 of atarget as string\n        on error\n          set atarget to userHome\n        end try\n      end if\n\n        set targetAlias to ((POSIX file atarget) as alias)\n        set targets to targets & targetAlias\n      end repeat\n\n      set theTarget to targets\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n      on error\n        return (input as string) & \" is not a valid file or folder path.\"\n      end try\n  end if\n\n  return input\nend run\n{% endcodeblock %}\n\n而后把这个 Application 保存到 ```~/Applications``` 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……\n\n安装 Package Control\n---\n\n使用快捷键 ``` ⌃ + ` ``` 呼出控制台，在输入框中输入：\n\n{% codeblock \"安装 Package Control:\" lang:python packagecontrol https://packagecontrol.io/installation %}\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n{% endcodeblock %}\n\n安装常用插件\n---\n\n⇧ + ⌘ + P，呼出 Package Control, 输入 Packge install，按回车键，而后选择相应的 Package 安装……\n\n> * SidebarEnhancement\n> * AllAutoComplete\n> * Alignment\n> * SublimeGit\n> * GitGutter\n> * Origami\n> * MarkdownEditing\n> * Ctags\n> * Table Editor\n> * Emmet\n> * Terminal\n> * ColorPicker\n> * FileDiffs\n\n关掉 Vintage\n---\n\nSublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要关掉它，还挺费劲：\n\n{% codeblock \"使用“Shift+Command+P”打开 Package Control\" lang:shell %}\n    Shift+Command+P > Package Control: Disable Packages > Vintage\n{% endcodeblock %}\n\n插件\n===\n\n安装 Package Control\n---\n\n使用快捷键 ⌃ + ` 呼出控制台，在输入框中输入：\n\n{% codeblock \"安装 Package Control:\" lang:python packagecontrol https://packagecontrol.io/installation %}\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n{% endcodeblock %}\n\n关掉 Vintage\n---\nSublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要彻底关掉它，还挺费劲；最好是通过 Package Control 去做：\n\n{% codeblock 用“⇧+⌘+P”打开 Package Control lang:shell %}\n  Disable Packages > Vintage\n{% endcodeblock %}\n\n常用插件\n---\n\n> * SidebarEnhancement\n> * AllAutoComplete\n> * Alignment\n> * SublimeGit\n> * GitGutter\n> * Origami\n> * MarkdownEditing\n> * Ctags\n> * Table Editor\n> * Emmet\n> * Terminal\n> * ColorPicker\n> * FileDiffs\n\n\n其它\n===\n\nSublimetext 的图标\n---\n\n这两个都不错，反正比原生的强太多了：\n\n> - https://dribbble.com/shots/2273297-Sublime-Text-Icon\n> - https://dribbble.com/shots/337996-Sublime-Text-2-Icon\n\n多台机器使用同一个配置\n---\n\n到```~/Application Support```目录里，把```Packages```和```Installed Packages```这两个目录拷贝到 iCloud 目录里，而后用```ln -s```命令创建硬链：\n\n{% codeblock \"使用 iCloud 同步配置文件\" lang:shell %}\nmkdir ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\nmv ~/Application\\ Support/Sublime\\ Text\\ 3/Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\nmv ~/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\ncd ~/Application\\ Support/Sublime\\ Text\\ 3\nln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Packages\nln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Installed\\ Packages\n{% endcodeblock %}\n\n\n","source":"_posts/sublimetext.md","raw":"---\ntitle: 必要的装备（1）SublimeText\ndate: 2016-05-19\ntags: 工具\n---\n\n文章目录\n===\n<!-- toc -->\n--------\n\n[Sublimetext](http://sublimetext.com) 真是个招人喜欢的编辑器…… （我以前用 TextMate，现在彻底转到 Sublimetext 上了。）\n\n{% img middle /images/ubuLOF1.gif \"The text editor you'll fall in love with.\" %}\n\n下载\n===\n\n[Sublimetext](http://sublimetext.com) 可以永远免费使用，但也接受购买，价格是 $70（也支持团购）—— 其实是非常值的，想想它能提高的效率罢，时间比什么都高贵。\n\n配置\n===\n\n这种灵活的高级编辑器，往往需要自己不断手动配置，增加各种功能，逐步熟练掌握。\n\n基本配置文件\n---\n\n依次点击 Sublimetext 菜单，```Sublime Text > Preferences > Settings - User```，而后在编辑器里拷贝粘贴以下配置代码保存即可。（暂时看不懂没关系，早晚会一眼看清楚……）\n\n{% codeblock \"Sublime Text > Preferences > Settings - User\" lang:javascript %}\n{\n  \"color_scheme\": \"Packages/Color Scheme - Default/Solarized (Dark).tmTheme\",\n  \"bold_folder_labels\": true,\n  \"font_face\": \"Menlo\",\n  \"font_options\": \"subpixel_antialias\",\n  \"font_size\": 16,\n  \"highlight_line\": true,\n  \"highlight_modified_tabs\": true,\n  \"ignored_packages\":\n  [\n      vintage\n  ],\n  \"line_padding_bottom\": 1,\n  \"line_padding_top\": 1,\n  \"rulers\":\n  [\n      80\n  ],\n  \"scroll_past_end\": true,\n  \"tab_size\": 4,\n  \"tab_completion\": false,\n  \"translate_tabs_to_spaces\": true,\n  \"trim_trailing_white_space_on_save\": true,\n  \"word_wrap\": true\n  \"path\": \"/usr/bin:/bin:/usr/sbin:/sbin\"\n}\n{% endcodeblock %}\n\n从 Terminal 里唤出 Sublimetext\n---\n\n一般在命令行下大家喜欢用缩写，比如```subl```，我觉得没啥必要，反正输入```sub```之后用```⇥```自动补全也一样，所以我还是直接用```sublime```:\n\n{% codeblock \"ln -s sublime\" lang:shell %}\nln -s \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\" /usr/local/bin/sublime\n{% endcodeblock %}\n\n在 Finder 上添加个按钮，“Open with sublimetext”\n---\n\n用 Automator 创建一个 Application（不是 Workflow 或者 Service），添加一个 AppleScript:\n\n{% img /images/open-with-sublime-applescript.png %}\n\n{% codeblock \"Automator Application AppleScript\" lang:AppleScript%}\non run {input, parameters}\n\n  set finderSelection to \"\"\n  set theTarget to \"\"\n  set appPath to path to application \"Sublime Text\"\n  set defaultTarget to (path to home folder as alias)\n  -- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:\n  -- set defaultTarget to (path to desktop folder as alias)\n\n  if (input as string) is \"\" then\n    tell application \"Finder\"\n      set finderSelection to (get selection)\n      if length of finderSelection is greater than 0 then\n        set theTarget to finderSelection\n      else\n        try\n          set theTarget to (folder of the front window as alias)\n        on error\n          set theTarget to defaultTarget\n        end try\n      end if\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n    end tell\n  else\n    try\n      set targets to {}\n      set oldDelimiters to text item delimiters\n      set text item delimiters to tab\n      set qArray to every text item of q\n      set text item delimiters to oldDelimiters\n      repeat with atarget in qArray\n\n      if atarget starts with \"~\" then\n        set userHome to POSIX path of (path to home folder)\n        if userHome ends with \"/\" then\n          set userHome to characters 1 thru -2 of userHome as string\n        end if\n\n        try\n          set atarget to userHome & characters 2 thru -1 of atarget as string\n        on error\n          set atarget to userHome\n        end try\n      end if\n\n        set targetAlias to ((POSIX file atarget) as alias)\n        set targets to targets & targetAlias\n      end repeat\n\n      set theTarget to targets\n\n      tell application \"Finder\"\n        open theTarget using appPath\n      end tell\n\n      on error\n        return (input as string) & \" is not a valid file or folder path.\"\n      end try\n  end if\n\n  return input\nend run\n{% endcodeblock %}\n\n而后把这个 Application 保存到 ```~/Applications``` 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……\n\n安装 Package Control\n---\n\n使用快捷键 ``` ⌃ + ` ``` 呼出控制台，在输入框中输入：\n\n{% codeblock \"安装 Package Control:\" lang:python packagecontrol https://packagecontrol.io/installation %}\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n{% endcodeblock %}\n\n安装常用插件\n---\n\n⇧ + ⌘ + P，呼出 Package Control, 输入 Packge install，按回车键，而后选择相应的 Package 安装……\n\n> * SidebarEnhancement\n> * AllAutoComplete\n> * Alignment\n> * SublimeGit\n> * GitGutter\n> * Origami\n> * MarkdownEditing\n> * Ctags\n> * Table Editor\n> * Emmet\n> * Terminal\n> * ColorPicker\n> * FileDiffs\n\n关掉 Vintage\n---\n\nSublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要关掉它，还挺费劲：\n\n{% codeblock \"使用“Shift+Command+P”打开 Package Control\" lang:shell %}\n    Shift+Command+P > Package Control: Disable Packages > Vintage\n{% endcodeblock %}\n\n插件\n===\n\n安装 Package Control\n---\n\n使用快捷键 ⌃ + ` 呼出控制台，在输入框中输入：\n\n{% codeblock \"安装 Package Control:\" lang:python packagecontrol https://packagecontrol.io/installation %}\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\n{% endcodeblock %}\n\n关掉 Vintage\n---\nSublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要彻底关掉它，还挺费劲；最好是通过 Package Control 去做：\n\n{% codeblock 用“⇧+⌘+P”打开 Package Control lang:shell %}\n  Disable Packages > Vintage\n{% endcodeblock %}\n\n常用插件\n---\n\n> * SidebarEnhancement\n> * AllAutoComplete\n> * Alignment\n> * SublimeGit\n> * GitGutter\n> * Origami\n> * MarkdownEditing\n> * Ctags\n> * Table Editor\n> * Emmet\n> * Terminal\n> * ColorPicker\n> * FileDiffs\n\n\n其它\n===\n\nSublimetext 的图标\n---\n\n这两个都不错，反正比原生的强太多了：\n\n> - https://dribbble.com/shots/2273297-Sublime-Text-Icon\n> - https://dribbble.com/shots/337996-Sublime-Text-2-Icon\n\n多台机器使用同一个配置\n---\n\n到```~/Application Support```目录里，把```Packages```和```Installed Packages```这两个目录拷贝到 iCloud 目录里，而后用```ln -s```命令创建硬链：\n\n{% codeblock \"使用 iCloud 同步配置文件\" lang:shell %}\nmkdir ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\nmv ~/Application\\ Support/Sublime\\ Text\\ 3/Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\nmv ~/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3\ncd ~/Application\\ Support/Sublime\\ Text\\ 3\nln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Packages\nln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Installed\\ Packages\n{% endcodeblock %}\n\n\n","slug":"sublimetext","published":1,"updated":"2016-05-28T17:24:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cip0ngbsf000hx9ltzkftpuqp","content":"<h1 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h1><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><!-- toc --></h2><p><a href=\"http://sublimetext.com\" target=\"_blank\" rel=\"external\">Sublimetext</a> 真是个招人喜欢的编辑器…… （我以前用 TextMate，现在彻底转到 Sublimetext 上了。）</p>\n<img src=\"/images/ubuLOF1.gif\" class=\"middle\" title=\"The text editor you\" alt=\"ll fall in love with.\">\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><a href=\"http://sublimetext.com\" target=\"_blank\" rel=\"external\">Sublimetext</a> 可以永远免费使用，但也接受购买，价格是 $70（也支持团购）—— 其实是非常值的，想想它能提高的效率罢，时间比什么都高贵。</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>这种灵活的高级编辑器，往往需要自己不断手动配置，增加各种功能，逐步熟练掌握。</p>\n<h2 id=\"基本配置文件\"><a href=\"#基本配置文件\" class=\"headerlink\" title=\"基本配置文件\"></a>基本配置文件</h2><p>依次点击 Sublimetext 菜单，<code>Sublime Text &gt; Preferences &gt; Settings - User</code>，而后在编辑器里拷贝粘贴以下配置代码保存即可。（暂时看不懂没关系，早晚会一眼看清楚……）</p>\n<figure class=\"highlight javascript\"><figcaption><span>Sublime Text > Preferences > Settings - User</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"color_scheme\"</span>: <span class=\"string\">\"Packages/Color Scheme - Default/Solarized (Dark).tmTheme\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"bold_folder_labels\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_face\"</span>: <span class=\"string\">\"Menlo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_options\"</span>: <span class=\"string\">\"subpixel_antialias\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_size\"</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">  <span class=\"string\">\"highlight_line\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"highlight_modified_tabs\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"ignored_packages\"</span>:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      vintage</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"line_padding_bottom\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"string\">\"line_padding_top\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"string\">\"rulers\"</span>:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      <span class=\"number\">80</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"scroll_past_end\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tab_size\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tab_completion\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"trim_trailing_white_space_on_save\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"word_wrap\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"string\">\"path\"</span>: <span class=\"string\">\"/usr/bin:/bin:/usr/sbin:/sbin\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"从-Terminal-里唤出-Sublimetext\"><a href=\"#从-Terminal-里唤出-Sublimetext\" class=\"headerlink\" title=\"从 Terminal 里唤出 Sublimetext\"></a>从 Terminal 里唤出 Sublimetext</h2><p>一般在命令行下大家喜欢用缩写，比如<code>subl</code>，我觉得没啥必要，反正输入<code>sub</code>之后用<code>⇥</code>自动补全也一样，所以我还是直接用<code>sublime</code>:</p>\n<figure class=\"highlight plain\"><figcaption><span>ln -s sublime</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/sublime</span><br></pre></td></tr></table></figure>\n<h2 id=\"在-Finder-上添加个按钮，“Open-with-sublimetext”\"><a href=\"#在-Finder-上添加个按钮，“Open-with-sublimetext”\" class=\"headerlink\" title=\"在 Finder 上添加个按钮，“Open with sublimetext”\"></a>在 Finder 上添加个按钮，“Open with sublimetext”</h2><p>用 Automator 创建一个 Application（不是 Workflow 或者 Service），添加一个 AppleScript:</p>\n<img src=\"/images/open-with-sublime-applescript.png\">\n<figure class=\"highlight applescript\"><figcaption><span>Automator Application AppleScript</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> appPath <span class=\"keyword\">to</span> <span class=\"built_in\">path to</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Sublime Text\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> defaultTarget <span class=\"keyword\">to</span> (<span class=\"built_in\">path to</span> home folder <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">  <span class=\"comment\">-- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:</span></span><br><span class=\"line\">  <span class=\"comment\">-- set defaultTarget to (path to desktop folder as alias)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) <span class=\"keyword\">is</span> <span class=\"string\">\"\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> (<span class=\"keyword\">get</span> selection)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> finderSelection <span class=\"keyword\">is</span> <span class=\"keyword\">greater than</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> finderSelection</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> defaultTarget</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">set</span> oldDelimiters <span class=\"keyword\">to</span> <span class=\"literal\">text item delimiters</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> <span class=\"literal\">tab</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> qArray <span class=\"keyword\">to</span> <span class=\"keyword\">every</span> <span class=\"built_in\">text</span> <span class=\"built_in\">item</span> <span class=\"keyword\">of</span> q</span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> oldDelimiters</span><br><span class=\"line\">      <span class=\"keyword\">repeat</span> <span class=\"keyword\">with</span> atarget <span class=\"keyword\">in</span> qArray</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> atarget <span class=\"keyword\">starts with</span> <span class=\"string\">\"~\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (<span class=\"built_in\">path to</span> home folder)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userHome <span class=\"keyword\">ends with</span> <span class=\"string\">\"/\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"built_in\">characters</span> <span class=\"number\">1</span> <span class=\"keyword\">thru</span> <span class=\"number\">-2</span> <span class=\"keyword\">of</span> userHome <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome &amp; <span class=\"built_in\">characters</span> <span class=\"number\">2</span> <span class=\"keyword\">thru</span> <span class=\"number\">-1</span> <span class=\"keyword\">of</span> atarget <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span> targetAlias <span class=\"keyword\">to</span> ((<span class=\"keyword\">POSIX file</span> atarget) <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> targets &amp; targetAlias</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">repeat</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> targets</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\"><span class=\"built_in\">        return</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) &amp; <span class=\"string\">\" is not a valid file or folder path.\"</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"><span class=\"built_in\"></span><br><span class=\"line\">  return</span> input</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br></pre></td></tr></table></figure>\n<p>而后把这个 Application 保存到 <code>~/Applications</code> 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……</p>\n<h2 id=\"安装-Package-Control\"><a href=\"#安装-Package-Control\" class=\"headerlink\" title=\"安装 Package Control\"></a>安装 Package Control</h2><p>使用快捷键 <code>⌃ + ` </code> 呼出控制台，在输入框中输入：</p>\n<figure class=\"highlight python\"><figcaption><span>安装 Package Control: packagecontrol</span><a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"external\">link</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> open(os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装常用插件\"><a href=\"#安装常用插件\" class=\"headerlink\" title=\"安装常用插件\"></a>安装常用插件</h2><p>⇧ + ⌘ + P，呼出 Package Control, 输入 Packge install，按回车键，而后选择相应的 Package 安装……</p>\n<blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>AllAutoComplete</li>\n<li>Alignment</li>\n<li>SublimeGit</li>\n<li>GitGutter</li>\n<li>Origami</li>\n<li>MarkdownEditing</li>\n<li>Ctags</li>\n<li>Table Editor</li>\n<li>Emmet</li>\n<li>Terminal</li>\n<li>ColorPicker</li>\n<li>FileDiffs</li>\n</ul>\n</blockquote>\n<h2 id=\"关掉-Vintage\"><a href=\"#关掉-Vintage\" class=\"headerlink\" title=\"关掉 Vintage\"></a>关掉 Vintage</h2><p>Sublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要关掉它，还挺费劲：</p>\n<figure class=\"highlight plain\"><figcaption><span>使用“Shift+Command+P”打开 Package Control</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">Shift+Command+P &gt; Package Control: Disable Packages &gt; Vintage</span><br></pre></td></tr></table></figure>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><h2 id=\"安装-Package-Control-1\"><a href=\"#安装-Package-Control-1\" class=\"headerlink\" title=\"安装 Package Control\"></a>安装 Package Control</h2><p>使用快捷键 ⌃ + ` 呼出控制台，在输入框中输入：</p>\n<figure class=\"highlight python\"><figcaption><span>安装 Package Control: packagecontrol</span><a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"external\">link</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> open(os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>\n<h2 id=\"关掉-Vintage-1\"><a href=\"#关掉-Vintage-1\" class=\"headerlink\" title=\"关掉 Vintage\"></a>关掉 Vintage</h2><p>Sublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要彻底关掉它，还挺费劲；最好是通过 Package Control 去做：</p>\n<figure class=\"highlight plain\"><figcaption><span>用“⇧+⌘+P”打开 Package Control</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">Disable Packages &gt; Vintage</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>AllAutoComplete</li>\n<li>Alignment</li>\n<li>SublimeGit</li>\n<li>GitGutter</li>\n<li>Origami</li>\n<li>MarkdownEditing</li>\n<li>Ctags</li>\n<li>Table Editor</li>\n<li>Emmet</li>\n<li>Terminal</li>\n<li>ColorPicker</li>\n<li>FileDiffs</li>\n</ul>\n</blockquote>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><h2 id=\"Sublimetext-的图标\"><a href=\"#Sublimetext-的图标\" class=\"headerlink\" title=\"Sublimetext 的图标\"></a>Sublimetext 的图标</h2><p>这两个都不错，反正比原生的强太多了：</p>\n<blockquote>\n<ul>\n<li><a href=\"https://dribbble.com/shots/2273297-Sublime-Text-Icon\" target=\"_blank\" rel=\"external\">https://dribbble.com/shots/2273297-Sublime-Text-Icon</a></li>\n<li><a href=\"https://dribbble.com/shots/337996-Sublime-Text-2-Icon\" target=\"_blank\" rel=\"external\">https://dribbble.com/shots/337996-Sublime-Text-2-Icon</a></li>\n</ul>\n</blockquote>\n<h2 id=\"多台机器使用同一个配置\"><a href=\"#多台机器使用同一个配置\" class=\"headerlink\" title=\"多台机器使用同一个配置\"></a>多台机器使用同一个配置</h2><p>到<code>~/Application Support</code>目录里，把<code>Packages</code>和<code>Installed Packages</code>这两个目录拷贝到 iCloud 目录里，而后用<code>ln -s</code>命令创建硬链：</p>\n<figure class=\"highlight plain\"><figcaption><span>使用 iCloud 同步配置文件</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">mv ~/Application\\ Support/Sublime\\ Text\\ 3/Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">mv ~/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">cd ~/Application\\ Support/Sublime\\ Text\\ 3</span><br><span class=\"line\">ln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Packages</span><br><span class=\"line\">ln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Installed\\ Packages</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h1><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><!-- toc --></h2><p><a href=\"http://sublimetext.com\">Sublimetext</a> 真是个招人喜欢的编辑器…… （我以前用 TextMate，现在彻底转到 Sublimetext 上了。）</p>\n<img src=\"/images/ubuLOF1.gif\" class=\"middle\" title=\"The text editor you\" alt=\"ll fall in love with.\">\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><a href=\"http://sublimetext.com\">Sublimetext</a> 可以永远免费使用，但也接受购买，价格是 $70（也支持团购）—— 其实是非常值的，想想它能提高的效率罢，时间比什么都高贵。</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>这种灵活的高级编辑器，往往需要自己不断手动配置，增加各种功能，逐步熟练掌握。</p>\n<h2 id=\"基本配置文件\"><a href=\"#基本配置文件\" class=\"headerlink\" title=\"基本配置文件\"></a>基本配置文件</h2><p>依次点击 Sublimetext 菜单，<code>Sublime Text &gt; Preferences &gt; Settings - User</code>，而后在编辑器里拷贝粘贴以下配置代码保存即可。（暂时看不懂没关系，早晚会一眼看清楚……）</p>\n<figure class=\"highlight javascript\"><figcaption><span>Sublime Text > Preferences > Settings - User</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"color_scheme\"</span>: <span class=\"string\">\"Packages/Color Scheme - Default/Solarized (Dark).tmTheme\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"bold_folder_labels\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_face\"</span>: <span class=\"string\">\"Menlo\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_options\"</span>: <span class=\"string\">\"subpixel_antialias\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"font_size\"</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">  <span class=\"string\">\"highlight_line\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"highlight_modified_tabs\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"ignored_packages\"</span>:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      vintage</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"line_padding_bottom\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"string\">\"line_padding_top\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"string\">\"rulers\"</span>:</span><br><span class=\"line\">  [</span><br><span class=\"line\">      <span class=\"number\">80</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"scroll_past_end\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tab_size\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tab_completion\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"trim_trailing_white_space_on_save\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"word_wrap\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"string\">\"path\"</span>: <span class=\"string\">\"/usr/bin:/bin:/usr/sbin:/sbin\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"从-Terminal-里唤出-Sublimetext\"><a href=\"#从-Terminal-里唤出-Sublimetext\" class=\"headerlink\" title=\"从 Terminal 里唤出 Sublimetext\"></a>从 Terminal 里唤出 Sublimetext</h2><p>一般在命令行下大家喜欢用缩写，比如<code>subl</code>，我觉得没啥必要，反正输入<code>sub</code>之后用<code>⇥</code>自动补全也一样，所以我还是直接用<code>sublime</code>:</p>\n<figure class=\"highlight plain\"><figcaption><span>ln -s sublime</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">ln -s &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/sublime</span><br></pre></td></tr></table></figure>\n<h2 id=\"在-Finder-上添加个按钮，“Open-with-sublimetext”\"><a href=\"#在-Finder-上添加个按钮，“Open-with-sublimetext”\" class=\"headerlink\" title=\"在 Finder 上添加个按钮，“Open with sublimetext”\"></a>在 Finder 上添加个按钮，“Open with sublimetext”</h2><p>用 Automator 创建一个 Application（不是 Workflow 或者 Service），添加一个 AppleScript:</p>\n<img src=\"/images/open-with-sublime-applescript.png\">\n<figure class=\"highlight applescript\"><figcaption><span>Automator Application AppleScript</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"built_in\">run</span> &#123;input, parameters&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> appPath <span class=\"keyword\">to</span> <span class=\"built_in\">path to</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Sublime Text\"</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> defaultTarget <span class=\"keyword\">to</span> (<span class=\"built_in\">path to</span> home folder <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">  <span class=\"comment\">-- comment line above and uncomment line below to open desktop instead of user home when there's no selection or open folder in the Finder:</span></span><br><span class=\"line\">  <span class=\"comment\">-- set defaultTarget to (path to desktop folder as alias)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) <span class=\"keyword\">is</span> <span class=\"string\">\"\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> finderSelection <span class=\"keyword\">to</span> (<span class=\"keyword\">get</span> selection)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"built_in\">length</span> <span class=\"keyword\">of</span> finderSelection <span class=\"keyword\">is</span> <span class=\"keyword\">greater than</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> finderSelection</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> (folder <span class=\"keyword\">of</span> <span class=\"keyword\">the</span> <span class=\"keyword\">front</span> window <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> defaultTarget</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">set</span> oldDelimiters <span class=\"keyword\">to</span> <span class=\"literal\">text item delimiters</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> <span class=\"literal\">tab</span></span><br><span class=\"line\">      <span class=\"keyword\">set</span> qArray <span class=\"keyword\">to</span> <span class=\"keyword\">every</span> <span class=\"built_in\">text</span> <span class=\"built_in\">item</span> <span class=\"keyword\">of</span> q</span><br><span class=\"line\">      <span class=\"keyword\">set</span> <span class=\"literal\">text item delimiters</span> <span class=\"keyword\">to</span> oldDelimiters</span><br><span class=\"line\">      <span class=\"keyword\">repeat</span> <span class=\"keyword\">with</span> atarget <span class=\"keyword\">in</span> qArray</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> atarget <span class=\"keyword\">starts with</span> <span class=\"string\">\"~\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"keyword\">POSIX path</span> <span class=\"keyword\">of</span> (<span class=\"built_in\">path to</span> home folder)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> userHome <span class=\"keyword\">ends with</span> <span class=\"string\">\"/\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> userHome <span class=\"keyword\">to</span> <span class=\"built_in\">characters</span> <span class=\"number\">1</span> <span class=\"keyword\">thru</span> <span class=\"number\">-2</span> <span class=\"keyword\">of</span> userHome <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome &amp; <span class=\"built_in\">characters</span> <span class=\"number\">2</span> <span class=\"keyword\">thru</span> <span class=\"number\">-1</span> <span class=\"keyword\">of</span> atarget <span class=\"keyword\">as</span> <span class=\"built_in\">string</span></span><br><span class=\"line\">        <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\">          <span class=\"keyword\">set</span> atarget <span class=\"keyword\">to</span> userHome</span><br><span class=\"line\">        <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span> targetAlias <span class=\"keyword\">to</span> ((<span class=\"keyword\">POSIX file</span> atarget) <span class=\"keyword\">as</span> <span class=\"built_in\">alias</span>)</span><br><span class=\"line\">        <span class=\"keyword\">set</span> targets <span class=\"keyword\">to</span> targets &amp; targetAlias</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">repeat</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">set</span> theTarget <span class=\"keyword\">to</span> targets</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">\"Finder\"</span></span><br><span class=\"line\">        open theTarget using appPath</span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">on</span> <span class=\"keyword\">error</span></span><br><span class=\"line\"><span class=\"built_in\">        return</span> (input <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) &amp; <span class=\"string\">\" is not a valid file or folder path.\"</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span> <span class=\"keyword\">try</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> <span class=\"keyword\">if</span></span><br><span class=\"line\"><span class=\"built_in\"></span><br><span class=\"line\">  return</span> input</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"built_in\">run</span></span><br></pre></td></tr></table></figure>\n<p>而后把这个 Application 保存到 <code>~/Applications</code> 目录中，在按住 Command 键的同时，将这个程序拖到 Finder 工具栏上……</p>\n<h2 id=\"安装-Package-Control\"><a href=\"#安装-Package-Control\" class=\"headerlink\" title=\"安装 Package Control\"></a>安装 Package Control</h2><p>使用快捷键 <code>⌃ + ` </code> 呼出控制台，在输入框中输入：</p>\n<figure class=\"highlight python\"><figcaption><span>安装 Package Control: packagecontrol</span><a href=\"https://packagecontrol.io/installation\">link</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> open(os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装常用插件\"><a href=\"#安装常用插件\" class=\"headerlink\" title=\"安装常用插件\"></a>安装常用插件</h2><p>⇧ + ⌘ + P，呼出 Package Control, 输入 Packge install，按回车键，而后选择相应的 Package 安装……</p>\n<blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>AllAutoComplete</li>\n<li>Alignment</li>\n<li>SublimeGit</li>\n<li>GitGutter</li>\n<li>Origami</li>\n<li>MarkdownEditing</li>\n<li>Ctags</li>\n<li>Table Editor</li>\n<li>Emmet</li>\n<li>Terminal</li>\n<li>ColorPicker</li>\n<li>FileDiffs</li>\n</ul>\n</blockquote>\n<h2 id=\"关掉-Vintage\"><a href=\"#关掉-Vintage\" class=\"headerlink\" title=\"关掉 Vintage\"></a>关掉 Vintage</h2><p>Sublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要关掉它，还挺费劲：</p>\n<figure class=\"highlight plain\"><figcaption><span>使用“Shift+Command+P”打开 Package Control</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">Shift+Command+P &gt; Package Control: Disable Packages &gt; Vintage</span><br></pre></td></tr></table></figure>\n<h1 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h1><h2 id=\"安装-Package-Control-1\"><a href=\"#安装-Package-Control-1\" class=\"headerlink\" title=\"安装 Package Control\"></a>安装 Package Control</h2><p>使用快捷键 ⌃ + ` 呼出控制台，在输入框中输入：</p>\n<figure class=\"highlight python\"><figcaption><span>安装 Package Control: packagecontrol</span><a href=\"https://packagecontrol.io/installation\">link</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request,os,hashlib; h = <span class=\"string\">'2915d1851351e5ee549c20394736b442'</span> + <span class=\"string\">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> open(os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>\n<h2 id=\"关掉-Vintage-1\"><a href=\"#关掉-Vintage-1\" class=\"headerlink\" title=\"关掉 Vintage\"></a>关掉 Vintage</h2><p>Sublimetext 兼容那个神一样的编辑器 Vi/Vim，所以也有 Visual/Comman/Insert 模式，可对于那些不使用或者不会使用 Vi/Vim 的人来说，这个模式很耽误事儿，想要彻底关掉它，还挺费劲；最好是通过 Package Control 去做：</p>\n<figure class=\"highlight plain\"><figcaption><span>用“⇧+⌘+P”打开 Package Control</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">Disable Packages &gt; Vintage</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><blockquote>\n<ul>\n<li>SidebarEnhancement</li>\n<li>AllAutoComplete</li>\n<li>Alignment</li>\n<li>SublimeGit</li>\n<li>GitGutter</li>\n<li>Origami</li>\n<li>MarkdownEditing</li>\n<li>Ctags</li>\n<li>Table Editor</li>\n<li>Emmet</li>\n<li>Terminal</li>\n<li>ColorPicker</li>\n<li>FileDiffs</li>\n</ul>\n</blockquote>\n<h1 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h1><h2 id=\"Sublimetext-的图标\"><a href=\"#Sublimetext-的图标\" class=\"headerlink\" title=\"Sublimetext 的图标\"></a>Sublimetext 的图标</h2><p>这两个都不错，反正比原生的强太多了：</p>\n<blockquote>\n<ul>\n<li><a href=\"https://dribbble.com/shots/2273297-Sublime-Text-Icon\">https://dribbble.com/shots/2273297-Sublime-Text-Icon</a></li>\n<li><a href=\"https://dribbble.com/shots/337996-Sublime-Text-2-Icon\">https://dribbble.com/shots/337996-Sublime-Text-2-Icon</a></li>\n</ul>\n</blockquote>\n<h2 id=\"多台机器使用同一个配置\"><a href=\"#多台机器使用同一个配置\" class=\"headerlink\" title=\"多台机器使用同一个配置\"></a>多台机器使用同一个配置</h2><p>到<code>~/Application Support</code>目录里，把<code>Packages</code>和<code>Installed Packages</code>这两个目录拷贝到 iCloud 目录里，而后用<code>ln -s</code>命令创建硬链：</p>\n<figure class=\"highlight plain\"><figcaption><span>使用 iCloud 同步配置文件</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">mv ~/Application\\ Support/Sublime\\ Text\\ 3/Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">mv ~/Application\\ Support/Sublime\\ Text\\ 3/Installed\\ Packages ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3</span><br><span class=\"line\">cd ~/Application\\ Support/Sublime\\ Text\\ 3</span><br><span class=\"line\">ln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Packages</span><br><span class=\"line\">ln -s ~/Library/Mobile\\ Documents/com~apple~CloudDocs/Sublime\\ Text\\ 3/Installed\\ Packages</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cip0ngbp40000x9ltrph7yobh","tag_id":"cip0ngbpa0003x9ltn4jb9htx","_id":"cip0ngbpg0008x9lto4ez9zz2"},{"post_id":"cip0ngbp80002x9lt55k5ki1m","tag_id":"cip0ngbpf0006x9ltkpw6u657","_id":"cip0ngbph000ax9ltzc1cs7u4"},{"post_id":"cip0ngbpc0004x9ltk0v2llbj","tag_id":"cip0ngbph0009x9lt4bwjtczv","_id":"cip0ngbph000cx9lta2txkhx4"},{"post_id":"cip0ngbpe0005x9lt4won1u6m","tag_id":"cip0ngbph000bx9ltfdem26v6","_id":"cip0ngbpi000ex9lt6jf95s15"},{"post_id":"cip0ngbpg0007x9ltmlhuefo0","tag_id":"cip0ngbpi000dx9lt120ank54","_id":"cip0ngbpi000fx9ltztb2s2nv"},{"post_id":"cip0ngbsf000hx9ltzkftpuqp","tag_id":"cip0ngbpa0003x9ltn4jb9htx","_id":"cip0ngbsj000jx9lt77dnjb0c"}],"Tag":[{"name":"工具","_id":"cip0ngbpa0003x9ltn4jb9htx"},{"name":"npm","_id":"cip0ngbpf0006x9ltkpw6u657"},{"name":"未分类","_id":"cip0ngbph0009x9lt4bwjtczv"},{"name":"language","_id":"cip0ngbph000bx9ltfdem26v6"},{"name":"sublimetext texteditor puretext","_id":"cip0ngbpi000dx9lt120ank54"}]}}